android.support.v4.app.ActivityCompatHoneycomb -> a:
    android.support.v4.app.ActivityCompatHoneycomb next$fe619d5 -> a
    android.support.v4.app.ActivityCompatHoneycomb prev$fe619d5 -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
    28:46:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    133:139:void closeQuietly(java.io.Closeable) -> a
    168:172:int copy(java.io.InputStream,java.io.OutputStream) -> a
    57:58:java.lang.String getPrettyCount(int) -> a
    66:66:java.lang.String getPrettyDate(java.util.Date) -> a
    175:175:java.lang.String trimLeftRight(java.lang.String) -> a
    183:196:boolean tagEquals(java.lang.Object,int) -> a
    204:222:java.util.ArrayList getUrlsInString(java.lang.String) -> b
    229:235:java.net.URL parseURL(java.lang.String) -> c
    320:325:void copyFile(java.io.InputStream,java.io.OutputStream) -> b
android.support.v4.app.BackStackRecord -> b:
    android.support.v4.app.FragmentManagerImpl mManager -> l
    android.support.v4.app.ActivityCompatHoneycomb mHead$fe619d5 -> a
    android.support.v4.app.ActivityCompatHoneycomb mTail$fe619d5 -> m
    int mNumOp -> b
    int mTransition -> c
    int mTransitionStyle -> d
    boolean mAddToBackStack -> e
    java.lang.String mName -> f
    boolean mCommitted -> n
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    212:284:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    317:329:void addOp$568ae146(android.support.v4.app.ActivityCompatHoneycomb) -> a
    337:338:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    342:343:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    347:371:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    387:392:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    396:401:android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    405:410:android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    414:419:android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    423:428:android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    502:522:void bumpBackStackNesting(int) -> a
    525:525:int commit() -> a
    529:529:int commitAllowingStateLoss() -> b
    533:542:int commitInternal(boolean) -> b
    546:628:void run() -> run
    631:705:void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackState -> c:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    95:130:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    134:134:int describeContents() -> describeContents
    138:147:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> d:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> J
    int mTheme -> K
    boolean mCancelable -> L
    boolean mShowsDialog -> M
    int mBackStackId -> N
    android.app.Dialog mDialog -> O
    boolean mRemoved -> P
    232:244:void onCreate(android.os.Bundle) -> a
    249:265:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    296:296:void onCancel(android.content.DialogInterface) -> onCancel
    299:306:void onDismiss(android.content.DialogInterface) -> onDismiss
    310:333:void onActivityCreated(android.os.Bundle) -> c
    337:342:void onStart() -> a
    346:368:void onSaveInstanceState(android.os.Bundle) -> d
    372:376:void onStop() -> b
    383:393:void onDestroyView() -> c
android.support.v4.app.Fragment -> e:
    java.util.HashMap sClassMap -> J
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> K
    android.os.Bundle mArguments -> g
    android.support.v4.app.Fragment mTarget -> h
    int mTargetIndex -> i
    int mTargetRequestCode -> j
    boolean mAdded -> k
    boolean mRemoving -> l
    boolean mResumed -> m
    boolean mFromLayout -> n
    boolean mInLayout -> o
    boolean mRestored -> p
    int mBackStackNesting -> q
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> r
    android.support.v4.app.FragmentActivity mActivity -> s
    int mFragmentId -> t
    int mContainerId -> u
    java.lang.String mTag -> v
    boolean mHidden -> w
    boolean mDetached -> x
    boolean mRetainInstance -> y
    boolean mRetaining -> z
    boolean mMenuVisible -> A
    boolean mCalled -> B
    int mNextAnim -> C
    android.view.ViewGroup mContainer -> D
    android.view.View mView -> E
    android.view.View mInnerView -> F
    boolean mDeferStart -> G
    boolean mUserVisibleHint -> H
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> I
    boolean mLoadersStarted -> L
    boolean mCheckedForLoaderManager -> M
    360:360:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    379:400:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    407:411:void restoreViewState() -> d
    414:416:void setIndex(int) -> a
    419:419:boolean isInBackStack() -> e
    426:426:boolean equals(java.lang.Object) -> equals
    433:433:int hashCode() -> hashCode
    438:453:java.lang.String toString() -> toString
    503:508:void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    544:544:android.support.v4.app.FragmentActivity getActivity() -> f
    551:554:android.content.res.Resources getResources() -> g
    577:580:java.lang.String getString(int) -> b
    683:683:void onHiddenChanged$1385ff() -> h
    733:735:void setMenuVisibility(boolean) -> a
    755:760:void setUserVisibleHint(boolean) -> b
    822:822:void onActivityResult$6eb84b52() -> i
    830:830:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    876:877:void onInflate$423a76cd() -> j
    884:885:void onAttach$63a22f9() -> k
    891:891:android.view.animation.Animation onCreateAnimation$24236ca7() -> l
    909:910:void onCreate(android.os.Bundle) -> a
    933:933:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    947:947:void onViewCreated(android.view.View,android.os.Bundle) -> a
    956:956:android.view.View getView() -> m
    973:974:void onActivityCreated(android.os.Bundle) -> c
    982:994:void onStart() -> a
    1003:1004:void onResume() -> n
    1026:1026:void onSaveInstanceState(android.os.Bundle) -> d
    1029:1030:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1038:1039:void onPause() -> o
    1047:1048:void onStop() -> b
    1051:1052:void onLowMemory() -> onLowMemory
    1064:1065:void onDestroyView() -> c
    1072:1082:void onDestroy() -> p
    1091:1111:void initState() -> q
    1118:1119:void onDetach() -> r
    1162:1162:void onDestroyOptionsMenu() -> s
    1183:1183:boolean onOptionsItemSelected(android.view.MenuItem) -> a
    1214:1215:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1260:1260:boolean onContextItemSelected$1b88ab4c() -> t
    1273:1339:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    1342:1346:void performStart() -> u
    1349:1350:void performStop() -> v
    1353:1367:void performReallyStop() -> w
    1370:1374:void performDestroyView() -> x
android.support.v4.app.Fragment$InstantiationException -> f:
android.support.v4.app.Fragment$SavedState -> g:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    304:304:int describeContents() -> describeContents
    309:310:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> h:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> e
    boolean mResumed -> f
    boolean mStopped -> c
    boolean mReallyStopped -> g
    boolean mRetaining -> d
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    139:157:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    164:167:void onBackPressed() -> onBackPressed
    174:176:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    183:201:void onCreate(android.os.Bundle) -> onCreate
    208:219:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    227:302:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    310:318:void onDestroy() -> onDestroy
    325:334:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    342:344:void onLowMemory() -> onLowMemory
    351:363:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    372:378:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    385:392:void onPause() -> onPause
    399:403:void onResume() -> onResume
    410:414:void onPostResume() -> onPostResume
    421:431:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    441:472:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    480:485:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    493:526:void onStart() -> onStart
    533:539:void onStop() -> onStop
    569:579:void supportInvalidateOptionsMenu() -> a
    592:614:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    617:623:void doReallyStop(boolean) -> a
    655:655:void onAttachFragment$65850823() -> b
    671:675:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    694:701:void invalidateSupportFragmentIndex(int) -> a
    720:732:android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> i:
    android.support.v4.app.FragmentActivity this$0 -> a
    82:95:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> j:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> k:
    java.util.ArrayList fragments -> a
    android.support.v4.app.HCSparseArray loaders -> b
android.support.v4.app.FragmentManager -> l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> m:
android.support.v4.app.FragmentManagerImpl -> n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> g
    java.util.ArrayList mPendingActions -> h
    java.lang.Runnable[] mTmpActions -> i
    boolean mExecutingActions -> j
    java.util.ArrayList mActive -> b
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mAvailIndices -> k
    java.util.ArrayList mBackStack -> l
    java.util.ArrayList mCreatedMenus -> m
    java.util.ArrayList mBackStackIndices -> n
    java.util.ArrayList mAvailBackStackIndices -> o
    int mCurState -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> f
    boolean mHavePendingDeferredStart -> s
    android.os.Bundle mStateBundle -> t
    android.util.SparseArray mStateArray -> u
    java.lang.Runnable mExecCommit -> v
    android.view.animation.Interpolator DECELERATE_QUINT -> w
    android.view.animation.Interpolator DECELERATE_CUBIC -> x
    426:426:android.support.v4.app.FragmentTransaction beginTransaction() -> a
    431:431:boolean executePendingTransactions() -> b
    445:447:boolean popBackStackImmediate() -> c
    468:476:void popBackStack(int,int) -> a
    515:520:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    524:537:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    542:550:android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    555:561:java.lang.String toString() -> toString
    566:670:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    681:691:android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    695:698:android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    703:757:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    761:770:void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    774:1055:void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    1058:1059:void moveToState(android.support.v4.app.Fragment) -> c
    1062:1063:void moveToState(int,boolean) -> a
    1066:1096:void moveToState(int,int,int,boolean) -> a
    1099:1107:void startPendingDeferredFragments() -> q
    1143:1159:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1162:1174:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1177:1193:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1196:1212:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1215:1228:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1231:1243:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1246:1262:android.support.v4.app.Fragment findFragmentById(int) -> a
    1266:1282:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    1298:1306:void checkStateLoss() -> r
    1309:1312:void enqueueAction(java.lang.Runnable,boolean) -> a
    1328:1328:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    1348:1348:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1373:1373:void freeBackStackIndex(int) -> b
    1387:1436:boolean execPendingActions() -> d
    1448:1453:void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    1456:1515:boolean popBackStackState$68507953(java.lang.String,int,int) -> a
    1519:1533:java.util.ArrayList retainNonConfig() -> e
    1537:1550:void saveFragmentViewState(android.support.v4.app.Fragment) -> d
    1553:1579:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> e
    1585:1686:android.os.Parcelable saveAllState() -> f
    1692:1792:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    1795:1797:void attachActivity(android.support.v4.app.FragmentActivity) -> a
    1800:1801:void noteStateNotSaved() -> g
    1804:1806:void dispatchCreate() -> h
    1809:1811:void dispatchActivityCreated() -> i
    1814:1816:void dispatchStart() -> j
    1819:1821:void dispatchResume() -> k
    1824:1825:void dispatchPause() -> l
    1831:1834:void dispatchStop() -> m
    1837:1838:void dispatchReallyStop() -> n
    1841:1845:void dispatchDestroy() -> o
    1848:1856:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    1859:1867:void dispatchLowMemory() -> p
    1870:1897:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1901:1911:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    1915:1925:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    1929:1939:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    1943:1951:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    1954:1966:int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    420:421:void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> p:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    int val$id -> b
    int val$flags -> c
    473:474:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    android.support.v4.app.Fragment val$fragment -> b
    983:988:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    991:991:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    994:994:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> r:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    353:353:int describeContents() -> describeContents
    357:360:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> s:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
android.support.v4.app.FragmentPagerAdapter -> t:
    android.support.v4.app.FragmentManager mFragmentManager -> b
    android.support.v4.app.FragmentTransaction mCurTransaction -> c
    android.support.v4.app.Fragment mCurrentPrimaryItem -> d
    android.support.v4.app.Fragment getItem(int) -> a
    84:105:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    110:116:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    120:132:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    136:141:void finishUpdate(android.view.ViewGroup) -> a
    145:145:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    150:150:android.os.Parcelable saveState() -> a
    155:155:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    158:158:java.lang.String makeFragmentName(int,int) -> a
android.support.v4.app.FragmentState -> u:
    java.lang.String mClassName -> c
    int mIndex -> d
    boolean mFromLayout -> e
    int mFragmentId -> f
    int mContainerId -> g
    java.lang.String mTag -> h
    boolean mRetainInstance -> i
    boolean mDetached -> j
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> a
    android.support.v4.app.Fragment mInstance -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    88:112:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    116:116:int describeContents() -> describeContents
    120:130:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> v:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
android.support.v4.app.FragmentStatePagerAdapter -> w:
    android.support.v4.app.FragmentManager mFragmentManager -> b
    android.support.v4.app.FragmentTransaction mCurTransaction -> c
    java.util.ArrayList mSavedState -> d
    java.util.ArrayList mFragments -> e
    android.support.v4.app.Fragment mCurrentPrimaryItem -> f
    android.support.v4.app.Fragment getItem(int) -> a
    94:120:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    125:139:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    143:153:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    157:162:void finishUpdate(android.view.ViewGroup) -> a
    166:166:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    171:188:android.os.Parcelable saveState() -> a
    193:221:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTransaction -> x:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.HCSparseArray -> y:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    52:52:java.lang.Object get(int) -> a
    88:89:void remove(int) -> b
    95:99:void removeAt(int) -> c
    104:126:void gc() -> c
    185:189:int size() -> a
    198:202:int keyAt(int) -> d
    212:216:java.lang.Object valueAt(int) -> e
    269:278:void clear() -> b
    315:331:int binarySearch(int[],int,int,int) -> a
    343:343:int idealIntArraySize(int) -> f
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> K
    java.lang.Runnable mRequestFocus -> L
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> M
    android.widget.ListAdapter mAdapter -> N
    android.widget.ListView mList -> J
    android.view.View mEmptyView -> O
    android.widget.TextView mStandardEmptyView -> P
    android.view.View mProgressContainer -> Q
    android.view.View mListContainer -> R
    boolean mListShown -> S
    91:136:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    144:146:void onViewCreated(android.view.View,android.os.Bundle) -> a
    153:159:void onDestroyView() -> c
    173:173:void onListItemClick$42a3bb55() -> y
    280:313:void setListShown(boolean,boolean) -> a
    323:374:void ensureList() -> z
android.support.v4.app.ListFragment$1 -> z:
    android.support.v4.app.ListFragment this$0 -> a
    51:52:void run() -> run
android.support.v4.app.ListFragment$2 -> A:
    android.support.v4.app.ListFragment this$0 -> a
    58:59:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> B:
    183:183:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl -> C:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> d
    android.support.v4.app.HCSparseArray mInactiveLoaders -> e
    android.support.v4.app.FragmentActivity mActivity -> b
    boolean mStarted -> f
    boolean mRetaining -> c
    480:481:void updateActivity(android.support.v4.app.FragmentActivity) -> a
    697:712:void doStart() -> b
    715:727:void doStop() -> c
    730:743:void doRetain() -> d
    746:754:void finishRetain() -> e
    757:760:void doReportNextStart() -> f
    763:766:void doReportStart() -> g
    769:781:void doDestroy() -> h
    785:791:java.lang.String toString() -> toString
    796:816:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    820:826:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> D:
    int mId -> a
    android.os.Bundle mArgs -> j
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mCallbacks$641e715d -> b
    android.support.v4.content.Loader mLoader -> c
    boolean mHaveData -> k
    boolean mDeliveredData -> d
    java.lang.Object mData -> l
    boolean mStarted -> e
    boolean mRetaining -> f
    boolean mRetainingStarted -> g
    boolean mReportNextStart -> h
    boolean mDestroyed -> m
    boolean mListenerRegistered -> i
    311:321:void stop() -> a
    324:353:void destroy() -> b
    436:444:java.lang.String toString() -> toString
    448:466:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> E:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> F:
android.support.v4.content.Loader -> G:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    142:149:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    349:354:java.lang.String toString() -> toString
android.support.v4.content.Loader$OnLoadCompleteListener -> H:
android.support.v4.content.LocalBroadcastManager -> I:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    100:100:android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    134:134:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    164:164:void unregisterReceiver(android.content.BroadcastReceiver) -> a
    201:268:boolean sendBroadcast(android.content.Intent) -> a
    282:282:void access$0(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> J:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    114:121:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> K:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> L:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    59:65:java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat$CompatCreator -> M:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    51:51:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> N:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> O:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.LogWriter -> P:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> a
android.support.v4.view.KeyEventCompat -> Q:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    139:139:boolean hasModifiers(android.view.KeyEvent,int) -> a
    143:143:boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> R:
    49:61:int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    67:73:int normalizeMetaState(int) -> b
    78:83:boolean metaStateHasModifiers(int,int) -> a
    88:88:boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> S:
    103:103:boolean metaStateHasModifiers(int,int) -> a
    108:108:boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> T:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> U:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    156:156:int getActionIndex(android.view.MotionEvent) -> a
    166:166:int findPointerIndex(android.view.MotionEvent,int) -> a
    175:175:int getPointerId(android.view.MotionEvent,int) -> b
    184:184:float getX(android.view.MotionEvent,int) -> c
    193:193:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> V:
    42:46:int findPointerIndex(android.view.MotionEvent,int) -> a
    50:54:int getPointerId(android.view.MotionEvent,int) -> b
    58:61:float getX(android.view.MotionEvent,int) -> c
    65:68:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> W:
    78:78:int findPointerIndex(android.view.MotionEvent,int) -> a
    82:82:int getPointerId(android.view.MotionEvent,int) -> b
    86:86:float getX(android.view.MotionEvent,int) -> c
    90:90:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> X:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> Y:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    110:110:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    124:124:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    137:137:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    148:148:void finishUpdate(android.view.ViewGroup) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    239:239:android.os.Parcelable saveState() -> a
    250:250:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    268:268:int getItemPosition$5d527804() -> c
    280:281:void registerDataSetObserver(android.database.DataSetObserver) -> a
    284:285:void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    116:131:void onAttachedToWindow() -> onAttachedToWindow
    135:139:void onDetachedFromWindow() -> onDetachedFromWindow
    142:176:void updateText(int,android.support.v4.view.PagerAdapter) -> a
    180:183:void requestLayout() -> requestLayout
    186:198:void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    201:244:void updateTextPositions(int,float) -> a
    248:281:void onMeasure(int,int) -> onMeasure
    285:288:void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$PageListener -> Z:
    int mScrollState -> a
    android.support.v4.view.PagerTitleStrip this$0 -> b
    296:301:void onPageScrolled(int,float,int) -> a
    305:309:void onPageSelected(int,int) -> a
    313:314:void onPageScrollStateChanged(int) -> a
    318:319:void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    323:324:void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> aa:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    82:82:float getXVelocity(android.view.VelocityTracker,int) -> a
    91:91:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> ab:
    40:40:float getXVelocity(android.view.VelocityTracker,int) -> a
    44:44:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> ac:
    54:54:float getXVelocity(android.view.VelocityTracker,int) -> a
    58:58:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> ad:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> ae:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    142:142:boolean canScrollHorizontally(android.view.View,int) -> a
    166:166:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> af:
    87:87:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> ag:
    98:98:boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> ah:
    59:59:boolean canScrollHorizontally(android.view.View,int) -> a
    65:65:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> ai:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    73:73:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> aj:
    39:39:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> ak:
    49:49:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> al:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    android.support.v4.view.ViewPager$PagerObserver mObserver -> k
    int mPageMargin -> l
    android.graphics.drawable.Drawable mMarginDrawable -> m
    int mTopPageBounds -> n
    int mBottomPageBounds -> o
    int mChildWidthMeasureSpec -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    boolean mScrolling -> u
    int mOffscreenPageLimit -> v
    boolean mIsBeingDragged -> w
    boolean mIsUnableToDrag -> x
    int mTouchSlop -> y
    float mInitialMotionX -> z
    float mLastMotionX -> A
    float mLastMotionY -> B
    int mActivePointerId -> C
    android.view.VelocityTracker mVelocityTracker -> D
    int mMinimumVelocity -> E
    int mMaximumVelocity -> F
    int mFlingDistance -> G
    boolean mFakeDragging -> H
    long mFakeDragBeginTime -> I
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> J
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> K
    boolean mFirstLayout -> L
    boolean mCalledSuper -> M
    int mDecorChildCount -> N
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> O
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> P
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Q
    int mScrollState -> R
    281:295:void initViewPager() -> h
    298:306:void setScrollState(int) -> a
    314:351:void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    370:370:android.support.v4.view.PagerAdapter getAdapter() -> a
    374:375:void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    385:387:void setCurrentItem(int) -> setCurrentItem
    396:398:void setCurrentItem(int,boolean) -> setCurrentItem
    401:401:int getCurrentItem() -> b
    405:406:void setCurrentItemInternal(int,boolean,boolean) -> a
    409:454:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    463:464:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    473:475:android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    507:516:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    527:534:void setPageMargin(int) -> setPageMargin
    551:555:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    563:564:void setPageMarginDrawable(int) -> setPageMarginDrawable
    568:568:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    573:578:void drawableStateChanged() -> drawableStateChanged
    648:656:void addNewItem(int,int) -> a
    661:718:void dataSetChanged() -> c
    721:822:void populate() -> i
    878:884:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    889:905:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    909:931:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    934:940:android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    956:958:void onAttachedToWindow() -> onAttachedToWindow
    967:1034:void onMeasure(int,int) -> onMeasure
    1038:1044:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1047:1067:void recomputeScrollPosition(int,int,int,int) -> a
    1071:1152:void onLayout(boolean,int,int,int,int) -> onLayout
    1157:1178:void computeScroll() -> computeScroll
    1181:1192:void pageScrolled(int) -> b
    1257:1283:void completeScroll() -> j
    1293:1416:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1421:1559:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1564:1570:int determineTargetPage(int,float,int,int) -> a
    1575:1614:void draw(android.graphics.Canvas) -> draw
    1618:1633:void onDraw(android.graphics.Canvas) -> onDraw
    1653:1669:boolean beginFakeDrag() -> d
    1679:1698:void endFakeDrag() -> e
    1708:1736:void fakeDragBy(float) -> a
    1748:1748:boolean isFakeDragging() -> f
    1752:1764:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    1767:1774:void endDrag() -> k
    1777:1789:void setScrollingCacheEnabled(boolean) -> a
    1803:1822:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    1828:1828:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1866:1901:boolean arrowScroll(int) -> c
    1905:1909:boolean pageLeft() -> l
    1913:1917:boolean pageRight() -> m
    1925:1962:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1972:1981:void addTouchables(java.util.ArrayList) -> addTouchables
    1992:2013:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2023:2035:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2040:2040:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2045:2045:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2050:2050:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2055:2055:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    90:90:int[] access$0() -> g
android.support.v4.view.ViewPager$1 -> am:
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> an:
    108:109:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> ao:
android.support.v4.view.ViewPager$ItemInfo -> ap:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> aq:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> ar:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int,int) -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PagerObserver -> as:
    android.support.v4.view.ViewPager this$0 -> a
    2061:2062:void onChanged() -> onChanged
    2065:2066:void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> at:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    841:844:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    848:848:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> au:
    1:1:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    1:1:java.lang.Object[] newArray(int) -> a
android.support.v4.widget.EdgeEffectCompat -> av:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    143:144:void setSize(int,int) -> a
    154:154:boolean isFinished() -> a
    162:163:void finish() -> b
    177:177:boolean onPull(float) -> a
    189:189:boolean onRelease() -> c
    218:218:boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> aw:
    60:60:java.lang.Object newEdgeEffect(android.content.Context) -> a
    64:64:void setSize(java.lang.Object,int,int) -> a
    67:67:boolean isFinished(java.lang.Object) -> a
    71:71:void finish(java.lang.Object) -> b
    74:74:boolean onPull(java.lang.Object,float) -> a
    78:78:boolean onRelease(java.lang.Object) -> c
    86:86:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> ax:
    92:92:java.lang.Object newEdgeEffect(android.content.Context) -> a
    96:97:void setSize(java.lang.Object,int,int) -> a
    100:100:boolean isFinished(java.lang.Object) -> a
    104:105:void finish(java.lang.Object) -> b
    108:108:boolean onPull(java.lang.Object,float) -> a
    112:112:boolean onRelease(java.lang.Object) -> c
    120:120:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> ay:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.crittercism.NewFeedbackCreateActivity -> com.crittercism.NewFeedbackCreateActivity:
    java.lang.String a -> a
    android.webkit.WebView c -> b
    android.app.AlertDialog d -> c
    boolean e -> d
    java.lang.String g -> e
    org.json.JSONObject h -> f
    android.app.ProgressDialog i -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    android.content.Intent a(boolean) -> a
    android.app.ProgressDialog e(com.crittercism.NewFeedbackCreateActivity) -> a
    void a(com.crittercism.NewFeedbackCreateActivity,boolean,java.lang.String) -> a
    android.content.Intent f(com.crittercism.NewFeedbackCreateActivity) -> b
    android.webkit.WebView g(com.crittercism.NewFeedbackCreateActivity) -> c
com.crittercism.NewFeedbackCreateActivity$b -> az:
com.crittercism.NewFeedbackIssueListActivity -> com.crittercism.NewFeedbackIssueListActivity:
    crittercism.android.p a -> a
    android.widget.Spinner b -> b
    com.crittercism.app.Crittercism c -> c
    java.lang.Exception d -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.view.View a() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void a(boolean) -> a
    void a(java.util.Vector,java.lang.Exception) -> a
    java.util.Vector a(java.util.Vector,java.util.Vector) -> a
com.crittercism.NewFeedbackIssueListActivity$a -> aA:
    java.util.ArrayList a -> a
    com.crittercism.NewFeedbackIssueListActivity b -> b
    int getCount() -> getCount
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.Object getItem(int) -> getItem
com.crittercism.NewFeedbackIssueListActivity$b -> aB:
    android.widget.Filter e -> e
    java.util.Vector a -> a
    java.util.Vector b -> b
    com.crittercism.NewFeedbackIssueListActivity c -> c
    android.widget.Filter getFilter() -> getFilter
com.crittercism.NewFeedbackIssueListActivity$b$a -> aC:
    com.crittercism.NewFeedbackIssueListActivity$b a -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.crittercism.NewFeedbackItemDetailsActivity -> com.crittercism.NewFeedbackItemDetailsActivity:
    java.lang.String a -> a
    java.lang.String b -> b
    crittercism.android.u c -> c
    android.webkit.WebView d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    org.json.JSONArray i -> i
    com.crittercism.NewFeedbackItemDetailsActivity$a k -> j
    boolean l -> k
    boolean n -> l
    android.app.AlertDialog o -> m
    org.json.JSONObject p -> n
    android.app.ProgressDialog q -> o
    java.lang.String r -> p
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.content.Intent a(boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void a(boolean,java.lang.String) -> a
    void a(org.json.JSONObject,java.lang.Exception,boolean) -> a
    android.app.ProgressDialog f(com.crittercism.NewFeedbackItemDetailsActivity) -> a
    void a(com.crittercism.NewFeedbackItemDetailsActivity,boolean,java.lang.String) -> a
    android.content.Intent g(com.crittercism.NewFeedbackItemDetailsActivity) -> b
    void h(com.crittercism.NewFeedbackItemDetailsActivity) -> c
    boolean i(com.crittercism.NewFeedbackItemDetailsActivity) -> d
com.crittercism.NewFeedbackItemDetailsActivity$a -> aD:
    java.lang.Exception a -> a
    org.json.JSONObject b -> b
    com.crittercism.NewFeedbackItemDetailsActivity c -> c
    void onPreExecute() -> onPreExecute
    org.json.JSONObject a() -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.crittercism.NewFeedbackItemDetailsActivity$b -> aE:
    java.lang.Exception a -> a
    void run() -> run
com.crittercism.NewFeedbackItemDetailsActivity$c -> aF:
com.crittercism.NewFeedbackQuestionListActivity -> com.crittercism.NewFeedbackQuestionListActivity:
    crittercism.android.p a -> a
    android.widget.EditText b -> b
    java.lang.Exception c -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void a(boolean) -> a
    android.view.View a() -> a
    void a(java.util.Vector,java.lang.Exception) -> a
    java.util.Vector a(java.util.Vector,java.util.Vector) -> a
com.crittercism.NewFeedbackQuestionListActivity$a -> aG:
    com.crittercism.NewFeedbackQuestionListActivity$a$a e -> e
    java.util.ArrayList f -> f
    java.util.ArrayList g -> g
    java.util.Vector a -> a
    java.util.Vector b -> b
    com.crittercism.NewFeedbackQuestionListActivity c -> c
    void c() -> c
    void d() -> d
    void a(java.util.Vector) -> a
    void b(java.util.Vector) -> b
    void e() -> e
    void f() -> f
    void a() -> a
    android.widget.Filter getFilter() -> getFilter
com.crittercism.NewFeedbackQuestionListActivity$a$a -> aH:
    com.crittercism.NewFeedbackQuestionListActivity$a a -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.crittercism.NewFeedbackQuestionListActivity$b -> aI:
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
com.crittercism.NewFeedbackSpringboardActivity -> com.crittercism.NewFeedbackSpringboardActivity:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.webkit.WebView e -> e
    java.lang.Exception f -> f
    boolean g -> g
    android.app.AlertDialog h -> h
    android.app.ProgressDialog i -> i
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.String a(com.crittercism.NewFeedbackSpringboardActivity) -> a
    void a(com.crittercism.NewFeedbackSpringboardActivity,android.app.AlertDialog) -> a
    android.app.AlertDialog b(com.crittercism.NewFeedbackSpringboardActivity) -> b
    android.app.ProgressDialog c(com.crittercism.NewFeedbackSpringboardActivity) -> c
    java.lang.Exception d(com.crittercism.NewFeedbackSpringboardActivity) -> d
com.crittercism.NotificationActivity -> com.crittercism.NotificationActivity:
    android.webkit.WebView b -> b
    android.app.ProgressDialog a -> a
    java.lang.reflect.Method c -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.crittercism.NotificationActivity$a -> aJ:
com.crittercism.app.Crittercism -> aK:
    com.crittercism.app.Crittercism e -> e
    crittercism.android.ap f -> f
    crittercism.android.v g -> g
    crittercism.android.k h -> h
    boolean i -> i
    android.content.Context j -> j
    java.lang.String a -> a
    crittercism.android.ab k -> k
    java.util.Vector l -> l
    boolean m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    boolean q -> q
    boolean b -> b
    com.crittercism.service.ICritter c -> c
    android.os.Handler d -> d
    android.content.ServiceConnection r -> r
    com.crittercism.app.Crittercism a() -> a
    void init(android.content.Context,java.lang.String,boolean[]) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.content.pm.ApplicationInfo i() -> i
    java.lang.String j() -> j
    java.lang.String d() -> d
    int a(int) -> a
    java.lang.String e() -> e
    org.json.JSONObject a(org.json.JSONObject) -> a
    boolean a(java.lang.Throwable) -> a
    boolean a(crittercism.android.ab) -> a
    void a(java.lang.Exception) -> a
    boolean a(android.content.Intent) -> a
    java.lang.String f() -> f
    java.lang.String g() -> g
    boolean h() -> h
    java.util.Date a(java.lang.String) -> a
    java.lang.String a(java.util.Date) -> a
    android.content.Context a(com.crittercism.app.Crittercism) -> a
    android.content.pm.ApplicationInfo b(com.crittercism.app.Crittercism) -> b
    crittercism.android.ap c(com.crittercism.app.Crittercism) -> c
    boolean d(com.crittercism.app.Crittercism) -> d
    boolean e(com.crittercism.app.Crittercism) -> e
    void a(com.crittercism.app.Crittercism,crittercism.android.k) -> a
    crittercism.android.k f(com.crittercism.app.Crittercism) -> f
    void g(com.crittercism.app.Crittercism) -> g
    java.util.Vector h(com.crittercism.app.Crittercism) -> h
    crittercism.android.ab i(com.crittercism.app.Crittercism) -> i
    void j(com.crittercism.app.Crittercism) -> j
com.crittercism.app.Crittercism$a -> aL:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    com.crittercism.app.Crittercism b -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.crittercism.app.Crittercism$b -> aM:
    java.lang.String a -> a
com.crittercism.service.BReceiver -> com.crittercism.service.BReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.crittercism.service.CrittercismService -> com.crittercism.service.CrittercismService:
    java.util.Timer b -> b
    android.app.NotificationManager c -> c
    java.util.ArrayList a -> a
    com.crittercism.service.ICritter$a d -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    java.lang.String a(java.lang.String) -> a
    void onDestroy() -> onDestroy
com.crittercism.service.CrittercismService$a -> aN:
    android.content.Context a -> a
    com.crittercism.service.CrittercismService$a b -> b
    crittercism.android.r c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.List f -> f
    boolean g -> g
    com.crittercism.service.CrittercismService$a$a h -> h
    void a(android.content.Context) -> a
    com.crittercism.service.CrittercismService$a a() -> a
    void b() -> b
    void c() -> c
    void a(org.json.JSONArray) -> a
    void d() -> d
    void e() -> e
    void g() -> g
    void f() -> f
    void h() -> h
com.crittercism.service.CrittercismService$a$a -> aO:
    void run() -> run
com.crittercism.service.ICritter -> aP:
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.content.pm.ApplicationInfo) -> a
    void b(android.content.pm.ApplicationInfo) -> b
com.crittercism.service.ICritter$a -> aQ:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.crittercism.service.ICritter$a$a -> aR:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.content.pm.ApplicationInfo) -> a
    void b(android.content.pm.ApplicationInfo) -> b
com.handlerexploit.common.utils.AssetsHelper -> aS:
    21:21:java.io.InputStream open(java.lang.String) -> a
com.handlerexploit.common.utils.DiskLRUCache -> aT:
    java.io.File mDirectory -> a
    java.io.File mJournalFile -> b
    java.io.File mJournalFileTmp -> c
    int mAppVersion -> d
    long mMaxSize -> e
    int mValueCount -> f
    long mSize -> g
    java.io.Writer mJournalWriter -> h
    java.util.LinkedHashMap mLRUEntries -> i
    int mRedundantOpCount -> j
    long mNextSequenceNumber -> k
    java.util.concurrent.ExecutorService mExecutorService -> l
    java.util.concurrent.Callable mCleanupCallable -> m
    java.io.OutputStream NULL_OUTPUT_STREAM -> n
    130:142:void deleteContents(java.io.File) -> a
    146:154:void closeQuietly(java.io.Closeable) -> b
    175:190:java.lang.String readAsciiLine(java.io.InputStream) -> a
    286:315:com.handlerexploit.common.utils.DiskLRUCache open(java.io.File,int,int,long) -> a
    319:346:void readJournal() -> b
    384:400:void processJournal() -> c
    407:434:void rebuildJournal() -> d
    442:445:void deleteIfExists(java.io.File) -> b
    453:485:com.handlerexploit.common.utils.DiskLRUCache$Snapshot get(java.lang.String) -> a
    493:493:com.handlerexploit.common.utils.DiskLRUCache$Editor edit(java.lang.String) -> b
    498:518:com.handlerexploit.common.utils.DiskLRUCache$Editor edit(java.lang.String,long) -> a
    547:605:void completeEdit(com.handlerexploit.common.utils.DiskLRUCache$Editor,boolean) -> a
    612:613:boolean journalRebuildRequired() -> e
    624:648:boolean remove(java.lang.String) -> c
    659:662:void checkNotClosed() -> f
    677:688:void close() -> close
    691:696:void trimToSize() -> g
    709:713:void validateKey(java.lang.String) -> d
    227:227:java.io.Writer access$0(com.handlerexploit.common.utils.DiskLRUCache) -> a
    690:690:void access$1(com.handlerexploit.common.utils.DiskLRUCache) -> b
    611:611:boolean access$2(com.handlerexploit.common.utils.DiskLRUCache) -> c
    406:406:void access$3(com.handlerexploit.common.utils.DiskLRUCache) -> d
    230:230:void access$4(com.handlerexploit.common.utils.DiskLRUCache,int) -> a
    145:145:void access$7(java.io.Closeable) -> a
    767:767:java.io.OutputStream access$8() -> a
    545:545:void access$10(com.handlerexploit.common.utils.DiskLRUCache,com.handlerexploit.common.utils.DiskLRUCache$Editor,boolean) -> a
    225:225:int access$11(com.handlerexploit.common.utils.DiskLRUCache) -> e
    220:220:java.io.File access$12(com.handlerexploit.common.utils.DiskLRUCache) -> f
com.handlerexploit.common.utils.DiskLRUCache$1 -> aU:
    com.handlerexploit.common.utils.DiskLRUCache this$0 -> a
    246:256:java.lang.Void call() -> a
    1:1:java.lang.Object call() -> call
com.handlerexploit.common.utils.DiskLRUCache$2 -> aV:
    772:772:void write(int) -> write
com.handlerexploit.common.utils.DiskLRUCache$Editor -> aW:
    com.handlerexploit.common.utils.DiskLRUCache$Entry mEntry -> a
    boolean mHasErrors -> b
    com.handlerexploit.common.utils.DiskLRUCache this$0 -> c
    824:824:java.io.OutputStream newOutputStream(int) -> a
    858:864:void commit() -> a
    871:872:void abort() -> b
com.handlerexploit.common.utils.DiskLRUCache$Editor$FaultHidingOutputStream -> aX:
    com.handlerexploit.common.utils.DiskLRUCache$Editor this$1 -> a
    883:887:void write(int) -> write
    892:896:void write(byte[],int,int) -> write
    901:905:void close() -> close
    910:914:void flush() -> flush
com.handlerexploit.common.utils.DiskLRUCache$Entry -> aY:
    java.lang.String mKey -> a
    long[] mLengths -> b
    boolean mReadable -> c
    com.handlerexploit.common.utils.DiskLRUCache$Editor mCurrentEditor -> d
    long mSequenceNumber -> e
    com.handlerexploit.common.utils.DiskLRUCache this$0 -> f
    943:947:java.lang.String getLengths() -> a
    954:963:void setLengths(java.lang.String[]) -> a
    968:968:java.io.IOException invalidLengths(java.lang.String[]) -> b
    973:973:java.io.File getCleanFile(int) -> a
    977:977:java.io.File getDirtyFile(int) -> b
com.handlerexploit.common.utils.DiskLRUCache$Snapshot -> aZ:
    java.io.InputStream[] mIns -> a
    749:749:java.io.InputStream getInputStream(int) -> a
    761:764:void close() -> close
com.handlerexploit.common.utils.LRUCache -> ba:
    java.util.LinkedHashMap mMap -> a
    int mSize -> b
    int mMaxSize -> c
    int mPutCount -> d
    int mEvictionCount -> e
    int mHitCount -> f
    int mMissCount -> g
    61:82:java.lang.Object get(java.lang.Object) -> a
    115:134:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    146:146:void trimToSize(int) -> a
    235:240:int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    252:252:int sizeOf(java.lang.Object,java.lang.Object) -> b
    326:328:java.lang.String toString() -> toString
com.handlerexploit.prime.Configuration -> bb:
    java.util.Properties sProperties -> f
    boolean DEBUGGING -> a
    int MEM_CACHE_SIZE_KB -> b
    int DISK_CACHE_SIZE_KB -> c
    int ASYNC_THREAD_COUNT -> d
    com.handlerexploit.prime.Configuration$Location DOWNLOAD_LOCATION -> e
    37:46:java.util.Properties loadProperties() -> a
    50:68:java.lang.Object checkValue(java.lang.Object,java.lang.Object) -> a
com.handlerexploit.prime.Configuration$Location -> bc:
    com.handlerexploit.prime.Configuration$Location INTERNAL -> a
    com.handlerexploit.prime.Configuration$Location EXTERNAL -> b
    com.handlerexploit.prime.Configuration$Location[] ENUM$VALUES -> c
    1:1:com.handlerexploit.prime.Configuration$Location[] values() -> a
    1:1:com.handlerexploit.prime.Configuration$Location valueOf(java.lang.String) -> a
com.handlerexploit.prime.utils.ApacheUtils$DigestUtils -> bd:
    char[] toDigits -> a
    java.security.MessageDigest sha256MessageDigest -> b
    238:238:java.lang.String sha256Hex(java.lang.String) -> a
    245:247:java.security.MessageDigest getDigest(java.lang.String) -> b
    252:259:char[] encodeHex(byte[]) -> a
    264:270:byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> a
com.handlerexploit.prime.utils.ImageManager -> be:
    java.lang.Object[] LOCK -> a
    com.handlerexploit.prime.utils.ImageManager sInstance -> b
    java.lang.String mCacheDirectory -> c
    com.handlerexploit.common.utils.DiskLRUCache mDiskLRUCache -> d
    android.graphics.Bitmap$Config mPreferredConfig -> e
    android.os.Handler mHandler -> f
    com.handlerexploit.common.utils.LRUCache mLRUCache -> g
    java.util.concurrent.ExecutorService mNetworkExecutorService -> h
    java.util.concurrent.ExecutorService mDiskExecutorService -> i
    int[] $SWITCH_TABLE$com$handlerexploit$prime$Configuration$Location -> j
    129:132:com.handlerexploit.prime.utils.ImageManager getInstance(android.content.Context) -> a
    137:141:com.handlerexploit.common.utils.DiskLRUCache open(java.lang.String) -> a
    146:146:java.io.File getImageCacheDirectory(java.lang.String) -> b
    217:222:void get$249e1e61(com.handlerexploit.prime.utils.ImageManager$OnImageReceivedListener) -> a
    225:283:void get(com.handlerexploit.prime.utils.ImageManager$ExtendedRequest) -> a
    290:304:android.graphics.Bitmap getBitmapFromDisk(java.lang.String) -> c
    309:318:android.graphics.Bitmap getBitmapFromNetwork(java.lang.String,java.lang.String,int,int,com.handlerexploit.prime.utils.ImageManager$ExtendedRequest) -> a
    325:362:android.graphics.Bitmap decodeByteArray(byte[],int,int,com.handlerexploit.prime.utils.ImageManager$ExtendedRequest) -> a
    366:386:byte[] copyURLToByteArray(java.lang.String) -> d
    438:451:android.graphics.Bitmap decodeFromSnapshot(com.handlerexploit.common.utils.DiskLRUCache$Snapshot) -> a
    455:468:boolean verifySourceOverTime$78a0f5e5(java.lang.String,com.handlerexploit.prime.utils.ImageManager$OnImageReceivedListener) -> b
    480:484:android.graphics.BitmapFactory$Options getBitmapFactoryOptions() -> a
    454:454:boolean access$0$78a0f5e5(java.lang.String,com.handlerexploit.prime.utils.ImageManager$OnImageReceivedListener) -> a
    289:289:android.graphics.Bitmap access$1(com.handlerexploit.prime.utils.ImageManager,java.lang.String) -> a
    114:114:android.os.Handler access$2(com.handlerexploit.prime.utils.ImageManager) -> a
    118:118:java.util.concurrent.ExecutorService access$3(com.handlerexploit.prime.utils.ImageManager) -> b
    307:307:android.graphics.Bitmap access$4(com.handlerexploit.prime.utils.ImageManager,java.lang.String,java.lang.String,int,int,com.handlerexploit.prime.utils.ImageManager$ExtendedRequest) -> a
    100:100:int[] $SWITCH_TABLE$com$handlerexploit$prime$Configuration$Location() -> b
com.handlerexploit.prime.utils.ImageManager$2 -> bf:
    com.handlerexploit.prime.utils.ImageManager this$0 -> a
    java.lang.String val$source -> b
    com.handlerexploit.prime.utils.ImageManager$ExtendedRequest val$request -> c
    java.lang.String val$key -> d
    int val$requestHeight -> e
    int val$requestWidth -> f
    250:280:void run() -> run
com.handlerexploit.prime.utils.ImageManager$2$1 -> bg:
    com.handlerexploit.prime.utils.ImageManager$ExtendedRequest val$request -> a
    java.lang.String val$source -> b
    android.graphics.Bitmap val$bitmap -> c
    257:258:void run() -> run
com.handlerexploit.prime.utils.ImageManager$2$2 -> bh:
    com.handlerexploit.prime.utils.ImageManager$2 this$1 -> a
    java.lang.String val$key -> b
    java.lang.String val$source -> c
    int val$requestHeight -> d
    int val$requestWidth -> e
    com.handlerexploit.prime.utils.ImageManager$ExtendedRequest val$request -> f
    265:276:void run() -> run
com.handlerexploit.prime.utils.ImageManager$2$2$1 -> bi:
    com.handlerexploit.prime.utils.ImageManager$ExtendedRequest val$request -> a
    java.lang.String val$source -> b
    android.graphics.Bitmap val$bitmap -> c
    272:274:void run() -> run
com.handlerexploit.prime.utils.ImageManager$3 -> bj:
    1:1:int sizeOf(java.lang.Object,java.lang.Object) -> b
com.handlerexploit.prime.utils.ImageManager$ExtendedRequest -> bk:
    com.handlerexploit.prime.utils.ImageManager$OnImageReceivedListener mRequest$66927ac4 -> a
    608:608:android.graphics.Bitmap onPreProcess(android.graphics.Bitmap) -> a
    598:599:void onImageReceived(java.lang.String,android.graphics.Bitmap) -> a
    603:603:java.lang.String getSource() -> a
com.handlerexploit.prime.utils.ImageManager$LowPriorityThreadFactory -> bl:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> a
    java.lang.ThreadGroup group -> b
    java.util.concurrent.atomic.AtomicInteger threadNumber -> c
    java.lang.String namePrefix -> d
    int priority -> e
    650:654:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.handlerexploit.prime.utils.ImageManager$OnImageReceivedListener -> bm:
    void onImageReceived(java.lang.String,android.graphics.Bitmap) -> a
    java.lang.String getSource() -> a
com.handlerexploit.prime.widgets.RemoteImageView -> com.handlerexploit.prime.widgets.RemoteImageView:
    com.handlerexploit.prime.utils.ImageManager mImageManager -> a
    java.lang.String mImageURL -> b
    com.handlerexploit.prime.utils.ImageManager$OnImageReceivedListener mRequest$66927ac4 -> c
    58:59:void setup$23ad5828(android.content.Context) -> a
    68:72:void setImageURL(java.lang.String) -> setImageURL
    40:40:java.lang.String access$0(com.handlerexploit.prime.widgets.RemoteImageView) -> a
com.handlerexploit.prime.widgets.RemoteImageView$1 -> bn:
    com.handlerexploit.prime.widgets.RemoteImageView this$0 -> a
    78:81:void onImageReceived(java.lang.String,android.graphics.Bitmap) -> a
    85:85:java.lang.String getSource() -> a
com.turbomanage.httpclient.AbstractHttpClient -> bo:
    java.lang.String baseUrl -> a
    com.turbomanage.httpclient.RequestLogger requestLogger -> b
    com.turbomanage.httpclient.RequestHandler requestHandler -> c
    java.util.Map requestHeaders -> d
    int connectionTimeout -> e
    int readTimeout -> f
    106:106:com.turbomanage.httpclient.HttpResponse get(java.lang.String,com.turbomanage.httpclient.ParameterMap) -> a
    117:117:com.turbomanage.httpclient.HttpResponse post(java.lang.String,com.turbomanage.httpclient.ParameterMap) -> b
    174:185:com.turbomanage.httpclient.HttpResponse execute(com.turbomanage.httpclient.HttpRequest) -> a
    204:249:com.turbomanage.httpclient.HttpResponse doHttpMethod(java.lang.String,com.turbomanage.httpclient.HttpMethod,java.lang.String,byte[]) -> a
    262:268:java.net.HttpURLConnection openConnection(java.lang.String) -> a
    301:317:int writeOutputStream(java.net.HttpURLConnection,byte[]) -> a
    328:344:com.turbomanage.httpclient.HttpResponse readInputStream(java.net.HttpURLConnection) -> a
    356:372:com.turbomanage.httpclient.HttpResponse readErrorStream(java.net.HttpURLConnection) -> b
    381:381:com.turbomanage.httpclient.ParameterMap newParams() -> a
    398:399:com.turbomanage.httpclient.AbstractHttpClient addHeader(java.lang.String,java.lang.String) -> a
    470:471:void setConnectionTimeout(int) -> a
com.turbomanage.httpclient.BasicHttpClient -> bp:
com.turbomanage.httpclient.BasicHttpClient$1 -> bq:
com.turbomanage.httpclient.HttpGet -> br:
com.turbomanage.httpclient.HttpMethod -> bs:
    com.turbomanage.httpclient.HttpMethod GET -> a
    com.turbomanage.httpclient.HttpMethod POST -> b
    com.turbomanage.httpclient.HttpMethod PUT -> c
    com.turbomanage.httpclient.HttpMethod DELETE -> d
    com.turbomanage.httpclient.HttpMethod HEAD -> e
    boolean doInput -> f
    boolean doOutput -> g
    26:26:boolean getDoInput() -> a
    35:35:boolean getDoOutput() -> b
    44:44:java.lang.String getMethodName() -> c
com.turbomanage.httpclient.HttpPost -> bt:
com.turbomanage.httpclient.HttpRequest -> bu:
    java.lang.String path -> a
    com.turbomanage.httpclient.HttpMethod httpMethod -> b
    java.lang.String contentType -> c
    byte[] content -> d
    37:37:java.lang.String getPath() -> a
    41:41:com.turbomanage.httpclient.HttpMethod getHttpMethod() -> b
    45:45:java.lang.String getContentType() -> c
    49:49:byte[] getContent() -> d
com.turbomanage.httpclient.HttpRequestException -> bv:
    com.turbomanage.httpclient.HttpResponse httpResponse -> a
    33:33:com.turbomanage.httpclient.HttpResponse getHttpResponse() -> a
com.turbomanage.httpclient.HttpResponse -> bw:
    int status -> a
    java.lang.String url -> b
    java.util.Map headers -> c
    byte[] body -> d
    48:51:java.lang.String getBodyAsString() -> a
com.turbomanage.httpclient.ParameterMap -> bx:
    java.util.Map map -> a
    22:23:void clear() -> clear
    27:27:boolean containsKey(java.lang.Object) -> containsKey
    32:32:boolean containsValue(java.lang.Object) -> containsValue
    37:37:java.util.Set entrySet() -> entrySet
    47:47:boolean isEmpty() -> isEmpty
    52:52:java.util.Set keySet() -> keySet
    62:63:void putAll(java.util.Map) -> putAll
    72:72:int size() -> size
    77:77:java.util.Collection values() -> values
    88:89:com.turbomanage.httpclient.ParameterMap add(java.lang.String,java.lang.String) -> a
    98:114:java.lang.String urlEncode() -> a
    123:129:byte[] urlEncodedBytes() -> b
    1:1:java.lang.Object get(java.lang.Object) -> get
    1:1:java.lang.Object remove(java.lang.Object) -> remove
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.turbomanage.httpclient.RequestHandler -> by:
    com.turbomanage.httpclient.RequestLogger logger -> a
    44:46:java.net.HttpURLConnection openConnection(java.lang.String) -> a
    53:61:void prepareConnection(java.net.HttpURLConnection,com.turbomanage.httpclient.HttpMethod,java.lang.String) -> a
    65:66:void writeStream(java.io.OutputStream,byte[]) -> a
    71:78:byte[] readStream(java.io.InputStream) -> a
    83:96:boolean onError(com.turbomanage.httpclient.HttpRequestException) -> a
com.turbomanage.httpclient.RequestLogger -> bz:
com.tweetlanes.android.App -> com.tweetlanes.android.App:
    android.content.Context mContext -> a
    java.lang.String mAppVersionName -> b
    boolean mActionLauncherInstalled -> c
    java.util.ArrayList mAccounts -> d
    java.lang.Integer mCurrentAccountIndex -> e
    java.util.ArrayList mProfileLaneDefinitions -> f
    java.util.ArrayList mSearchLaneDefinitions -> g
    java.util.ArrayList mTweetSpotlightLaneDefinitions -> h
    android.content.SharedPreferences mPreferences -> i
    org.tweetalib.android.ConnectionStatus$Callbacks mConnectionStatusCallbacks -> j
    com.tweetlanes.android.util.LazyImageLoader mProfileImageLoader -> k
    com.tweetlanes.android.util.LazyImageLoader mPreviewImageLoader -> l
    64:64:android.content.Context getContext() -> a
    72:72:java.lang.String getAppVersionName() -> b
    76:76:boolean getActionLauncherInstalled() -> c
    105:105:com.tweetlanes.android.model.AccountDescriptor getCurrentAccount() -> d
    110:111:java.lang.String getCurrentAccountScreenName() -> e
    119:119:int getAccountCount() -> f
    123:123:java.util.ArrayList getAccounts() -> g
    142:161:void setCurrentAccount(java.lang.Long) -> a
    168:168:java.util.ArrayList getProfileLaneDefinitions() -> h
    172:172:com.tweetlanes.android.model.LaneDescriptor getProfileLaneDescriptor(int) -> a
    180:180:java.util.ArrayList getSearchLaneDefinitions() -> i
    184:184:com.tweetlanes.android.model.LaneDescriptor getSearchLaneDescriptor(int) -> b
    192:192:java.util.ArrayList getTweetSpotlightLaneDefinitions() -> j
    196:196:com.tweetlanes.android.model.LaneDescriptor getTweetSpotlightLaneDescriptor(int) -> c
    205:240:void updateTwitterAccountCount() -> s
    248:248:java.lang.String getAccountDescriptorKey(java.lang.Long) -> b
    252:252:java.lang.String getTweetDraftKey() -> t
    256:256:java.lang.String getTweetDraftTimeKey() -> u
    263:272:void saveTweetDraft(java.lang.String) -> a
    279:290:java.lang.String getTweetDraftAsString() -> k
    297:300:void setTutorialCompleted() -> l
    306:308:boolean getTutorialCompleted() -> m
    315:319:void saveUpdatedAccountDescriptor(com.tweetlanes.android.model.AccountDescriptor) -> a
    325:330:void cacheData(java.lang.String,java.lang.String) -> a
    336:337:java.lang.String getCachedData(java.lang.String) -> b
    346:401:void onPostSignIn(org.tweetalib.android.model.TwitterUser,java.lang.String,java.lang.String) -> a
    406:546:void onCreate() -> onCreate
    579:585:boolean isOnline() -> n
    595:599:void onTerminate() -> onTerminate
    606:616:boolean onUserListsRefresh(org.tweetalib.android.model.TwitterLists) -> a
    624:629:void triggerFollowPromoAccounts(org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> a
    635:642:void restartApp(android.app.Activity) -> a
    650:659:com.tweetlanes.android.util.LazyImageLoader getPreviewImageLoader() -> o
    666:674:com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> p
    681:694:void clearImageCaches() -> q
    58:58:android.content.Context access$0() -> r
com.tweetlanes.android.App$1 -> bA:
    com.tweetlanes.android.App this$0 -> a
    555:555:boolean isOnline() -> isOnline
    560:560:java.lang.String getErrorMessageNoConnection() -> getErrorMessageNoConnection
    565:568:void handleError(org.tweetalib.android.TwitterFetchResult) -> handleError
com.tweetlanes.android.AppBroadcastReceiver -> com.tweetlanes.android.AppBroadcastReceiver:
    24:26:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tweetlanes.android.AppSettings -> bB:
    android.content.SharedPreferences mSharedPreferences -> a
    android.content.Context mContext -> b
    boolean mIsDirty -> c
    int mRefreshCount -> d
    com.tweetlanes.android.AppSettings$Theme mCurrentTheme -> e
    com.tweetlanes.android.AppSettings$StatusSize mStatusSize -> f
    com.tweetlanes.android.AppSettings$ProfileImageSize mProfileImageSize -> g
    com.tweetlanes.android.AppSettings$QuoteType mQuoteType -> h
    com.tweetlanes.android.AppSettings mInstance -> i
    115:117:boolean isDirty() -> a
    124:178:void refresh(java.lang.String) -> a
    184:184:boolean downloadFeedImages() -> b
    193:193:boolean showTweetSource() -> c
    202:202:boolean isVolScrollEnabled() -> d
    213:213:boolean isDimScreenEnabled() -> e
    220:228:boolean showTabletMargin() -> f
    235:235:int getCurrentThemeStyle() -> g
    243:243:int getCurrentBorderColor() -> h
    250:250:com.tweetlanes.android.AppSettings$Theme getCurrentTheme() -> i
    286:286:com.tweetlanes.android.AppSettings$StatusSize getCurrentStatusSize() -> j
    310:310:com.tweetlanes.android.AppSettings$ProfileImageSize getCurrentProfileImageSize() -> k
    356:356:com.tweetlanes.android.AppSettings$QuoteType getCurrentQuoteType() -> l
    363:364:void initModule(android.content.Context) -> a
    377:377:com.tweetlanes.android.AppSettings get() -> m
com.tweetlanes.android.AppSettings$ProfileImageSize -> bC:
    com.tweetlanes.android.AppSettings$ProfileImageSize Small -> a
    com.tweetlanes.android.AppSettings$ProfileImageSize Medium -> b
    com.tweetlanes.android.AppSettings$ProfileImageSize Large -> c
    com.tweetlanes.android.AppSettings$ProfileImageSize[] ENUM$VALUES -> d
    1:1:com.tweetlanes.android.AppSettings$ProfileImageSize[] values() -> a
com.tweetlanes.android.AppSettings$QuoteType -> bD:
    com.tweetlanes.android.AppSettings$QuoteType Standard -> a
    com.tweetlanes.android.AppSettings$QuoteType RT -> b
    com.tweetlanes.android.AppSettings$QuoteType Via -> c
    com.tweetlanes.android.AppSettings$QuoteType[] ENUM$VALUES -> d
    1:1:com.tweetlanes.android.AppSettings$QuoteType[] values() -> a
com.tweetlanes.android.AppSettings$StatusSize -> bE:
    com.tweetlanes.android.AppSettings$StatusSize ExtraSmall -> a
    com.tweetlanes.android.AppSettings$StatusSize Small -> b
    com.tweetlanes.android.AppSettings$StatusSize Medium -> c
    com.tweetlanes.android.AppSettings$StatusSize Large -> d
    com.tweetlanes.android.AppSettings$StatusSize ExtraLarge -> e
    com.tweetlanes.android.AppSettings$StatusSize[] ENUM$VALUES -> f
    1:1:com.tweetlanes.android.AppSettings$StatusSize[] values() -> a
com.tweetlanes.android.AppSettings$Theme -> bF:
    com.tweetlanes.android.AppSettings$Theme Holo_Dark -> a
    com.tweetlanes.android.AppSettings$Theme Holo_Light -> b
com.tweetlanes.android.Constant -> bG:
    org.socialnetlib.android.SocialNetConstant$Type SOCIAL_NET_TYPE -> a
    boolean ENABLE_CRASH_TRACKING -> b
    boolean ENABLE_STATUS_CACHING -> c
    boolean UPDATE_CACHED_STATUSES -> d
com.tweetlanes.android.Constant$LaneType -> bH:
    com.tweetlanes.android.Constant$LaneType DIRECT_MESSAGES -> a
    com.tweetlanes.android.Constant$LaneType USER_PROFILE -> b
    com.tweetlanes.android.Constant$LaneType USER_PROFILE_TIMELINE -> c
    com.tweetlanes.android.Constant$LaneType USER_HOME_TIMELINE -> d
    com.tweetlanes.android.Constant$LaneType USER_LIST_TIMELINE -> e
    com.tweetlanes.android.Constant$LaneType USER_MENTIONS -> f
    com.tweetlanes.android.Constant$LaneType USER_FAVORITES -> g
    com.tweetlanes.android.Constant$LaneType RETWEETS_OF_ME -> h
    com.tweetlanes.android.Constant$LaneType PROFILE_PROFILE -> i
    com.tweetlanes.android.Constant$LaneType PROFILE_PROFILE_TIMELINE -> j
    com.tweetlanes.android.Constant$LaneType PROFILE_MENTIONS -> k
    com.tweetlanes.android.Constant$LaneType PROFILE_FAVORITES -> l
    com.tweetlanes.android.Constant$LaneType FRIENDS -> m
    com.tweetlanes.android.Constant$LaneType FOLLOWERS -> n
    com.tweetlanes.android.Constant$LaneType SEARCH_TERM -> o
    com.tweetlanes.android.Constant$LaneType SEARCH_PERSON -> p
    com.tweetlanes.android.Constant$LaneType STATUS_SPOTLIGHT -> q
    com.tweetlanes.android.Constant$LaneType STATUS_CONVERSATION -> r
    com.tweetlanes.android.Constant$LaneType STATUS_RETWEETED_BY -> s
    com.tweetlanes.android.Constant$LaneType GLOBAL_FEED -> t
    com.tweetlanes.android.Constant$LaneType MAX -> u
    com.tweetlanes.android.Constant$LaneType[] ENUM$VALUES -> v
    1:1:com.tweetlanes.android.Constant$LaneType[] values() -> a
com.tweetlanes.android.Constant$SystemEvent -> bI:
    com.tweetlanes.android.Constant$SystemEvent VOLUME_UP_KEY_DOWN -> a
    com.tweetlanes.android.Constant$SystemEvent VOLUME_DOWN_KEY_DOWN -> b
    com.tweetlanes.android.Constant$SystemEvent FORCE_FRAGMENT_PAGER_ADAPTER_REFRESH -> c
    com.tweetlanes.android.Constant$SystemEvent RESTART_APP -> d
    com.tweetlanes.android.Constant$SystemEvent DISPLAY_TOAST -> e
com.tweetlanes.android.NotificationHelper -> bJ:
    com.tweetlanes.android.NotificationHelper mInstance -> a
    int mLastHandleIndex -> b
    125:126:void initModule() -> a
    129:130:void deinitModule() -> b
    133:133:com.tweetlanes.android.NotificationHelper get() -> c
    156:160:com.tweetlanes.android.NotificationHelper$Handle notify(android.app.Activity,com.tweetlanes.android.NotificationHelper$Builder) -> a
com.tweetlanes.android.NotificationHelper$Builder -> bK:
    android.app.Notification$Builder mBuilder -> a
    73:74:com.tweetlanes.android.NotificationHelper$Builder setAutoCancel(boolean) -> a
    83:84:com.tweetlanes.android.NotificationHelper$Builder setContentText(java.lang.CharSequence) -> a
    88:89:com.tweetlanes.android.NotificationHelper$Builder setContentTitle(java.lang.CharSequence) -> b
    103:104:com.tweetlanes.android.NotificationHelper$Builder setTicker(java.lang.CharSequence) -> c
com.tweetlanes.android.NotificationHelper$Handle -> bL:
com.tweetlanes.android.R$styleable -> bM:
    int[] CircleFlowIndicator -> CircleFlowIndicator
    int CircleFlowIndicator_activeColor -> CircleFlowIndicator_activeColor
    int CircleFlowIndicator_activeType -> CircleFlowIndicator_activeType
    int CircleFlowIndicator_centered -> CircleFlowIndicator_centered
    int CircleFlowIndicator_fadeOut -> CircleFlowIndicator_fadeOut
    int CircleFlowIndicator_inactiveColor -> CircleFlowIndicator_inactiveColor
    int CircleFlowIndicator_inactiveType -> CircleFlowIndicator_inactiveType
    int CircleFlowIndicator_radius -> CircleFlowIndicator_radius
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_adapterViewBackground -> PullToRefresh_adapterViewBackground
    int PullToRefresh_headerBackground -> PullToRefresh_headerBackground
    int PullToRefresh_headerTextColor -> PullToRefresh_headerTextColor
    int PullToRefresh_mode -> PullToRefresh_mode
    int[] TitleFlowIndicator -> TitleFlowIndicator
    int TitleFlowIndicator_clipPadding -> TitleFlowIndicator_clipPadding
    int TitleFlowIndicator_customTypeface -> TitleFlowIndicator_customTypeface
    int TitleFlowIndicator_footerColor -> TitleFlowIndicator_footerColor
    int TitleFlowIndicator_footerLineHeight -> TitleFlowIndicator_footerLineHeight
    int TitleFlowIndicator_footerTriangleHeight -> TitleFlowIndicator_footerTriangleHeight
    int TitleFlowIndicator_selectedBold -> TitleFlowIndicator_selectedBold
    int TitleFlowIndicator_selectedColor -> TitleFlowIndicator_selectedColor
    int TitleFlowIndicator_selectedSize -> TitleFlowIndicator_selectedSize
    int TitleFlowIndicator_textColor -> TitleFlowIndicator_textColor
    int TitleFlowIndicator_textSize -> TitleFlowIndicator_textSize
    int TitleFlowIndicator_titlePadding -> TitleFlowIndicator_titlePadding
    int[] TogglePrefAttrs -> TogglePrefAttrs
    int TogglePrefAttrs_android_preferenceLayoutChild -> TogglePrefAttrs_android_preferenceLayoutChild
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor -> UnderlinePageIndicator_selectedColor
    int[] ViewFlow -> ViewFlow
    int ViewFlow_sidebuffer -> ViewFlow_sidebuffer
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_background -> ViewPagerIndicator_background
    int ViewPagerIndicator_feedBackground -> ViewPagerIndicator_feedBackground
    int ViewPagerIndicator_feed_divider -> ViewPagerIndicator_feed_divider
    int ViewPagerIndicator_freeForLifeBackground -> ViewPagerIndicator_freeForLifeBackground
    int ViewPagerIndicator_ic_action_camera -> ViewPagerIndicator_ic_action_camera
    int ViewPagerIndicator_ic_action_collapse -> ViewPagerIndicator_ic_action_collapse
    int ViewPagerIndicator_ic_action_expand -> ViewPagerIndicator_ic_action_expand
    int ViewPagerIndicator_ic_action_message -> ViewPagerIndicator_ic_action_message
    int ViewPagerIndicator_ic_action_overflow -> ViewPagerIndicator_ic_action_overflow
    int ViewPagerIndicator_ic_action_rt_off -> ViewPagerIndicator_ic_action_rt_off
    int ViewPagerIndicator_ic_action_rt_on -> ViewPagerIndicator_ic_action_rt_on
    int ViewPagerIndicator_ic_action_save -> ViewPagerIndicator_ic_action_save
    int ViewPagerIndicator_ic_action_search -> ViewPagerIndicator_ic_action_search
    int ViewPagerIndicator_ic_action_select_image -> ViewPagerIndicator_ic_action_select_image
    int ViewPagerIndicator_ic_action_send -> ViewPagerIndicator_ic_action_send
    int ViewPagerIndicator_ic_action_share -> ViewPagerIndicator_ic_action_share
    int ViewPagerIndicator_ic_action_star_off -> ViewPagerIndicator_ic_action_star_off
    int ViewPagerIndicator_ic_action_star_on -> ViewPagerIndicator_ic_action_star_on
    int ViewPagerIndicator_lane_background -> ViewPagerIndicator_lane_background
    int ViewPagerIndicator_listBackground -> ViewPagerIndicator_listBackground
    int ViewPagerIndicator_themeOppositeText -> ViewPagerIndicator_themeOppositeText
    int ViewPagerIndicator_vpiListTabPageIndicatorStyle -> ViewPagerIndicator_vpiListTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTabTextStyle -> ViewPagerIndicator_vpiTabTextStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.tweetlanes.android.model.AccountDescriptor -> bN:
    long mId -> a
    java.lang.String mScreenName -> b
    java.lang.String mOAuthToken -> c
    java.lang.String mOAuthSecret -> d
    java.util.ArrayList mLaneDefinitions -> e
    boolean mLaneDefinitionsDirty -> f
    java.lang.Integer mInitialLaneIndex -> g
    java.util.ArrayList mLists -> i
    boolean mShouldRefreshLists -> h
    113:136:void initCommon(java.util.ArrayList) -> a
    143:246:void configureLaneDefinitions(java.util.ArrayList) -> b
    253:299:boolean updateTwitterLists(org.tweetalib.android.model.TwitterLists) -> a
    307:336:java.lang.String toString() -> toString
    386:387:void setCurrentLaneIndex(int) -> a
    401:410:com.tweetlanes.android.model.LaneDescriptor getDisplayedLaneDefinition(int) -> b
    417:423:int getDisplayedLaneDefinitionsSize() -> a
com.tweetlanes.android.model.AccountDescriptor$List -> bO:
    java.lang.Integer mId -> a
    java.lang.String mName -> b
    485:492:java.lang.String toString() -> toString
com.tweetlanes.android.model.ComposeTweetDefault -> bP:
    java.lang.String mUserScreenName -> c
    java.lang.String mStatus -> d
    java.lang.String mInitialStatus -> e
    boolean mInitialStatusIsPlaceholder -> f
    java.lang.Long mInReplyToStatusId -> a
    java.lang.String mMediaFilePath -> b
    43:60:java.lang.String toString() -> toString
    180:186:java.lang.String getStatus() -> a
    193:194:void updateStatus(java.lang.String) -> a
    200:206:boolean isPlaceholderStatus() -> b
    214:254:java.lang.String getReplyToUserNamesAsString(java.lang.String,org.tweetalib.android.model.TwitterStatuses) -> a
    261:270:java.lang.String getTwitterUsersAsString(org.tweetalib.android.model.TwitterUsers) -> a
com.tweetlanes.android.model.LaneDescriptor -> bQ:
    java.lang.String kDefaultId -> a
    com.tweetlanes.android.Constant$LaneType mLaneType -> b
    org.tweetalib.android.TwitterContentHandleBase mContentHandleBase -> c
    java.lang.String mLaneTitle -> d
    java.lang.String mIdentifier -> e
    boolean mDisplay -> f
    48:48:com.tweetlanes.android.Constant$LaneType getLaneType() -> a
    52:52:org.tweetalib.android.TwitterContentHandleBase getContentHandleBase() -> b
    56:56:java.lang.String getLaneTitle() -> c
    60:61:void setLaneTitle(java.lang.String) -> a
    64:64:java.lang.String getIdentifier() -> d
    68:68:boolean getDisplay() -> e
    72:73:void setDisplay(boolean) -> a
    79:86:java.lang.String getCacheKey(java.lang.String) -> b
com.tweetlanes.android.service.BackgroundService -> com.tweetlanes.android.service.BackgroundService:
    boolean mIsRunning -> d
    java.util.ArrayList mClients -> a
    android.os.Messenger mMessenger -> e
    android.content.Context mContext -> b
    android.app.NotificationManager mNotificationManager -> f
    android.content.BroadcastReceiver mStateReceiver -> g
    int mCount -> c
    android.os.Handler mHandler -> h
    159:159:android.os.IBinder onBind(android.content.Intent) -> onBind
    210:222:void onCreate() -> onCreate
    226:235:void onDestroy() -> onDestroy
    270:270:boolean isRunning() -> a
    93:93:android.os.Handler access$0(com.tweetlanes.android.service.BackgroundService) -> a
    184:184:void access$1(com.tweetlanes.android.service.BackgroundService,int) -> a
com.tweetlanes.android.service.BackgroundService$1 -> bR:
    com.tweetlanes.android.service.BackgroundService this$0 -> a
    71:82:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tweetlanes.android.service.BackgroundService$2 -> bS:
    com.tweetlanes.android.service.BackgroundService this$0 -> a
    97:138:void handleMessage(android.os.Message) -> handleMessage
com.tweetlanes.android.service.BackgroundService$IncomingHandler -> bT:
    com.tweetlanes.android.service.BackgroundService this$0 -> a
    168:181:void handleMessage(android.os.Message) -> handleMessage
com.tweetlanes.android.util.LazyImageLoader -> bU:
    com.tweetlanes.android.util.LazyImageLoader$MemoryCache mMemoryCache -> a
    com.tweetlanes.android.util.LazyImageLoader$FileCache mFileCache -> b
    java.util.Map mImageViews -> e
    java.util.concurrent.ExecutorService mExecutorService -> f
    int mFallbackRes -> c
    int mRequiredWidth -> g
    int mRequiredHeight -> h
    java.net.Proxy mProxy -> d
    97:98:void clearFileCache() -> a
    101:102:void clearMemoryCache() -> b
    105:106:void displayImage(java.lang.String,android.widget.ImageView) -> a
    159:188:android.graphics.Bitmap decodeFile(java.io.File) -> a
    197:199:boolean imageViewReused(com.tweetlanes.android.util.LazyImageLoader$ImageToLoad) -> a
    141:141:void access$5(com.tweetlanes.android.util.LazyImageLoader,java.io.InputStream,java.io.OutputStream) -> a
com.tweetlanes.android.util.LazyImageLoader$BitmapDisplayer -> bV:
    android.graphics.Bitmap mBitmap -> a
    com.tweetlanes.android.util.LazyImageLoader$ImageToLoad mImageToLoad -> b
    com.tweetlanes.android.util.LazyImageLoader this$0 -> c
    215:221:void run() -> run
com.tweetlanes.android.util.LazyImageLoader$FileCache -> bW:
    java.lang.String mCacheDirName -> b
    java.io.File mCacheDir -> a
    android.content.Context mContext -> c
    256:271:void init() -> a
com.tweetlanes.android.util.LazyImageLoader$ImageLoader -> bX:
    com.tweetlanes.android.util.LazyImageLoader$ImageToLoad mImageToLoad -> a
    com.tweetlanes.android.util.LazyImageLoader this$0 -> b
    289:320:android.graphics.Bitmap getBitmap(java.net.URL) -> a
    325:333:void run() -> run
com.tweetlanes.android.util.LazyImageLoader$ImageToLoad -> bY:
    java.net.URL source -> a
    android.widget.ImageView imageview -> b
com.tweetlanes.android.util.LazyImageLoader$MemoryCache -> bZ:
    int mMaxCapacity -> a
    java.util.Map mSoftCache -> b
    java.util.Map mHardCache -> c
    382:410:android.graphics.Bitmap get(java.net.URL) -> a
com.tweetlanes.android.util.LazyImageLoader$MemoryCache$1 -> ca:
    com.tweetlanes.android.util.LazyImageLoader$MemoryCache this$1 -> a
    366:371:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.tweetlanes.android.view.AppDotNetAuthActivity -> com.tweetlanes.android.view.AppDotNetAuthActivity:
    org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback mGetOAuthAccessTokenCallback -> a
    37:73:void onCreate(android.os.Bundle) -> onCreate
    80:83:void onSuccessfulLogin(org.tweetalib.android.model.TwitterUser,java.lang.String,java.lang.String) -> a
com.tweetlanes.android.view.AppDotNetAuthActivity$1 -> cb:
    com.tweetlanes.android.view.AppDotNetAuthActivity this$0 -> a
    94:97:void finished(boolean,org.tweetalib.android.model.TwitterUser,java.lang.String,java.lang.String) -> finished
com.tweetlanes.android.view.AppDotNetAuthActivity$2 -> cc:
    com.tweetlanes.android.view.AppDotNetAuthActivity this$0 -> a
    57:67:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.tweetlanes.android.view.BaseLaneActivity -> com.tweetlanes.android.view.BaseLaneActivity:
    android.support.v4.view.ViewPager mViewPager -> k
    com.tweetlanes.android.widget.viewpagerindicator.PageIndicator mPageIndicator -> e
    android.view.ActionMode mCurrentActionMode -> l
    android.view.Menu mCurrentMenu -> m
    android.widget.SearchView mSearchView -> n
    android.view.View mLaneMask -> o
    android.widget.LinearLayout mDummyFocusItem -> p
    org.tweetalib.android.model.TwitterStatusesFilter mStatusesFilter -> f
    java.lang.String mShareImagePath -> g
    com.tweetlanes.android.view.ComposeTweetFragment mComposeTweetFragment -> h
    android.view.View mComposeTweetView -> q
    com.tweetlanes.android.view.ComposeDirectMessageFragment mComposeDirectMessageFragment -> i
    android.view.View mComposeDirectMessageView -> r
    com.tweetlanes.android.view.ComposeBaseFragment mCurrentComposeFragment -> s
    android.content.BroadcastReceiver mDisplayToastReceiver -> t
    java.util.HashMap mLaneFragmentHashMap -> j
    int activeInitialDownloadCount -> u
    com.tweetlanes.android.view.ComposeBaseFragment$ComposeListener mComposeTweetListener -> v
    com.tweetlanes.android.view.ComposeBaseFragment$ComposeListener mComposeDirectMessageListener -> w
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> x
    android.view.View$OnClickListener mLaneMaskOnClickListener -> y
    android.content.BroadcastReceiver mForceFragmentPagerAdapterRefreshReceiver -> z
    android.content.BroadcastReceiver mRestartAppReceiver -> A
    int[] $SWITCH_TABLE$com$tweetlanes$android$view$BaseLaneFragment$InitialDownloadState -> B
    97:97:com.tweetlanes.android.App getApp() -> c
    106:207:void onCreate(android.os.Bundle) -> onCreate
    215:218:void onPostCreate(android.os.Bundle) -> onPostCreate
    226:227:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    236:242:void onDestroy() -> onDestroy
    250:259:void onResume() -> onResume
    267:277:void onPause() -> onPause
    298:327:void setCurrentComposeFragment(int) -> d
    339:343:com.tweetlanes.android.view.BaseLaneFragment getFragmentAtIndex(int) -> b
    363:363:java.lang.String getCachedData(int) -> c
    370:373:int getCurrentLaneIndex() -> d
    393:436:void onLaneFragmentInitialDownloadStateChange(com.tweetlanes.android.view.BaseLaneFragment) -> a
    448:473:void onLaneChange(int,int) -> a
    480:489:void onCurrentLaneReselected() -> e
    498:527:boolean triggerNeighbourInitialDownload(int) -> e
    795:801:void restartApp() -> f
    833:836:boolean composeHasFocus() -> g
    844:859:boolean composeReleaseFocus(boolean) -> b
    871:878:java.io.File getFixedTempFile(android.content.Context) -> a
    891:904:java.io.File getTempFile(android.content.Context) -> b
    927:927:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    939:943:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    952:973:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    981:985:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    992:992:android.support.v4.view.PagerAdapter getAdapterForViewPager() -> h
    999:999:android.support.v4.app.FragmentStatePagerAdapter getFragmentStatePagerAdapter() -> i
    1032:1032:int getInitialLaneIndex() -> j
    1060:1107:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1115:1118:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    1126:1129:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    1137:1153:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    1162:1186:boolean configureOptionsMenu(android.view.Menu) -> a
    1193:1193:java.lang.Integer getDefaultOptionsMenu() -> k
    1202:1251:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1258:1258:boolean isComposing() -> l
    1302:1309:void finishCurrentActionMode() -> m
    1327:1331:com.tweetlanes.android.model.ComposeTweetDefault getComposeTweetDefault() -> n
    1338:1341:void setComposeTweetDefault(com.tweetlanes.android.model.ComposeTweetDefault) -> a
    1347:1348:void setComposeTweetDefault() -> o
    1354:1357:void setComposeDefault() -> p
    1389:1409:void retweetSelected(org.tweetalib.android.model.TwitterStatus) -> a
    1416:1471:void shareSelected(org.tweetalib.android.model.TwitterStatus) -> b
    80:80:android.view.View access$0(com.tweetlanes.android.view.BaseLaneActivity) -> a
    78:78:android.view.Menu access$1(com.tweetlanes.android.view.BaseLaneActivity) -> b
    77:77:android.view.ActionMode access$2(com.tweetlanes.android.view.BaseLaneActivity) -> c
    81:81:android.widget.LinearLayout access$3(com.tweetlanes.android.view.BaseLaneActivity) -> d
    83:83:void access$4(com.tweetlanes.android.view.BaseLaneActivity,java.lang.String) -> a
    714:714:void access$5(com.tweetlanes.android.view.BaseLaneActivity) -> e
    332:332:java.util.HashMap access$6(com.tweetlanes.android.view.BaseLaneActivity) -> f
    72:72:int[] $SWITCH_TABLE$com$tweetlanes$android$view$BaseLaneFragment$InitialDownloadState() -> q
    91:91:com.tweetlanes.android.view.ComposeBaseFragment access$8(com.tweetlanes.android.view.BaseLaneActivity) -> g
    88:88:android.view.View access$9(com.tweetlanes.android.view.BaseLaneActivity) -> h
    90:90:android.view.View access$10(com.tweetlanes.android.view.BaseLaneActivity) -> i
    1476:1476:void access$11(com.tweetlanes.android.view.BaseLaneActivity,java.lang.String) -> b
com.tweetlanes.android.view.BaseLaneActivity$1 -> cd:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    286:291:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tweetlanes.android.view.BaseLaneActivity$10 -> ce:
    1401:1402:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.BaseLaneActivity$11 -> cf:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    java.lang.String val$statusUrl -> b
    1434:1435:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.BaseLaneActivity$12 -> cg:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    java.lang.String val$statusText -> b
    1444:1445:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.BaseLaneActivity$13 -> ch:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    java.util.ArrayList val$urls -> b
    1455:1456:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.BaseLaneActivity$14 -> ci:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    java.lang.String val$statusText -> b
    1464:1465:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.BaseLaneActivity$2 -> cj:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    537:562:void onShowCompose() -> a
    566:571:void onHideCompose() -> b
    575:576:void onBackButtonPressed() -> c
    580:581:void onStatusUpdateRequest() -> d
    585:587:void onStatusUpdateSuccess() -> e
    597:598:void onMediaAttach() -> f
    608:609:void onMediaDetach() -> g
    613:614:void onStatusHintUpdate() -> h
    618:619:void saveDraft(java.lang.String) -> a
    623:623:java.lang.String getDraft() -> i
com.tweetlanes.android.view.BaseLaneActivity$3 -> ck:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    634:660:void onShowCompose() -> a
    664:669:void onHideCompose() -> b
    673:674:void onBackButtonPressed() -> c
    678:679:void onStatusUpdateRequest() -> d
    683:684:void onStatusUpdateSuccess() -> e
    688:688:void onMediaAttach() -> f
    692:692:void onMediaDetach() -> g
    696:697:void onStatusHintUpdate() -> h
    702:702:void saveDraft(java.lang.String) -> a
    707:707:java.lang.String getDraft() -> i
com.tweetlanes.android.view.BaseLaneActivity$4 -> cl:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    756:756:void onPageScrollStateChanged(int) -> a
    760:760:void onPageScrolled(int,float,int) -> a
    764:776:void onPageSelected(int,int) -> a
com.tweetlanes.android.view.BaseLaneActivity$5 -> cm:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    786:787:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.BaseLaneActivity$6 -> cn:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    1009:1013:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tweetlanes.android.view.BaseLaneActivity$7 -> co:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    1024:1025:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tweetlanes.android.view.BaseLaneActivity$9 -> cp:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    1280:1290:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.tweetlanes.android.view.BaseLaneFragment -> com.tweetlanes.android.view.BaseLaneFragment:
    com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState mInitialDownloadState -> J
    com.tweetlanes.android.view.BaseLaneActivity mBaseLaneActivity -> K
    42:47:com.tweetlanes.android.view.BaseLaneActivity getBaseLaneActivity() -> y
    54:64:com.tweetlanes.android.App getApp() -> z
    74:74:boolean configureOptionsMenu(android.view.MenuInflater,android.view.Menu) -> a
    81:81:int getLaneIndex() -> A
    104:108:int getAsyncTaskPriorityOffset() -> B
    132:142:void configureBaseLaneFragment(int,java.lang.String,com.tweetlanes.android.view.BaseLaneFragment$ConfigureBundleListener) -> a
    148:148:com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState getInitialDownloadState() -> C
    155:157:void setInitialDownloadState(com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState) -> a
    164:189:void configureLaneWidth(android.view.View) -> a
    void triggerInitialDownload() -> D
    void onJumpToTop() -> E
    void clearLocalCache() -> F
    java.lang.String getDataToCache() -> G
    222:227:void showToast(java.lang.String) -> a
com.tweetlanes.android.view.BaseLaneFragment$ConfigureBundleListener -> cq:
    void addValues(android.os.Bundle) -> a
com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState -> cr:
    com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState NOT_SET -> a
    com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState WAITING -> b
    com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState DOWNLOADING -> c
    com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState DOWNLOADED -> d
    com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState[] ENUM$VALUES -> e
    1:1:com.tweetlanes.android.view.BaseLaneFragment$InitialDownloadState[] values() -> a
com.tweetlanes.android.view.BootActivity -> com.tweetlanes.android.view.BootActivity:
    java.lang.Class mLastStartedClass -> a
    36:47:void onCreate(android.os.Bundle) -> onCreate
    51:54:void onPostCreate(android.os.Bundle) -> onPostCreate
    58:62:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    66:68:void onResume() -> onResume
    73:74:void onDestroy() -> onDestroy
    120:161:void jumpToNext() -> a
com.tweetlanes.android.view.ComposeBaseFragment -> com.tweetlanes.android.view.ComposeBaseFragment:
    android.widget.ImageButton mSendButton -> J
    com.tweetlanes.android.widget.EditClearText mEditText -> K
    android.widget.TextView mCharacterCountTextView -> L
    java.lang.Long mShowStartTime -> M
    com.twitter.Validator mStatusValidator -> N
    com.tweetlanes.android.view.ComposeBaseFragment$ComposeListener mListener -> O
    boolean mHasFocus -> P
    boolean mIgnoreFocusChange -> Q
    boolean mUpdatingStatus -> R
    android.view.View$OnFocusChangeListener mOnFocusChangeListener -> T
    android.text.TextWatcher mTextChangedListener -> U
    android.view.View$OnClickListener mOnSendTweetClickListener -> V
    com.tweetlanes.android.widget.EditClearText$EditClearTextListener mEditClearTextListener -> W
    com.tweetlanes.android.model.ComposeTweetDefault _mComposeDefault -> S
    90:90:com.tweetlanes.android.App getApp() -> y
    103:136:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    145:150:void onPause() -> o
    158:165:void onResume() -> n
    171:176:void showToast(java.lang.String) -> a
    182:193:void showSimpleAlert(int) -> c
    199:199:boolean hasFocus() -> z
    206:207:void setComposeTweetListener(com.tweetlanes.android.view.ComposeBaseFragment$ComposeListener) -> a
    222:223:boolean releaseFocus(boolean) -> c
    231:243:boolean hideCompose() -> A
    283:284:void setIgnoreFocusChange(boolean) -> d
    void onSendClick(java.lang.String) -> b
    378:391:void clearCompose(boolean) -> e
    397:398:void showCompose() -> B
    402:433:void showCompose(java.lang.String) -> c
    440:446:java.lang.String getStatusHintSnippet(java.lang.String,int) -> a
    455:455:com.tweetlanes.android.model.ComposeTweetDefault getComposeTweetDefault() -> C
    463:464:void setComposeTweetDefault(com.tweetlanes.android.model.ComposeTweetDefault) -> a
    470:476:void setComposeDefault(com.tweetlanes.android.model.ComposeTweetDefault) -> b
    483:493:void configureCharacterCountForString(java.lang.String) -> d
    void saveCurrentAsDraft() -> D
    void updateStatusHint() -> E
    int getLayoutResourceId() -> F
    void onShowCompose() -> G
    void onHideCompose() -> H
com.tweetlanes.android.view.ComposeBaseFragment$1 -> cs:
    com.tweetlanes.android.view.ComposeBaseFragment this$0 -> a
    272:275:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.tweetlanes.android.view.ComposeBaseFragment$2 -> ct:
    com.tweetlanes.android.view.ComposeBaseFragment this$0 -> a
    292:298:void afterTextChanged(android.text.Editable) -> afterTextChanged
    302:302:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    306:306:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.tweetlanes.android.view.ComposeBaseFragment$3 -> cu:
    com.tweetlanes.android.view.ComposeBaseFragment this$0 -> a
    316:318:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.ComposeBaseFragment$5 -> cv:
    189:189:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.ComposeBaseFragment$ComposeListener -> cw:
    void onShowCompose() -> a
    void onHideCompose() -> b
    void onMediaAttach() -> f
    void onMediaDetach() -> g
    void onBackButtonPressed() -> c
    void onStatusUpdateRequest() -> d
    void onStatusUpdateSuccess() -> e
    void onStatusHintUpdate() -> h
    void saveDraft(java.lang.String) -> a
    java.lang.String getDraft() -> i
com.tweetlanes.android.view.ComposeDirectMessageFragment -> com.tweetlanes.android.view.ComposeDirectMessageFragment:
    android.widget.EditText mSendToEditText -> T
    java.lang.String mOtherUserScreenName -> U
    android.os.Handler mHandler -> V
    org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback mOnSetStatusCallback -> W
    50:57:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    64:65:void setOtherUserScreenName(java.lang.String) -> e
    207:228:void saveCurrentAsDraft() -> D
    238:277:void onSendClick(java.lang.String) -> b
    284:295:java.lang.String getStatusHint(com.tweetlanes.android.model.ComposeTweetDefault) -> c
    304:329:void updateStatusHint() -> E
    337:350:void onShowCompose() -> G
    358:359:void onHideCompose() -> H
    368:368:int getLayoutResourceId() -> F
    37:37:android.widget.EditText access$0(com.tweetlanes.android.view.ComposeDirectMessageFragment) -> a
com.tweetlanes.android.view.ComposeDirectMessageFragment$1 -> cx:
    com.tweetlanes.android.view.ComposeDirectMessageFragment this$0 -> a
    147:199:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterDirectMessages) -> finished
com.tweetlanes.android.view.ComposeDirectMessageFragment$2 -> cy:
    com.tweetlanes.android.view.ComposeDirectMessageFragment this$0 -> a
    343:344:void run() -> run
com.tweetlanes.android.view.ComposeTweetFragment -> com.tweetlanes.android.view.ComposeTweetFragment:
    android.widget.ImageView mAttachImagePreview -> U
    org.tweetalib.android.TwitterFetchStatus$FinishedCallback mOnSetStatusCallback -> V
    org.tweetalib.android.model.TwitterStatus mRetweetStatus -> T
    int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$QuoteType -> W
    55:62:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    71:73:void setComposeTweetDefault(com.tweetlanes.android.model.ComposeTweetDefault) -> a
    81:91:void updateComposeTweetDefault() -> I
    99:105:java.lang.String getTweetDefaultDraft() -> J
    113:118:void setTweetDefaultFromDraft(java.lang.String) -> e
    226:229:java.lang.Long getInReplyToId() -> K
    236:239:java.lang.String getMediaFilePath() -> L
    247:268:void saveCurrentAsDraft() -> D
    278:280:void clearCompose(boolean) -> e
    290:340:void onSendClick(java.lang.String) -> b
    347:370:java.lang.String getStatusHint(com.tweetlanes.android.model.ComposeTweetDefault) -> c
    379:404:void updateStatusHint() -> E
    411:419:void setMediaFilePath(java.lang.String) -> f
    425:445:void setMediaPreviewVisibility() -> M
    451:454:void beginQuote(org.tweetalib.android.model.TwitterStatus) -> a
    460:463:void beginShare(java.lang.String) -> g
    472:508:void retweetSelected(org.tweetalib.android.model.TwitterStatus) -> b
    517:517:int getLayoutResourceId() -> F
    527:527:void onShowCompose() -> G
    536:536:void onHideCompose() -> H
    42:42:int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$QuoteType() -> N
com.tweetlanes.android.view.ComposeTweetFragment$1 -> cz:
    com.tweetlanes.android.view.ComposeTweetFragment this$0 -> a
    135:188:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatus) -> finished
com.tweetlanes.android.view.ComposeTweetFragment$2 -> cA:
    483:483:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.ComposeTweetFragment$3 -> cB:
    com.tweetlanes.android.view.ComposeTweetFragment this$0 -> a
    490:494:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.ComposeTweetFragment$4 -> cC:
    com.tweetlanes.android.view.ComposeTweetFragment this$0 -> a
    500:505:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.ConversationView -> com.tweetlanes.android.view.ConversationView:
    com.tweetlanes.android.view.ConversationView$Callbacks mCallbacks -> a
    org.tweetalib.android.model.TwitterStatus mTwitterStatus -> b
    android.widget.RelativeLayout mLoadingView -> c
    org.tweetalib.android.TwitterContentHandle mContentHandle -> d
    org.tweetalib.android.model.TwitterStatuses mConversationStatuses -> e
    android.widget.LinearLayout mConversationView -> f
    android.view.LayoutInflater mInflater -> g
    80:114:void configure(org.tweetalib.android.model.TwitterStatus,android.view.LayoutInflater,com.tweetlanes.android.view.ConversationView$Callbacks) -> a
    121:135:void setStatuses(org.tweetalib.android.model.TwitterStatuses) -> a
    142:163:void updateViewVisibility(boolean) -> a
    119:119:void access$0(com.tweetlanes.android.view.ConversationView,org.tweetalib.android.model.TwitterStatuses) -> a
    140:140:void access$1(com.tweetlanes.android.view.ConversationView,boolean) -> a
    36:36:com.tweetlanes.android.view.ConversationView$Callbacks access$2(com.tweetlanes.android.view.ConversationView) -> a
com.tweetlanes.android.view.ConversationView$1 -> cD:
    com.tweetlanes.android.view.ConversationView this$0 -> a
    106:110:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatuses) -> finished
com.tweetlanes.android.view.ConversationView$2 -> cE:
    com.tweetlanes.android.view.ConversationView this$0 -> a
    180:180:boolean onSingleTapConfirmed(android.view.View,int) -> a
    185:185:void onLongPress(android.view.View,int) -> b
    189:189:android.app.Activity getActivity() -> a
    194:194:void onUrlClicked(org.tweetalib.android.model.TwitterStatus) -> a
    198:198:void onConversationViewToggle(long,boolean) -> a
    202:202:android.view.LayoutInflater getLayoutInflater() -> b
    207:207:com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> c
    212:212:com.tweetlanes.android.util.LazyImageLoader getPreviewImageLoader() -> d
com.tweetlanes.android.view.ConversationView$Callbacks -> cF:
    com.tweetlanes.android.view.TweetFeedItemView this$0 -> a
    621:621:android.app.Activity getActivity() -> a
    626:626:com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> b
    631:631:com.tweetlanes.android.util.LazyImageLoader getPreviewImageLoader() -> c
com.tweetlanes.android.view.DirectMessageActivity -> com.tweetlanes.android.view.DirectMessageActivity:
    com.tweetlanes.android.view.DirectMessageActivity$DirectMessageLaneAdapter mDirectMessageLaneAdapter -> k
    android.widget.ViewSwitcher mViewSwitcher -> l
    47:53:void createAndStartActivity(android.app.Activity,org.tweetalib.android.TwitterContentHandle,long,java.lang.String) -> a
    61:70:void onCreate(android.os.Bundle) -> onCreate
    79:89:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    98:100:boolean configureOptionsMenu(android.view.Menu) -> a
    108:114:boolean configureActionBarView() -> s
    121:121:org.tweetalib.android.TwitterContentHandle getContentHandle() -> q
    126:126:long getOtherUserId() -> r
    130:130:java.lang.String getOtherUserScreenName() -> t
    139:139:java.lang.Integer getDefaultOptionsMenu() -> k
    149:153:android.support.v4.view.PagerAdapter getAdapterForViewPager() -> h
    164:164:android.support.v4.app.FragmentStatePagerAdapter getFragmentStatePagerAdapter() -> i
com.tweetlanes.android.view.DirectMessageActivity$DirectMessageLaneAdapter -> cG:
    com.tweetlanes.android.view.DirectMessageActivity this$0 -> b
    179:180:android.support.v4.app.Fragment getItem(int) -> a
    188:188:int getCount() -> b
    194:194:java.lang.String getTitle(int) -> b
    199:199:int getItemPosition$5d527804() -> c
com.tweetlanes.android.view.DirectMessageFeedFragment -> com.tweetlanes.android.view.DirectMessageFeedFragment:
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView mConversationListView -> J
    com.tweetlanes.android.view.DirectMessageFeedFragment$DirectMessageConversationListAdapter mConversationListAdapter -> K
    org.tweetalib.android.TwitterContentHandle mContentHandle -> L
    org.tweetalib.android.model.TwitterDirectMessagesHandle mDirectMessagesHandle -> M
    java.util.ArrayList mDirectMessageConversation -> N
    org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback mRefreshCallback -> O
    android.widget.ViewSwitcher mViewSwitcher -> P
    java.lang.Long mNewestDirectMessageId -> Q
    java.lang.Long mRefreshingNewestDirectMessageId -> R
    java.lang.Long mOldestDirectMessageId -> S
    java.lang.Long mRefreshingDirectMessageId -> T
    boolean mMoreDirectMessagesAvailable -> U
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> V
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> W
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> X
    android.widget.AdapterView$OnItemClickListener mTweetFeedOnItemClickListener -> Y
    60:82:com.tweetlanes.android.view.DirectMessageFeedFragment newInstance(int,org.tweetalib.android.TwitterContentHandleBase,java.lang.String,java.lang.String,java.lang.Long) -> a
    103:103:com.tweetlanes.android.App getApp() -> z
    116:184:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    194:195:void onSaveInstanceState(android.os.Bundle) -> d
    203:204:void onDestroy() -> p
    212:212:java.lang.String getScreenName() -> H
    220:220:java.lang.Long getOtherUserId() -> I
    229:253:void setDirectMessages(org.tweetalib.android.model.TwitterDirectMessages) -> a
    279:289:void updateViewVisibility(boolean) -> c
    297:304:void onJumpToTop() -> E
    312:313:void clearLocalCache() -> F
    321:321:java.lang.String getDataToCache() -> G
    654:680:void triggerInitialDownload() -> D
    85:85:com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView access$0(com.tweetlanes.android.view.DirectMessageFeedFragment) -> a
    265:265:void access$1(com.tweetlanes.android.view.DirectMessageFeedFragment,org.tweetalib.android.model.TwitterDirectMessages) -> a
    96:96:java.lang.Long access$2(com.tweetlanes.android.view.DirectMessageFeedFragment) -> b
    95:95:java.lang.Long access$3(com.tweetlanes.android.view.DirectMessageFeedFragment) -> c
    97:97:void access$4(com.tweetlanes.android.view.DirectMessageFeedFragment,boolean) -> a
    96:96:void access$5(com.tweetlanes.android.view.DirectMessageFeedFragment,java.lang.Long) -> a
    90:90:void access$6(com.tweetlanes.android.view.DirectMessageFeedFragment,org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback) -> a
    86:86:com.tweetlanes.android.view.DirectMessageFeedFragment$DirectMessageConversationListAdapter access$7(com.tweetlanes.android.view.DirectMessageFeedFragment) -> d
    87:87:org.tweetalib.android.TwitterContentHandle access$8(com.tweetlanes.android.view.DirectMessageFeedFragment) -> e
    90:90:org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback access$9(com.tweetlanes.android.view.DirectMessageFeedFragment) -> f
    94:94:void access$10(com.tweetlanes.android.view.DirectMessageFeedFragment,java.lang.Long) -> b
    93:93:java.lang.Long access$11(com.tweetlanes.android.view.DirectMessageFeedFragment) -> g
    94:94:java.lang.Long access$12(com.tweetlanes.android.view.DirectMessageFeedFragment) -> h
    89:89:java.util.ArrayList access$13(com.tweetlanes.android.view.DirectMessageFeedFragment) -> i
    219:219:java.lang.Long access$14(com.tweetlanes.android.view.DirectMessageFeedFragment) -> j
    450:450:void access$15(com.tweetlanes.android.view.DirectMessageFeedFragment,android.view.View,int) -> a
    211:211:java.lang.String access$16(com.tweetlanes.android.view.DirectMessageFeedFragment) -> k
    97:97:boolean access$17(com.tweetlanes.android.view.DirectMessageFeedFragment) -> l
    277:277:void access$18(com.tweetlanes.android.view.DirectMessageFeedFragment,boolean) -> b
com.tweetlanes.android.view.DirectMessageFeedFragment$1 -> cH:
    com.tweetlanes.android.view.DirectMessageFeedFragment this$0 -> a
    332:334:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    339:346:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.tweetlanes.android.view.DirectMessageFeedFragment$2 -> cI:
    com.tweetlanes.android.view.DirectMessageFeedFragment this$0 -> a
    358:391:void onLastItemVisible() -> a
com.tweetlanes.android.view.DirectMessageFeedFragment$2$1 -> cJ:
    com.tweetlanes.android.view.DirectMessageFeedFragment$2 this$1 -> a
    364:371:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterDirectMessages) -> finished
com.tweetlanes.android.view.DirectMessageFeedFragment$3 -> cK:
    com.tweetlanes.android.view.DirectMessageFeedFragment this$0 -> a
    402:433:void onRefresh() -> a
com.tweetlanes.android.view.DirectMessageFeedFragment$3$1 -> cL:
    com.tweetlanes.android.view.DirectMessageFeedFragment$3 this$1 -> a
    408:411:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterDirectMessages) -> finished
com.tweetlanes.android.view.DirectMessageFeedFragment$4 -> cM:
    444:444:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.tweetlanes.android.view.DirectMessageFeedFragment$5 -> cN:
    org.tweetalib.android.TwitterContentHandleBase val$handleBase -> a
    java.lang.String val$screenName -> b
    java.lang.String val$laneIdentifier -> c
    java.lang.Long val$otherUserId -> d
    72:78:void addValues(android.os.Bundle) -> a
com.tweetlanes.android.view.DirectMessageFeedFragment$6 -> cO:
    com.tweetlanes.android.view.DirectMessageFeedFragment this$0 -> a
    659:666:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterDirectMessages) -> finished
com.tweetlanes.android.view.DirectMessageFeedFragment$DirectMessageConversationListAdapter -> cP:
    android.view.LayoutInflater mInflater -> a
    com.tweetlanes.android.view.DirectMessageFeedFragment this$0 -> b
    511:524:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    545:545:long getItemId(int) -> getItemId
    553:565:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    622:636:android.view.View getLoadMoreView$75a6a5c1() -> a
    497:497:com.tweetlanes.android.view.DirectMessageFeedFragment access$0(com.tweetlanes.android.view.DirectMessageFeedFragment$DirectMessageConversationListAdapter) -> a
com.tweetlanes.android.view.DirectMessageItemView -> com.tweetlanes.android.view.DirectMessageItemView:
    android.content.Context mContext -> a
    int mPosition -> b
    org.tweetalib.android.model.TwitterDirectMessage mDirectMessage -> c
    com.tweetlanes.android.view.DirectMessageItemView$DirectMessageItemViewCallbacks mCallbacks -> d
    android.widget.TextView mAuthorScreenNameTextView -> e
    android.widget.TextView mStatusTextView -> f
    android.widget.TextView mPrettyDateTextView -> g
    android.view.View mMessageBlock -> h
    com.tweetlanes.android.view.QuickContactDivot mAvatar -> i
    boolean mFullConversation -> j
    android.graphics.Path mPath -> k
    android.graphics.Paint mPaint -> l
    int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$StatusSize -> m
    int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$ProfileImageSize -> n
    99:228:void configure(java.lang.String,org.tweetalib.android.model.TwitterDirectMessage,int,org.tweetalib.android.model.TwitterDirectMessage$MessageType,boolean,com.tweetlanes.android.view.DirectMessageItemView$DirectMessageItemViewCallbacks) -> a
    240:240:org.tweetalib.android.model.TwitterDirectMessage getDirectMessage() -> a
    247:268:void onProfileImageClick() -> b
    277:309:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    41:41:int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$StatusSize() -> c
    41:41:int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$ProfileImageSize() -> d
    233:233:void access$2(com.tweetlanes.android.view.DirectMessageItemView) -> a
com.tweetlanes.android.view.DirectMessageItemView$1 -> cQ:
    com.tweetlanes.android.view.DirectMessageItemView this$0 -> a
    179:180:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.DirectMessageItemView$2 -> cR:
    com.tweetlanes.android.view.DirectMessageItemView this$0 -> a
    221:222:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.DirectMessageItemView$DirectMessageItemViewCallbacks -> cS:
    com.tweetlanes.android.view.DirectMessageFeedFragment$DirectMessageConversationListAdapter this$1 -> a
    596:597:void onClicked(android.view.View,int) -> a
    601:601:android.app.Activity getActivity() -> a
    606:606:com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> b
com.tweetlanes.android.view.Divot -> cT:
    java.lang.String[] sPositionChoices -> a
com.tweetlanes.android.view.HomeActivity -> com.tweetlanes.android.view.HomeActivity:
    com.tweetlanes.android.view.HomeActivity$HomeLaneAdapter mHomeLaneAdapter -> o
    java.lang.String[] mAdapterStrings -> p
    android.widget.SpinnerAdapter mSpinnerAdapter -> k
    android.widget.ViewSwitcher mViewSwitcher -> q
    org.tweetalib.android.TwitterFetchLists$FinishedCallback mFetchListsCallback -> l
    android.app.ActionBar$OnNavigationListener mOnNavigationListener -> r
    android.os.Handler mRefreshListsHandler -> s
    java.lang.Runnable mRefreshListsTask -> t
    android.os.Messenger mService -> m
    boolean mIsBound -> u
    android.os.Messenger mMessenger -> n
    android.content.ServiceConnection mConnection -> v
    91:137:void onCreate(android.os.Bundle) -> onCreate
    200:227:void onResume() -> onResume
    235:243:void onPause() -> onPause
    252:261:void onDestroy() -> onDestroy
    269:269:int getInitialLaneIndex() -> j
    278:293:java.lang.String getCachedData(int) -> c
    303:306:android.support.v4.view.PagerAdapter getAdapterForViewPager() -> h
    317:317:android.support.v4.app.FragmentStatePagerAdapter getFragmentStatePagerAdapter() -> i
    326:331:void onLaneChange(int,int) -> a
    337:363:void saveData(int) -> d
    381:383:boolean configureOptionsMenu(android.view.Menu) -> a
    392:392:java.lang.Integer getDefaultOptionsMenu() -> k
    404:447:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    480:503:boolean configureListNavigation() -> r
    703:710:void onLaneDataSetChanged() -> q
    866:869:void doBindService() -> s
    536:536:void access$0(com.tweetlanes.android.view.HomeActivity) -> a
    509:509:void access$1(com.tweetlanes.android.view.HomeActivity,com.tweetlanes.android.model.AccountDescriptor) -> a
com.tweetlanes.android.view.HomeActivity$1 -> cU:
    com.tweetlanes.android.view.HomeActivity this$0 -> a
    664:665:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.HomeActivity$2 -> cV:
    com.tweetlanes.android.view.HomeActivity this$0 -> a
    676:696:void run() -> run
    672:672:com.tweetlanes.android.view.HomeActivity access$0(com.tweetlanes.android.view.HomeActivity$2) -> a
com.tweetlanes.android.view.HomeActivity$2$1 -> cW:
    com.tweetlanes.android.view.HomeActivity$2 this$1 -> a
    680:688:void finished(boolean,org.tweetalib.android.model.TwitterLists) -> finished
com.tweetlanes.android.view.HomeActivity$3 -> cX:
    com.tweetlanes.android.view.HomeActivity this$0 -> a
    841:852:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    857:859:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.tweetlanes.android.view.HomeActivity$4 -> cY:
    com.tweetlanes.android.view.HomeActivity this$0 -> a
    com.tweetlanes.android.App val$app -> b
    int val$position -> c
    342:361:void run() -> run
com.tweetlanes.android.view.HomeActivity$5 -> cZ:
    com.tweetlanes.android.view.HomeActivity this$0 -> a
    459:470:boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
com.tweetlanes.android.view.HomeActivity$HomeLaneAdapter -> da:
    com.tweetlanes.android.view.HomeActivity this$0 -> b
    int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType -> c
    724:773:android.support.v4.app.Fragment getItem(int) -> a
    779:784:int getCount() -> b
    790:798:java.lang.String getTitle(int) -> b
    803:803:int getItemPosition$5d527804() -> c
    715:715:int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType() -> d
com.tweetlanes.android.view.HomeActivity$IncomingHandler -> db:
    821:832:void handleMessage(android.os.Message) -> handleMessage
com.tweetlanes.android.view.ImageViewActivity -> com.tweetlanes.android.view.ImageViewActivity:
    com.tweetlanes.android.widget.gestureimageview.GestureImageView mZoomableImageView -> e
    59:64:void createAndStartActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String) -> a
    71:104:void onCreate(android.os.Bundle) -> onCreate
    112:116:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    126:209:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    216:228:java.lang.String getMediaUrl() -> c
com.tweetlanes.android.view.ImageViewActivity$1 -> dc:
    com.tweetlanes.android.view.ImageViewActivity this$0 -> a
    93:99:void onComplete(boolean) -> a
com.tweetlanes.android.view.InflatedLayoutFragment -> com.tweetlanes.android.view.InflatedLayoutFragment:
    java.lang.Integer mLayoutResourceId -> J
    com.tweetlanes.android.view.InflatedLayoutFragment$Callback mCallback -> K
    41:41:com.tweetlanes.android.view.InflatedLayoutFragment newInstance(int) -> c
    49:52:com.tweetlanes.android.view.InflatedLayoutFragment newInstance(int,com.tweetlanes.android.view.InflatedLayoutFragment$Callback) -> a
    64:78:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    88:92:void onSaveInstanceState(android.os.Bundle) -> d
com.tweetlanes.android.view.InflatedLayoutFragment$Callback -> dd:
    240:246:void onCreateView(android.view.View) -> a
com.tweetlanes.android.view.LoadMoreView -> com.tweetlanes.android.view.LoadMoreView:
    com.tweetlanes.android.view.LoadMoreView$Mode mMode -> a
    int[] $SWITCH_TABLE$com$tweetlanes$android$view$LoadMoreView$Mode -> b
    47:70:void configure(com.tweetlanes.android.view.LoadMoreView$Mode) -> a
    22:22:int[] $SWITCH_TABLE$com$tweetlanes$android$view$LoadMoreView$Mode() -> a
com.tweetlanes.android.view.LoadMoreView$Mode -> de:
    com.tweetlanes.android.view.LoadMoreView$Mode LOADING -> a
    com.tweetlanes.android.view.LoadMoreView$Mode NONE_FOUND -> b
    com.tweetlanes.android.view.LoadMoreView$Mode LOAD_MORE -> c
    com.tweetlanes.android.view.LoadMoreView$Mode NO_MORE -> d
    com.tweetlanes.android.view.LoadMoreView$Mode[] ENUM$VALUES -> e
    1:1:com.tweetlanes.android.view.LoadMoreView$Mode[] values() -> a
com.tweetlanes.android.view.LoadingFragment -> com.tweetlanes.android.view.LoadingFragment:
    28:30:com.tweetlanes.android.view.LoadingFragment newInstance(int) -> c
    43:48:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    58:58:void triggerInitialDownload() -> D
    66:66:void onJumpToTop() -> E
    74:74:void clearLocalCache() -> F
    82:82:java.lang.String getDataToCache() -> G
com.tweetlanes.android.view.PlaceholderPagerFragment -> com.tweetlanes.android.view.PlaceholderPagerFragment:
    java.lang.String mContent -> J
    32:43:com.tweetlanes.android.view.PlaceholderPagerFragment newInstance$49e54ba5(int,java.lang.String) -> a
    57:76:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    81:83:void onSaveInstanceState(android.os.Bundle) -> d
    92:92:void triggerInitialDownload() -> D
    100:100:void onJumpToTop() -> E
    108:108:void clearLocalCache() -> F
    116:116:java.lang.String getDataToCache() -> G
com.tweetlanes.android.view.ProfileActivity -> com.tweetlanes.android.view.ProfileActivity:
    com.tweetlanes.android.view.ProfileActivity$ProfileAdapter mProfileAdapter -> l
    android.widget.ViewSwitcher mViewSwitcher -> m
    org.tweetalib.android.model.TwitterUser mUser -> k
    java.lang.String mScreenName -> n
    56:107:void onCreate(android.os.Bundle) -> onCreate
    119:122:void onDestroy() -> onDestroy
    129:129:com.tweetlanes.android.model.ComposeTweetDefault getComposeTweetDefault() -> n
    140:143:android.support.v4.view.PagerAdapter getAdapterForViewPager() -> h
    154:154:android.support.v4.app.FragmentStatePagerAdapter getFragmentStatePagerAdapter() -> i
    162:176:void updateViewVisibility() -> q
    183:185:boolean configureOptionsMenu(android.view.Menu) -> a
    193:233:boolean configureActionBarView() -> r
    245:257:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    160:160:void access$0(com.tweetlanes.android.view.ProfileActivity) -> a
com.tweetlanes.android.view.ProfileActivity$1 -> df:
    com.tweetlanes.android.view.ProfileActivity this$0 -> a
    75:82:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUser) -> finished
com.tweetlanes.android.view.ProfileActivity$ProfileAdapter -> dg:
    com.tweetlanes.android.view.ProfileActivity this$0 -> b
    int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType -> c
    274:303:android.support.v4.app.Fragment getItem(int) -> a
    308:308:int getCount() -> b
    313:313:java.lang.String getTitle(int) -> b
    319:319:int getItemPosition$5d527804() -> c
    264:264:int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType() -> d
com.tweetlanes.android.view.ProfileFragment -> com.tweetlanes.android.view.ProfileFragment:
    org.tweetalib.android.model.TwitterUser mUser -> J
    android.view.View mProfileView -> K
    java.lang.Boolean mFollowsLoggedInUser -> L
    java.lang.Boolean mLoggedInUserFollows -> M
    org.tweetalib.android.TwitterFetchBooleans$FinishedCallback mFriendshipCallback -> N
    android.widget.Button mFriendshipButton -> O
    android.view.View mFriendshipDivider -> P
    android.view.View$OnClickListener mFrienshipButtonListener -> Q
    org.tweetalib.android.TwitterFetchUsers$FinishedCallback mUpdateFriendshipFinishedCallback -> R
    51:65:com.tweetlanes.android.view.ProfileFragment newInstance(int,java.lang.Long) -> a
    109:165:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    173:292:void configureView() -> H
    299:310:void configureFriendshipButtonVisibility(java.lang.Boolean) -> a
    363:392:void triggerInitialDownload() -> D
    400:400:void onJumpToTop() -> E
    408:409:void clearLocalCache() -> F
    417:417:java.lang.String getDataToCache() -> G
    91:91:org.tweetalib.android.model.TwitterUser access$0(com.tweetlanes.android.view.ProfileFragment) -> a
    94:94:java.lang.Boolean access$1(com.tweetlanes.android.view.ProfileFragment) -> b
    352:352:org.tweetalib.android.TwitterFetchUsers$FinishedCallback access$2(com.tweetlanes.android.view.ProfileFragment) -> c
    297:297:void access$3(com.tweetlanes.android.view.ProfileFragment,java.lang.Boolean) -> a
    94:94:void access$4(com.tweetlanes.android.view.ProfileFragment,java.lang.Boolean) -> b
    352:352:void access$5(com.tweetlanes.android.view.ProfileFragment,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> a
    93:93:void access$6(com.tweetlanes.android.view.ProfileFragment,java.lang.Boolean) -> c
    92:92:android.view.View access$7(com.tweetlanes.android.view.ProfileFragment) -> d
    93:93:java.lang.Boolean access$8(com.tweetlanes.android.view.ProfileFragment) -> e
    91:91:void access$9(com.tweetlanes.android.view.ProfileFragment,org.tweetalib.android.model.TwitterUser) -> a
com.tweetlanes.android.view.ProfileFragment$1 -> dh:
    com.tweetlanes.android.view.ProfileFragment this$0 -> a
    320:348:void onClick(android.view.View) -> onClick
    315:315:com.tweetlanes.android.view.ProfileFragment access$0(com.tweetlanes.android.view.ProfileFragment$1) -> a
com.tweetlanes.android.view.ProfileFragment$1$1 -> di:
    com.tweetlanes.android.view.ProfileFragment$1 this$1 -> a
    boolean val$willCreateFriendship -> b
    335:340:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUsers) -> finished
com.tweetlanes.android.view.ProfileFragment$2 -> dj:
    java.lang.Long val$userId -> a
    58:61:void addValues(android.os.Bundle) -> a
com.tweetlanes.android.view.ProfileFragment$4 -> dk:
    com.tweetlanes.android.view.ProfileFragment this$0 -> a
    134:151:void finished(org.tweetalib.android.TwitterFetchResult,java.util.ArrayList) -> finished
com.tweetlanes.android.view.ProfileFragment$5 -> dl:
    com.tweetlanes.android.view.ProfileFragment this$0 -> a
    366:371:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUser) -> finished
com.tweetlanes.android.view.QuickContactDivot -> com.tweetlanes.android.view.QuickContactDivot:
    android.graphics.drawable.Drawable mDrawable -> b
    int mDrawableIntrinsicWidth -> c
    int mDrawableIntrinsicHeight -> d
    int mPosition -> e
    float mDensity -> f
    42:51:void initialize(android.util.AttributeSet) -> a
    54:85:void setDrawable() -> c
    89:94:void onDraw(android.graphics.Canvas) -> onDraw
    97:100:void setPosition(int) -> setPosition
    107:107:float getCloseOffset() -> a
    119:119:float getFarOffset() -> b
com.tweetlanes.android.view.SearchActivity -> com.tweetlanes.android.view.SearchActivity:
    java.lang.String mSearchTerm -> k
    com.tweetlanes.android.view.SearchActivity$SearchAdapter mSearchAdapter -> l
    android.widget.ViewSwitcher mViewSwitcher -> m
    38:64:void onCreate(android.os.Bundle) -> onCreate
    74:81:android.support.v4.view.PagerAdapter getAdapterForViewPager() -> h
    92:92:android.support.v4.app.FragmentStatePagerAdapter getFragmentStatePagerAdapter() -> i
    107:119:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    186:194:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    31:31:java.lang.String access$0(com.tweetlanes.android.view.SearchActivity) -> a
com.tweetlanes.android.view.SearchActivity$SearchAdapter -> dm:
    com.tweetlanes.android.view.SearchActivity this$0 -> b
    int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType -> c
    136:157:android.support.v4.app.Fragment getItem(int) -> a
    162:162:int getCount() -> b
    167:167:java.lang.String getTitle(int) -> b
    173:173:int getItemPosition$5d527804() -> c
    126:126:int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType() -> d
com.tweetlanes.android.view.SettingsActivity -> com.tweetlanes.android.view.SettingsActivity:
    android.preference.ListPreference mThemePreference -> a
    android.preference.Preference mCustomizeLanesPreference -> b
    android.preference.CheckBoxPreference mShowTabletMarginPreference -> c
    android.preference.ListPreference mStatusSizePreference -> d
    android.preference.ListPreference mProfileImageSizePreference -> e
    android.preference.CheckBoxPreference mDownloadImagesPreference -> f
    android.preference.CheckBoxPreference mShowTweetSourcePreference -> g
    android.preference.ListPreference mQuoteTypePreference -> h
    android.preference.CheckBoxPreference mVolScrollPreference -> i
    android.preference.Preference mClearImageCachePreference -> j
    android.preference.Preference mCreditsPreference -> k
    android.preference.Preference mSourceCodePreference -> l
    android.preference.Preference mDonatePreference -> m
    android.preference.Preference mVersionPreference -> n
    97:97:com.tweetlanes.android.App getApp() -> a
    107:247:void onCreate(android.os.Bundle) -> onCreate
    255:395:void onResume() -> onResume
    403:407:void onPause() -> onPause
    417:433:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    442:451:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.tweetlanes.android.view.SettingsActivity$1 -> dn:
    com.tweetlanes.android.view.SettingsActivity this$0 -> a
    153:180:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.tweetlanes.android.view.SettingsActivity$1$1 -> do:
    174:177:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.SettingsActivity$2 -> dp:
    com.tweetlanes.android.view.SettingsActivity this$0 -> a
    198:231:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    194:194:com.tweetlanes.android.view.SettingsActivity access$0(com.tweetlanes.android.view.SettingsActivity$2) -> a
com.tweetlanes.android.view.SettingsActivity$2$1 -> dq:
    com.tweetlanes.android.view.SettingsActivity$2 this$1 -> a
    213:218:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.SettingsActivity$2$2 -> dr:
    226:227:void onClick(android.content.DialogInterface,int) -> onClick
com.tweetlanes.android.view.SettingsActivity$3 -> ds:
    com.tweetlanes.android.view.SettingsActivity this$0 -> a
    323:327:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.tweetlanes.android.view.SettingsActivity$4 -> dt:
    com.tweetlanes.android.view.SettingsActivity this$0 -> a
    336:339:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.tweetlanes.android.view.SettingsActivity$5 -> du:
    com.tweetlanes.android.view.SettingsActivity this$0 -> a
    349:387:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.tweetlanes.android.view.SettingsActivity$LaneCustomizationAdapter -> dv:
    android.content.Context mContext -> a
    java.util.ArrayList mLaneDefinitions -> b
    com.tweetlanes.android.view.SettingsActivity this$0 -> c
    472:517:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    458:458:com.tweetlanes.android.view.SettingsActivity access$0(com.tweetlanes.android.view.SettingsActivity$LaneCustomizationAdapter) -> a
com.tweetlanes.android.view.SettingsActivity$LaneCustomizationAdapter$1 -> dw:
    com.tweetlanes.android.view.SettingsActivity$LaneCustomizationAdapter this$1 -> a
    com.tweetlanes.android.model.LaneDescriptor val$lane -> b
    android.widget.CheckBox val$checkbox -> c
    489:492:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.SettingsActivity$LaneCustomizationAdapter$2 -> dx:
    com.tweetlanes.android.view.SettingsActivity$LaneCustomizationAdapter this$1 -> a
    android.widget.CheckBox val$checkbox -> b
    com.tweetlanes.android.model.LaneDescriptor val$lane -> c
    505:509:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.TutorialActivity -> com.tweetlanes.android.view.TutorialActivity:
    android.support.v4.view.ViewPager mViewPager -> e
    com.tweetlanes.android.view.TutorialActivity$TutorialLaneAdapter mLaneAdapter -> f
    boolean mDoFollow -> g
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> h
    55:55:com.tweetlanes.android.App getApp() -> c
    64:90:void onCreate(android.os.Bundle) -> onCreate
    97:136:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    177:186:void onFinishTutorialClicked(android.view.View) -> onFinishTutorialClicked
    192:193:void onFollowCheckboxClicked(android.view.View) -> onFollowCheckboxClicked
    39:39:android.support.v4.view.ViewPager access$0(com.tweetlanes.android.view.TutorialActivity) -> a
com.tweetlanes.android.view.TutorialActivity$1 -> dy:
    com.tweetlanes.android.view.TutorialActivity this$0 -> a
    146:146:void onPageScrollStateChanged(int) -> a
    150:150:void onPageScrolled(int,float,int) -> a
    155:169:void onPageSelected(int,int) -> a
com.tweetlanes.android.view.TutorialActivity$2 -> dz:
    com.tweetlanes.android.view.TutorialActivity this$0 -> a
    107:109:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.tweetlanes.android.view.TutorialActivity$3 -> dA:
    com.tweetlanes.android.view.TutorialActivity this$0 -> a
    125:127:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.tweetlanes.android.view.TutorialActivity$TutorialLaneAdapter -> dB:
    207:250:android.support.v4.app.Fragment getItem(int) -> a
    257:257:int getCount() -> b
    262:262:int getItemPosition$5d527804() -> c
com.tweetlanes.android.view.TweetFeedFragment -> com.tweetlanes.android.view.TweetFeedFragment:
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView mTweetFeedListView -> K
    com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter mTweetFeedListAdapter -> L
    android.widget.TextView mListHeadingTextView -> M
    android.widget.ImageView mListHeadingHideImage -> N
    boolean mHidingListHeading -> J
    org.tweetalib.android.TwitterContentHandle mContentHandle -> O
    org.tweetalib.android.model.TwitterStatuses _mStatusFeed -> P
    org.tweetalib.android.model.TwitterStatuses _mCachedStatusFeed -> Q
    org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback mTweetDataRefreshCallback -> R
    org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback mTweetDataLoadMoreCallback -> S
    android.widget.ViewSwitcher mViewSwitcher -> T
    java.util.ArrayList mSelectedItems -> U
    java.util.ArrayList mConverstaionViewIds -> V
    com.tweetlanes.android.view.TweetFeedFragment$MultipleTweetSelectionCallback mMultipleTweetSelectionCallback -> W
    java.lang.Long mNewestTweetId -> X
    java.lang.Long mOldestTweetId -> Y
    java.lang.Long mRefreshingOldestTweetId -> Z
    boolean mMoreStatusesAvailable -> aa
    java.lang.Long mResumeStatusId -> ab
    com.tweetlanes.android.util.LazyImageLoader mProfileImageLoader -> ac
    com.tweetlanes.android.util.LazyImageLoader mPreviewImageLoader -> ad
    android.content.BroadcastReceiver mVolumeUpKeyDownReceiver -> ae
    android.content.BroadcastReceiver mVolumeDownKeyDownReceiver -> af
    com.tweetlanes.android.view.TweetFeedFragment$ScrollTracker mScrollTracker -> ag
    android.widget.AbsListView$OnScrollListener mTweetFeedOnScrollListener -> ah
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener mTweetFeedOnLastItemVisibleListener -> ai
    java.lang.Long mTwitterStatusIdWhenRefreshed -> aj
    int mCurrentFirstVisibleItem -> ak
    android.view.View$OnClickListener mListHeadingHideImageOnClickListener -> al
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnRefreshListener mTweetFeedOnRefreshListener -> am
    android.os.Handler mRefreshTimestampsHandler -> an
    java.lang.Runnable mRefreshTimestampsTask -> ao
    android.os.Handler mHandler -> ap
    74:93:com.tweetlanes.android.view.TweetFeedFragment newInstance(int,org.tweetalib.android.TwitterContentHandleBase,java.lang.String,java.lang.String) -> a
    130:179:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    221:224:void fetchNewestTweets() -> H
    230:264:void fetchNewestTweets(long,java.lang.Long) -> a
    272:279:void onJumpToTop() -> E
    290:292:void clearLocalCache() -> F
    301:356:java.lang.String getDataToCache() -> G
    364:396:boolean configureCachedStatuses() -> J
    405:423:void triggerInitialDownload() -> D
    627:637:void beginListHeadingCount() -> I
    655:657:void setListHeadingVisiblilty(int) -> c
    665:684:void updateListHeading(int) -> d
    768:790:boolean onOptionsItemSelected(android.view.MenuItem) -> a
    802:849:boolean configureOptionsMenu(android.view.MenuInflater,android.view.Menu) -> a
    859:865:void onDestroy() -> p
    872:889:void updateViewVisibility(boolean) -> c
    911:937:void setStatusFeed(org.tweetalib.android.model.TwitterStatuses,boolean) -> a
    944:944:int getFilteredStatusCount() -> K
    989:1024:void onTweetFeedItemLongPress(android.view.View,int) -> a
    1031:1041:org.tweetalib.android.model.TwitterStatuses getSelectedStatuses() -> L
    1072:1088:com.tweetlanes.android.view.TweetFeedFragment$ItemSelectedState getSelectedFavoriteState() -> M
    1347:1353:boolean showConversationView(org.tweetalib.android.model.TwitterStatus) -> a
    96:96:com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView access$0(com.tweetlanes.android.view.TweetFeedFragment) -> a
    536:536:com.tweetlanes.android.view.TweetFeedFragment$ScrollTracker access$1(com.tweetlanes.android.view.TweetFeedFragment) -> b
    113:113:java.lang.Long access$2(com.tweetlanes.android.view.TweetFeedFragment) -> c
    114:114:java.lang.Long access$3(com.tweetlanes.android.view.TweetFeedFragment) -> d
    106:106:org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback access$4(com.tweetlanes.android.view.TweetFeedFragment) -> e
    908:908:void access$5(com.tweetlanes.android.view.TweetFeedFragment,org.tweetalib.android.model.TwitterStatuses,boolean) -> a
    115:115:void access$6(com.tweetlanes.android.view.TweetFeedFragment,boolean) -> a
    114:114:void access$7(com.tweetlanes.android.view.TweetFeedFragment,java.lang.Long) -> a
    106:106:void access$8(com.tweetlanes.android.view.TweetFeedFragment,org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback) -> a
    97:97:com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter access$9(com.tweetlanes.android.view.TweetFeedFragment) -> f
    101:101:org.tweetalib.android.TwitterContentHandle access$10(com.tweetlanes.android.view.TweetFeedFragment) -> g
    943:943:int access$11(com.tweetlanes.android.view.TweetFeedFragment) -> h
    949:949:android.os.Handler access$12(com.tweetlanes.android.view.TweetFeedFragment) -> i
    1047:1047:org.tweetalib.android.model.TwitterStatus access$13(com.tweetlanes.android.view.TweetFeedFragment) -> j
    939:939:org.tweetalib.android.model.TwitterStatuses access$14(com.tweetlanes.android.view.TweetFeedFragment) -> k
    1070:1070:com.tweetlanes.android.view.TweetFeedFragment$ItemSelectedState access$15(com.tweetlanes.android.view.TweetFeedFragment) -> l
    1029:1029:org.tweetalib.android.model.TwitterStatuses access$16(com.tweetlanes.android.view.TweetFeedFragment) -> m
    870:870:void access$17(com.tweetlanes.android.view.TweetFeedFragment,boolean) -> b
    108:108:java.util.ArrayList access$18(com.tweetlanes.android.view.TweetFeedFragment) -> n
    966:966:boolean access$19(com.tweetlanes.android.view.TweetFeedFragment,android.view.View,int) -> a
    987:987:void access$20(com.tweetlanes.android.view.TweetFeedFragment,android.view.View,int) -> b
    1548:1548:android.os.Handler access$21(com.tweetlanes.android.view.TweetFeedFragment) -> o
    109:109:java.util.ArrayList access$22(com.tweetlanes.android.view.TweetFeedFragment) -> p
    118:118:com.tweetlanes.android.util.LazyImageLoader access$23(com.tweetlanes.android.view.TweetFeedFragment) -> q
    119:119:com.tweetlanes.android.util.LazyImageLoader access$24(com.tweetlanes.android.view.TweetFeedFragment) -> r
    115:115:boolean access$25(com.tweetlanes.android.view.TweetFeedFragment) -> s
    714:714:void access$26(com.tweetlanes.android.view.TweetFeedFragment,org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatuses) -> a
    105:105:void access$27(com.tweetlanes.android.view.TweetFeedFragment,org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback) -> b
com.tweetlanes.android.view.TweetFeedFragment$1 -> dC:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    433:444:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tweetlanes.android.view.TweetFeedFragment$10 -> dD:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    411:417:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatuses) -> finished
com.tweetlanes.android.view.TweetFeedFragment$2 -> dE:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    455:466:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tweetlanes.android.view.TweetFeedFragment$3 -> dF:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    546:556:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    561:568:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.tweetlanes.android.view.TweetFeedFragment$4 -> dG:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    579:617:void onLastItemVisible() -> a
com.tweetlanes.android.view.TweetFeedFragment$4$1 -> dH:
    com.tweetlanes.android.view.TweetFeedFragment$4 this$1 -> a
    588:605:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatuses) -> finished
com.tweetlanes.android.view.TweetFeedFragment$5 -> dI:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    646:648:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.TweetFeedFragment$6 -> dJ:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    756:757:void onRefresh() -> a
com.tweetlanes.android.view.TweetFeedFragment$7 -> dK:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    954:960:void run() -> run
com.tweetlanes.android.view.TweetFeedFragment$8 -> dL:
    org.tweetalib.android.TwitterContentHandleBase val$handleBase -> a
    java.lang.String val$screenName -> b
    java.lang.String val$laneIdentifier -> c
    86:89:void addValues(android.os.Bundle) -> a
com.tweetlanes.android.view.TweetFeedFragment$9 -> dM:
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> a
    long val$sinceStatusId -> b
    237:252:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatuses) -> finished
com.tweetlanes.android.view.TweetFeedFragment$ItemSelectedState -> dN:
    com.tweetlanes.android.view.TweetFeedFragment$ItemSelectedState NONE -> a
    com.tweetlanes.android.view.TweetFeedFragment$ItemSelectedState SOME -> b
    com.tweetlanes.android.view.TweetFeedFragment$ItemSelectedState ALL -> c
com.tweetlanes.android.view.TweetFeedFragment$MultipleTweetSelectionCallback -> dO:
    android.view.MenuItem mFavoriteMenuItem -> a
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> b
    1100:1101:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    1105:1105:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    1110:1241:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    1252:1258:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    1262:1263:void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean) -> onItemCheckedStateChanged
    1267:1306:void configure(android.view.ActionMode) -> a
    1312:1319:void storeMenuItems(android.view.Menu) -> a
    1325:1339:void setIsFavorited(boolean) -> a
    1094:1094:com.tweetlanes.android.view.TweetFeedFragment access$1(com.tweetlanes.android.view.TweetFeedFragment$MultipleTweetSelectionCallback) -> a
com.tweetlanes.android.view.TweetFeedFragment$MultipleTweetSelectionCallback$1 -> dP:
    com.tweetlanes.android.view.TweetFeedFragment$MultipleTweetSelectionCallback this$1 -> a
    1134:1152:void finished(boolean,org.tweetalib.android.model.TwitterStatuses,java.lang.Integer) -> finished
com.tweetlanes.android.view.TweetFeedFragment$MultipleTweetSelectionCallback$2 -> dQ:
    com.tweetlanes.android.view.TweetFeedFragment$MultipleTweetSelectionCallback this$1 -> a
    org.tweetalib.android.model.TwitterStatuses val$selected -> b
    int val$itemId -> c
    1189:1229:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUsers) -> finished
com.tweetlanes.android.view.TweetFeedFragment$ScrollDirection -> dR:
    com.tweetlanes.android.view.TweetFeedFragment$ScrollDirection UNKNOWN -> a
    com.tweetlanes.android.view.TweetFeedFragment$ScrollDirection TO_NEWER -> b
    com.tweetlanes.android.view.TweetFeedFragment$ScrollDirection TO_OLDER -> c
com.tweetlanes.android.view.TweetFeedFragment$ScrollTracker -> dS:
    com.tweetlanes.android.view.TweetFeedFragment$ScrollDirection mLastScrollDirection -> a
    int mFirstVisibleYOffset -> b
    int mOldFirstVisibleYOffset -> c
    int mOldFirstVisibleItem -> d
    int mOldTotalItemCount -> e
com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter -> dT:
    android.view.LayoutInflater mInflater -> a
    com.tweetlanes.android.view.TweetFeedFragment this$0 -> b
    1373:1380:int getCount() -> getCount
    1392:1392:java.lang.Object getItem(int) -> getItem
    1401:1401:long getItemId(int) -> getItemId
    1409:1420:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    1529:1542:android.view.View getLoadMoreView$75a6a5c1() -> a
    1545:1545:android.view.LayoutInflater access$0(com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter) -> a
    1359:1359:com.tweetlanes.android.view.TweetFeedFragment access$1(com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter) -> b
com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter$1 -> dU:
    com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter this$1 -> a
    1441:1441:boolean onSingleTapConfirmed(android.view.View,int) -> a
    1446:1447:void onLongPress(android.view.View,int) -> b
    1451:1451:android.app.Activity getActivity() -> a
    1456:1475:void onUrlClicked(org.tweetalib.android.model.TwitterStatus) -> a
    1479:1498:void onConversationViewToggle(long,boolean) -> a
    1502:1502:android.view.LayoutInflater getLayoutInflater() -> b
    1507:1507:com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> c
    1512:1512:com.tweetlanes.android.util.LazyImageLoader getPreviewImageLoader() -> d
com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter$1$1 -> dV:
    com.tweetlanes.android.view.TweetFeedFragment$TweetFeedListAdapter$1 this$2 -> a
    1467:1469:void run() -> run
com.tweetlanes.android.view.TweetFeedItemView -> com.tweetlanes.android.view.TweetFeedItemView:
    android.content.Context mContext -> b
    int mPosition -> c
    org.tweetalib.android.model.TwitterStatus mTwitterStatus -> d
    com.tweetlanes.android.view.TweetFeedItemView$Callbacks mCallbacks -> e
    android.widget.TextView mAuthorScreenNameTextView -> f
    android.widget.TextView mAuthorNameTextView -> g
    android.widget.TextView mStatusTextView -> h
    android.widget.TextView mTweetDetailsView -> i
    android.widget.ImageView mConversationToggle -> j
    com.tweetlanes.android.view.ConversationView mConversationView -> k
    android.view.View mMessageBlock -> l
    com.tweetlanes.android.view.QuickContactDivot mAvatar -> m
    android.widget.RelativeLayout mPreviewImageContainer -> n
    android.widget.ImageView mPreviewImageView -> o
    android.widget.ImageView mPreviewPlayImageView -> p
    android.widget.ImageView mStatusIndicatorImageView -> q
    boolean mIsConversationItem -> r
    android.graphics.Path mPath -> s
    android.graphics.Paint mPaint -> t
    boolean mConversationExpanded -> u
    android.view.View$OnTouchListener mStatusOnTouchListener -> v
    android.view.View$OnTouchListener mOnTouchListener -> w
    android.view.GestureDetector mGestureDetector -> a
    int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$StatusSize -> x
    int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$ProfileImageSize -> y
    128:376:void configure(org.tweetalib.android.model.TwitterStatus,int,com.tweetlanes.android.view.TweetFeedItemView$Callbacks,boolean,boolean,boolean,boolean,boolean) -> a
    382:388:void insertConversationView() -> d
    396:481:void setPreviewImage(org.tweetalib.android.model.TwitterMediaEntity,com.tweetlanes.android.view.TweetFeedItemView$Callbacks) -> setPreviewImage
    581:581:org.tweetalib.android.model.TwitterStatus getTwitterStatus() -> a
    588:600:void onProfileImageClick() -> b
    607:644:void configureConversationView() -> c
    669:708:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    57:57:com.tweetlanes.android.view.TweetFeedItemView$Callbacks access$0(com.tweetlanes.android.view.TweetFeedItemView) -> a
    56:56:org.tweetalib.android.model.TwitterStatus access$1(com.tweetlanes.android.view.TweetFeedItemView) -> b
    54:54:int access$2(com.tweetlanes.android.view.TweetFeedItemView) -> c
    74:74:boolean access$3(com.tweetlanes.android.view.TweetFeedItemView) -> d
    74:74:void access$4(com.tweetlanes.android.view.TweetFeedItemView,boolean) -> a
    51:51:int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$StatusSize() -> e
    51:51:int[] $SWITCH_TABLE$com$tweetlanes$android$AppSettings$ProfileImageSize() -> f
com.tweetlanes.android.view.TweetFeedItemView$1 -> dW:
    com.tweetlanes.android.view.TweetFeedItemView this$0 -> a
    492:535:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tweetlanes.android.view.TweetFeedItemView$2 -> dX:
    com.tweetlanes.android.view.TweetFeedItemView this$0 -> a
    546:546:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tweetlanes.android.view.TweetFeedItemView$3 -> dY:
    com.tweetlanes.android.view.TweetFeedItemView this$0 -> a
    558:562:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    567:572:void onLongPress(android.view.MotionEvent) -> onLongPress
    576:576:boolean onDown(android.view.MotionEvent) -> onDown
com.tweetlanes.android.view.TweetFeedItemView$4 -> dZ:
    com.tweetlanes.android.view.TweetFeedItemView this$0 -> a
    206:208:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.TweetFeedItemView$5 -> ea:
    com.tweetlanes.android.view.TweetFeedItemView this$0 -> a
    350:351:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.TweetFeedItemView$6 -> eb:
    422:422:void onComplete(boolean) -> a
com.tweetlanes.android.view.TweetFeedItemView$7 -> ec:
    com.tweetlanes.android.view.TweetFeedItemView this$0 -> a
    boolean val$isVideo -> b
    444:462:void onClick(android.view.View) -> onClick
com.tweetlanes.android.view.TweetFeedItemView$Callbacks -> ed:
    boolean onSingleTapConfirmed(android.view.View,int) -> a
    void onLongPress(android.view.View,int) -> b
    void onUrlClicked(org.tweetalib.android.model.TwitterStatus) -> a
    android.app.Activity getActivity() -> a
    android.view.LayoutInflater getLayoutInflater() -> b
    void onConversationViewToggle(long,boolean) -> a
    com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> c
    com.tweetlanes.android.util.LazyImageLoader getPreviewImageLoader() -> d
com.tweetlanes.android.view.TweetSpotlightActivity -> com.tweetlanes.android.view.TweetSpotlightActivity:
    com.tweetlanes.android.view.TweetSpotlightActivity$TweetSpotlightAdapter mTweetSpotlightAdapter -> k
    android.widget.ViewSwitcher mViewSwitcher -> n
    org.tweetalib.android.model.TwitterStatus mStatus -> l
    org.tweetalib.android.TwitterFetchStatus$FinishedCallback mGetStatusCallback -> m
    android.view.MenuItem mFavoriteMenuItem -> o
    54:92:void onCreate(android.os.Bundle) -> onCreate
    100:103:void onDestroy() -> onDestroy
    112:116:android.support.v4.view.PagerAdapter getAdapterForViewPager() -> h
    127:127:android.support.v4.app.FragmentStatePagerAdapter getFragmentStatePagerAdapter() -> i
    135:140:com.tweetlanes.android.model.ComposeTweetDefault getComposeTweetDefault() -> n
    158:166:void updateViewVisibility() -> q
    175:218:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    228:236:boolean configureOptionsMenu(android.view.Menu) -> a
    146:146:void access$0(com.tweetlanes.android.view.TweetSpotlightActivity,org.tweetalib.android.model.TwitterStatus) -> a
com.tweetlanes.android.view.TweetSpotlightActivity$1 -> ee:
    com.tweetlanes.android.view.TweetSpotlightActivity this$0 -> a
    66:74:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatus) -> finished
com.tweetlanes.android.view.TweetSpotlightActivity$2 -> ef:
    com.tweetlanes.android.view.TweetSpotlightActivity this$0 -> a
    204:209:void finished(boolean,org.tweetalib.android.model.TwitterStatuses,java.lang.Integer) -> finished
com.tweetlanes.android.view.TweetSpotlightActivity$TweetSpotlightAdapter -> eg:
    com.tweetlanes.android.view.TweetSpotlightActivity this$0 -> b
    int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType -> c
    277:310:android.support.v4.app.Fragment getItem(int) -> a
    315:315:int getCount() -> b
    320:320:java.lang.String getTitle(int) -> b
    326:326:int getItemPosition$5d527804() -> c
    267:267:int[] $SWITCH_TABLE$com$tweetlanes$android$Constant$LaneType() -> d
com.tweetlanes.android.view.TweetSpotlightFragment -> com.tweetlanes.android.view.TweetSpotlightFragment:
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView mTweetFeedListView -> J
    com.tweetlanes.android.view.TweetSpotlightFragment$TweetFeedListAdapter mTweetFeedListAdapter -> K
    org.tweetalib.android.TwitterFetchStatus$FinishedCallback mGetStatusCallback -> L
    android.widget.ViewSwitcher mViewSwitcher -> M
    org.tweetalib.android.model.TwitterStatus mStatus -> N
    37:49:com.tweetlanes.android.view.TweetSpotlightFragment newInstance(int,org.tweetalib.android.model.TwitterStatus) -> a
    62:131:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    135:138:void onDestroyView() -> c
    145:153:void updateViewVisibility() -> H
    301:301:void triggerInitialDownload() -> D
    309:309:void onJumpToTop() -> E
    317:318:void clearLocalCache() -> F
    326:326:java.lang.String getDataToCache() -> G
    57:57:org.tweetalib.android.model.TwitterStatus access$0(com.tweetlanes.android.view.TweetSpotlightFragment) -> a
    53:53:com.tweetlanes.android.view.TweetSpotlightFragment$TweetFeedListAdapter access$1(com.tweetlanes.android.view.TweetSpotlightFragment) -> b
    164:164:void access$2(com.tweetlanes.android.view.TweetSpotlightFragment,org.tweetalib.android.model.TwitterStatus) -> a
    143:143:void access$3(com.tweetlanes.android.view.TweetSpotlightFragment) -> c
    54:54:void access$4(com.tweetlanes.android.view.TweetSpotlightFragment,org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> a
    54:54:org.tweetalib.android.TwitterFetchStatus$FinishedCallback access$5(com.tweetlanes.android.view.TweetSpotlightFragment) -> d
com.tweetlanes.android.view.TweetSpotlightFragment$1 -> eh:
    org.tweetalib.android.model.TwitterStatus val$status -> a
    43:44:void addValues(android.os.Bundle) -> a
com.tweetlanes.android.view.TweetSpotlightFragment$2 -> ei:
    com.tweetlanes.android.view.TweetSpotlightFragment this$0 -> a
    76:81:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatus) -> finished
com.tweetlanes.android.view.TweetSpotlightFragment$3 -> ej:
    com.tweetlanes.android.view.TweetSpotlightFragment this$0 -> a
    107:122:void onRefresh() -> a
com.tweetlanes.android.view.TweetSpotlightFragment$3$1 -> ek:
    com.tweetlanes.android.view.TweetSpotlightFragment$3 this$1 -> a
    114:118:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatus) -> finished
com.tweetlanes.android.view.TweetSpotlightFragment$TweetFeedListAdapter -> el:
    android.view.LayoutInflater mInflater -> a
    com.tweetlanes.android.view.TweetSpotlightFragment this$0 -> b
    188:188:int getCount() -> getCount
    200:200:java.lang.Object getItem(int) -> getItem
    209:209:long getItemId(int) -> getItemId
    217:225:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    291:291:android.view.LayoutInflater access$0(com.tweetlanes.android.view.TweetSpotlightFragment$TweetFeedListAdapter) -> a
    175:175:com.tweetlanes.android.view.TweetSpotlightFragment access$1(com.tweetlanes.android.view.TweetSpotlightFragment$TweetFeedListAdapter) -> b
com.tweetlanes.android.view.TweetSpotlightFragment$TweetFeedListAdapter$1 -> em:
    com.tweetlanes.android.view.TweetSpotlightFragment$TweetFeedListAdapter this$1 -> a
    245:245:boolean onSingleTapConfirmed(android.view.View,int) -> a
    250:250:void onLongPress(android.view.View,int) -> b
    254:254:void onUrlClicked(org.tweetalib.android.model.TwitterStatus) -> a
    258:258:android.app.Activity getActivity() -> a
    263:263:android.view.LayoutInflater getLayoutInflater() -> b
    268:268:void onConversationViewToggle(long,boolean) -> a
    272:272:com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> c
    277:277:com.tweetlanes.android.util.LazyImageLoader getPreviewImageLoader() -> d
com.tweetlanes.android.view.TwitterAuthActivity -> com.tweetlanes.android.view.TwitterAuthActivity:
    twitter4j.auth.RequestToken mRequestToken -> a
    org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback mGetAuthUrlCallback -> b
    org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback mGetOAuthAccessTokenCallback -> c
    47:61:void onCreate(android.os.Bundle) -> onCreate
    97:99:void onSuccessfulLogin(org.tweetalib.android.model.TwitterUser,java.lang.String,java.lang.String) -> a
    113:154:void getAuthUrlCallback(java.lang.String,twitter4j.auth.RequestToken) -> a
    163:173:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    179:182:void onOAuthVerifier(java.lang.String) -> a
com.tweetlanes.android.view.TwitterAuthActivity$1 -> en:
    com.tweetlanes.android.view.TwitterAuthActivity this$0 -> a
    72:74:void finished(boolean,java.lang.String,twitter4j.auth.RequestToken) -> finished
com.tweetlanes.android.view.TwitterAuthActivity$2 -> eo:
    com.tweetlanes.android.view.TwitterAuthActivity this$0 -> a
    86:89:void finished(boolean,org.tweetalib.android.model.TwitterUser,java.lang.String,java.lang.String) -> finished
com.tweetlanes.android.view.TwitterAuthActivity$3 -> ep:
    com.tweetlanes.android.view.TwitterAuthActivity this$0 -> a
    131:140:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    147:149:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tweetlanes.android.view.UserFeedFragment -> com.tweetlanes.android.view.UserFeedFragment:
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView mUserFeedListView -> J
    com.tweetlanes.android.view.UserFeedFragment$UserFeedListAdapter mUserFeedListAdapter -> K
    org.tweetalib.android.TwitterContentHandle mContentHandle -> L
    org.tweetalib.android.model.TwitterUsers _mUsersFeed -> M
    org.tweetalib.android.TwitterFetchUsers$FinishedCallback mUserDataRefreshCallback -> N
    android.widget.ViewSwitcher mViewSwitcher -> O
    java.util.ArrayList mSelectedItems -> P
    com.tweetlanes.android.view.UserFeedFragment$MultipleUserSelectionCallback mMultipleUserSelectionCallback -> Q
    java.lang.Long mNewestUserId -> R
    java.lang.Long mRefreshingNewestUserId -> S
    java.lang.Long mOldestUserId -> T
    java.lang.Long mRefreshingUserTweetId -> U
    boolean mMoreUsersAvailable -> V
    android.widget.AbsListView$OnScrollListener mUserFeedOnScrollListener -> W
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener mUserFeedOnLastItemVisibleListener -> X
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnRefreshListener mUserFeedOnRefreshListener -> Y
    android.widget.AdapterView$OnItemClickListener mOnUserFeedItemClickListener -> Z
    65:84:com.tweetlanes.android.view.UserFeedFragment newInstance(int,org.tweetalib.android.TwitterContentHandleBase,java.lang.String,java.lang.String) -> a
    106:106:com.tweetlanes.android.App getApp() -> z
    119:185:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    195:196:void onSaveInstanceState(android.os.Bundle) -> d
    204:205:void onDestroy() -> p
    225:237:void setUserFeed(org.tweetalib.android.model.TwitterUsers) -> a
    263:272:void updateViewVisibility(boolean) -> c
    280:287:void onJumpToTop() -> E
    295:296:void clearLocalCache() -> F
    304:304:java.lang.String getDataToCache() -> G
    628:637:org.tweetalib.android.model.TwitterUsers getSelectedUsers() -> H
    797:833:void triggerInitialDownload() -> D
    87:87:com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView access$0(com.tweetlanes.android.view.UserFeedFragment) -> a
    249:249:void access$1(com.tweetlanes.android.view.UserFeedFragment,org.tweetalib.android.model.TwitterUsers) -> a
    99:99:java.lang.Long access$2(com.tweetlanes.android.view.UserFeedFragment) -> b
    98:98:java.lang.Long access$3(com.tweetlanes.android.view.UserFeedFragment) -> c
    100:100:void access$4(com.tweetlanes.android.view.UserFeedFragment,boolean) -> a
    99:99:void access$5(com.tweetlanes.android.view.UserFeedFragment,java.lang.Long) -> a
    91:91:void access$6(com.tweetlanes.android.view.UserFeedFragment,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> a
    88:88:com.tweetlanes.android.view.UserFeedFragment$UserFeedListAdapter access$7(com.tweetlanes.android.view.UserFeedFragment) -> d
    89:89:org.tweetalib.android.TwitterContentHandle access$8(com.tweetlanes.android.view.UserFeedFragment) -> e
    91:91:org.tweetalib.android.TwitterFetchUsers$FinishedCallback access$9(com.tweetlanes.android.view.UserFeedFragment) -> f
    97:97:void access$10(com.tweetlanes.android.view.UserFeedFragment,java.lang.Long) -> b
    96:96:java.lang.Long access$11(com.tweetlanes.android.view.UserFeedFragment) -> g
    97:97:java.lang.Long access$12(com.tweetlanes.android.view.UserFeedFragment) -> h
    242:242:org.tweetalib.android.model.TwitterUsers access$13(com.tweetlanes.android.view.UserFeedFragment) -> i
    626:626:org.tweetalib.android.model.TwitterUsers access$14(com.tweetlanes.android.view.UserFeedFragment) -> j
    261:261:void access$15(com.tweetlanes.android.view.UserFeedFragment,boolean) -> b
    93:93:java.util.ArrayList access$16(com.tweetlanes.android.view.UserFeedFragment) -> k
    592:592:void access$17(com.tweetlanes.android.view.UserFeedFragment,int,boolean) -> a
    100:100:boolean access$18(com.tweetlanes.android.view.UserFeedFragment) -> l
com.tweetlanes.android.view.UserFeedFragment$1 -> eq:
    com.tweetlanes.android.view.UserFeedFragment this$0 -> a
    315:317:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    322:329:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.tweetlanes.android.view.UserFeedFragment$2 -> er:
    com.tweetlanes.android.view.UserFeedFragment this$0 -> a
    341:371:void onLastItemVisible() -> a
com.tweetlanes.android.view.UserFeedFragment$2$1 -> es:
    com.tweetlanes.android.view.UserFeedFragment$2 this$1 -> a
    348:355:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUsers) -> finished
com.tweetlanes.android.view.UserFeedFragment$3 -> et:
    com.tweetlanes.android.view.UserFeedFragment this$0 -> a
    382:411:void onRefresh() -> a
com.tweetlanes.android.view.UserFeedFragment$3$1 -> eu:
    com.tweetlanes.android.view.UserFeedFragment$3 this$1 -> a
    389:392:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUsers) -> finished
com.tweetlanes.android.view.UserFeedFragment$4 -> ev:
    com.tweetlanes.android.view.UserFeedFragment this$0 -> a
    423:434:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.tweetlanes.android.view.UserFeedFragment$5 -> ew:
    org.tweetalib.android.TwitterContentHandleBase val$handleBase -> a
    java.lang.String val$screenName -> b
    java.lang.String val$laneIdentifier -> c
    77:80:void addValues(android.os.Bundle) -> a
com.tweetlanes.android.view.UserFeedFragment$6 -> ex:
    com.tweetlanes.android.view.UserFeedFragment this$0 -> a
    802:811:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUsers) -> finished
com.tweetlanes.android.view.UserFeedFragment$MultipleUserSelectionCallback -> ey:
    com.tweetlanes.android.view.UserFeedFragment this$0 -> a
    446:453:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    458:458:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    463:543:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    552:556:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    560:562:void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean) -> onItemCheckedStateChanged
    566:585:void configure(android.view.ActionMode) -> a
    440:440:com.tweetlanes.android.view.UserFeedFragment access$1(com.tweetlanes.android.view.UserFeedFragment$MultipleUserSelectionCallback) -> a
com.tweetlanes.android.view.UserFeedFragment$MultipleUserSelectionCallback$1 -> ez:
    com.tweetlanes.android.view.UserFeedFragment$MultipleUserSelectionCallback this$1 -> a
    int val$itemId -> b
    492:531:void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUsers) -> finished
com.tweetlanes.android.view.UserFeedFragment$UserFeedItemViewCallbacks -> eA:
    com.tweetlanes.android.view.UserFeedFragment$UserFeedListAdapter this$1 -> a
    751:751:com.tweetlanes.android.util.LazyImageLoader getProfileImageLoader() -> a
com.tweetlanes.android.view.UserFeedFragment$UserFeedListAdapter -> eB:
    android.view.LayoutInflater mInflater -> a
    com.tweetlanes.android.view.UserFeedFragment this$0 -> b
    678:685:int getCount() -> getCount
    697:697:java.lang.Object getItem(int) -> getItem
    706:706:long getItemId(int) -> getItemId
    714:726:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    766:779:android.view.View getLoadMoreView$75a6a5c1() -> a
    664:664:com.tweetlanes.android.view.UserFeedFragment access$0(com.tweetlanes.android.view.UserFeedFragment$UserFeedListAdapter) -> a
com.tweetlanes.android.view.UserFeedItemView -> com.tweetlanes.android.view.UserFeedItemView:
    android.widget.TextView mScreenNameTextView -> a
    android.widget.TextView mNameTextView -> b
    android.view.View mMessageBlock -> c
    com.tweetlanes.android.view.QuickContactDivot mAvatar -> d
    android.graphics.Path mPath -> e
    android.graphics.Paint mPaint -> f
    67:93:void configure$3a0b2ec8(org.tweetalib.android.model.TwitterUser,com.tweetlanes.android.view.UserFeedFragment$UserFeedItemViewCallbacks) -> a
    113:145:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
com.tweetlanes.android.widget.AutoResizeTextView -> com.tweetlanes.android.widget.AutoResizeTextView:
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mTextResizeListener$79d09b9c -> a
    boolean mNeedsResize -> b
    float mTextSize -> c
    float mMaxTextSize -> d
    float mMinTextSize -> e
    float mSpacingMult -> f
    float mSpacingAdd -> g
    boolean mAddEllipsis -> h
    85:88:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    95:98:void onSizeChanged(int,int,int,int) -> onSizeChanged
    106:107:void setOnResizeListener$26713277(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnResizeListener$26713277
    114:116:void setTextSize(float) -> setTextSize
    123:125:void setTextSize(int,float) -> setTextSize
    132:135:void setLineSpacing(float,float) -> setLineSpacing
    143:146:void setMaxTextSize(float) -> setMaxTextSize
    163:166:void setMinTextSize(float) -> setMinTextSize
    183:184:void setAddEllipsis(boolean) -> setAddEllipsis
    212:220:void onLayout(boolean,int,int,int,int) -> onLayout
    321:325:int getTextHeight(java.lang.CharSequence,android.text.TextPaint,int,float) -> a
com.tweetlanes.android.widget.EditClearText -> com.tweetlanes.android.widget.EditClearText:
    android.graphics.drawable.Drawable mClearButtonImage -> a
    com.tweetlanes.android.widget.EditClearText$EditClearTextListener mListener -> b
    java.lang.Integer mInitialXSize -> c
    java.lang.Integer mInitialYSize -> d
    47:101:void init() -> b
    104:114:void handleClearButton() -> a
    127:135:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    145:181:void onSizeChanged(int,int,int,int) -> onSizeChanged
    217:218:void setEditClearTextListener(com.tweetlanes.android.widget.EditClearText$EditClearTextListener) -> setEditClearTextListener
    24:24:com.tweetlanes.android.widget.EditClearText$EditClearTextListener access$0(com.tweetlanes.android.widget.EditClearText) -> a
    20:20:android.graphics.drawable.Drawable access$1(com.tweetlanes.android.widget.EditClearText) -> b
com.tweetlanes.android.widget.EditClearText$1 -> eC:
    com.tweetlanes.android.widget.EditClearText this$0 -> a
    56:78:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tweetlanes.android.widget.EditClearText$2 -> eD:
    com.tweetlanes.android.widget.EditClearText this$0 -> a
    89:90:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    94:94:void afterTextChanged(android.text.Editable) -> afterTextChanged
    99:99:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.tweetlanes.android.widget.EditClearText$EditClearTextListener -> eE:
    com.tweetlanes.android.view.ComposeBaseFragment this$0 -> a
    330:336:boolean canClearText() -> a
    341:345:boolean onBackButtonPressed() -> b
    350:351:void onClearPressed() -> c
    355:358:void onTouch$6c0910ee() -> d
    364:369:void onSizeChanged$6046c8d5() -> e
com.tweetlanes.android.widget.gestureimageview.Animation -> eF:
    boolean update(com.tweetlanes.android.widget.gestureimageview.GestureImageView,long) -> a
com.tweetlanes.android.widget.gestureimageview.Animator -> eG:
    com.tweetlanes.android.widget.gestureimageview.GestureImageView mView -> a
    com.tweetlanes.android.widget.gestureimageview.Animation mAnimation -> b
    boolean mRunning -> c
    boolean mActive -> d
    long mLastTime -> e
    33:63:void run() -> run
    66:69:void finish() -> a
    72:78:void play(com.tweetlanes.android.widget.gestureimageview.Animation) -> a
    81:84:void activate() -> c
    87:88:void cancel() -> b
com.tweetlanes.android.widget.gestureimageview.FlingAnimation -> eH:
    float mVelocityX -> a
    float mVelocityY -> b
    float mFactor -> d
    float mThreshold -> e
    com.tweetlanes.android.widget.gestureimageview.FlingAnimationListener listener -> c
    36:55:boolean update(com.tweetlanes.android.widget.gestureimageview.GestureImageView,long) -> a
com.tweetlanes.android.widget.gestureimageview.FlingAnimationListener -> eI:
    com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener this$0 -> a
    116:117:void onMove(float,float) -> a
com.tweetlanes.android.widget.gestureimageview.FlingListener -> eJ:
    float mVelocityX -> a
    float mVelocityY -> b
    28:30:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    34:34:float getVelocityX() -> a
    38:38:float getVelocityY() -> b
com.tweetlanes.android.widget.gestureimageview.GestureImageView -> com.tweetlanes.android.widget.gestureimageview.GestureImageView:
    java.util.concurrent.Semaphore mDrawLock -> a
    com.tweetlanes.android.widget.gestureimageview.Animator mAnimator -> b
    android.graphics.drawable.Drawable mDrawable -> c
    float mX -> d
    float mY -> e
    boolean mLayout -> f
    float mScaleAdjust -> g
    float mStartingScale -> h
    float mScale -> i
    float mMaxScale -> j
    float mMinScale -> k
    float mFitScaleHorizontal -> l
    float mFitScaleVertical -> m
    float mRotation -> n
    float mCenterX -> o
    float mCenterY -> p
    java.lang.Float mStartX -> q
    java.lang.Float mStartY -> r
    int mHWidth -> s
    int mHHeight -> t
    int mResId -> u
    boolean mRecycle -> v
    boolean mStrict -> w
    int mDisplayHeight -> x
    int mDisplayWidth -> y
    int mAlpha -> z
    android.graphics.ColorFilter mColorFilter -> A
    int mDeviceOrientation -> B
    int mImageOrientation -> C
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mGestureImageViewListener$2a610824 -> D
    com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener mGestureImageViewTouchListener -> E
    android.view.View$OnTouchListener mCustomOnTouchListener -> F
    android.view.View$OnClickListener mOnClickListener -> G
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> H
    133:161:void onMeasure(int,int) -> onMeasure
    166:171:void onLayout(boolean,int,int,int,int) -> onLayout
    286:292:boolean isRecycled() -> o
    296:303:void recycle() -> p
    307:332:void onDraw(android.graphics.Canvas) -> onDraw
    342:342:boolean waitForDraw(long) -> a
    347:355:void onAttachedToWindow() -> onAttachedToWindow
    358:361:void animationStart(com.tweetlanes.android.widget.gestureimageview.Animation) -> a
    364:367:void animationStop() -> a
    371:379:void onDetachedFromWindow() -> onDetachedFromWindow
    382:394:void initImage() -> q
    397:399:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    403:405:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    408:415:void setImageResource(int) -> setImageResource
    418:418:int getScaledWidth() -> b
    422:422:int getScaledHeight() -> c
    426:429:int getImageWidth() -> d
    433:436:int getImageHeight() -> e
    445:447:void setPosition(float,float) -> setPosition
    450:451:void redraw() -> f
    454:459:void setMinScale(float) -> setMinScale
    462:466:void setMaxScale(float) -> setMaxScale
    469:470:void setScale(float) -> setScale
    473:473:float getScale() -> g
    477:477:float getImageX() -> h
    481:481:float getImageY() -> i
    489:490:void setStrict(boolean) -> setStrict
    497:498:void setRecycle(boolean) -> setRecycle
    508:509:void setRotation(float) -> setRotation
    513:514:void setGestureImageViewListener$69deab49(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setGestureImageViewListener$69deab49
    517:517:android.support.v4.app.FragmentManager$OnBackStackChangedListener getGestureImageViewListener$79af9c43() -> j
    522:522:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    527:531:void setAlpha(int) -> setAlpha
    535:539:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    543:593:void setImageURI(android.net.Uri) -> setImageURI
    599:602:android.graphics.Matrix getImageMatrix() -> getImageMatrix
    607:614:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    618:622:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    626:629:int[] onCreateDrawableState(int) -> onCreateDrawableState
    634:638:void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    642:646:void setImageLevel(int) -> setImageLevel
    650:653:void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    657:660:void setImageState(int[],boolean) -> setImageState
    664:668:void setSelected(boolean) -> setSelected
    672:673:void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    676:676:float getCenterX() -> k
    680:680:float getCenterY() -> l
    684:684:boolean isLandscape() -> m
    692:693:void setStartingScale(float) -> setStartingScale
    696:698:void setStartingPosition(float,float) -> setStartingPosition
    702:707:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    725:725:int getDeviceOrientation() -> n
    84:84:android.view.View$OnTouchListener access$0(com.tweetlanes.android.widget.gestureimageview.GestureImageView) -> a
    82:82:com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener access$1(com.tweetlanes.android.widget.gestureimageview.GestureImageView) -> b
    36:36:int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> r
com.tweetlanes.android.widget.gestureimageview.GestureImageView$1 -> eK:
    com.tweetlanes.android.widget.gestureimageview.GestureImageView this$0 -> a
    244:247:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener -> eL:
    com.tweetlanes.android.widget.gestureimageview.GestureImageView mImage -> a
    android.view.View$OnClickListener mOnClickListener -> b
    android.graphics.PointF mCurrent -> c
    android.graphics.PointF mLast -> d
    android.graphics.PointF mNext -> e
    android.graphics.PointF mMidpoint -> f
    com.tweetlanes.android.widget.gestureimageview.VectorF mScaleVector -> g
    com.tweetlanes.android.widget.gestureimageview.VectorF mPinchVector -> h
    boolean mTouched -> i
    boolean mInZoom -> j
    float mInitialDistance -> k
    float mLastScale -> l
    float mCurrentScale -> m
    float mBoundaryLeft -> n
    float mBoundaryTop -> o
    float mBoundaryRight -> p
    float mBoundaryBottom -> q
    float mMaxScale -> r
    float mMinScale -> s
    float mFitScaleHorizontal -> t
    float mFitScaleVertical -> u
    int mCanvasWidth -> v
    int mCanvasHeight -> w
    float mCenterX -> x
    float mCenterY -> y
    float mStartingScale -> z
    boolean mCanDragX -> A
    boolean mCanDragY -> B
    boolean mMultiTouch -> C
    int mDisplayWidth -> D
    int mDisplayHeight -> E
    int mImageWidth -> F
    int mImageHeight -> G
    com.tweetlanes.android.widget.gestureimageview.FlingListener mFlingListener -> H
    com.tweetlanes.android.widget.gestureimageview.FlingAnimation mFlingAnimation -> I
    com.tweetlanes.android.widget.gestureimageview.ZoomAnimation mZoomAnimation -> J
    com.tweetlanes.android.widget.gestureimageview.MoveAnimation mMoveAnimation -> K
    android.view.GestureDetector mTapDetector -> L
    android.view.GestureDetector mFlingDetector -> M
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mImageListener$2a610824 -> N
    264:343:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    348:383:void handleUp() -> a
    387:409:void handleScale(float,float,float) -> a
    412:439:boolean handleDrag(float,float) -> a
    457:458:void setMaxScale(float) -> a
    465:466:void setMinScale(float) -> b
    469:470:void setOnClickListener(android.view.View$OnClickListener) -> a
    473:474:void setCanvasWidth(int) -> a
    477:478:void setCanvasHeight(int) -> b
    481:482:void setFitScaleHorizontal(float) -> c
    485:486:void setFitScaleVertical(float) -> d
    489:500:void boundCoordinates() -> b
    504:521:void calculateBoundaries() -> c
    27:27:android.graphics.PointF access$0(com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener) -> a
    47:47:float access$1(com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener) -> b
    48:48:float access$2(com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener) -> c
    36:36:void access$3(com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener,boolean) -> a
    184:184:void access$4(com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener,android.view.MotionEvent) -> a
    36:36:boolean access$5(com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener) -> d
    25:25:android.view.View$OnClickListener access$6(com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener) -> e
com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener$4 -> eM:
    com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener this$0 -> a
    com.tweetlanes.android.widget.gestureimageview.GestureImageView val$image -> b
    155:156:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    161:168:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.tweetlanes.android.widget.gestureimageview.MoveAnimation -> eN:
    boolean mFirstFrame -> b
    float mStartX -> c
    float mStartY -> d
    long mAnimationTimeMS -> e
    long mTotalTime -> f
    com.tweetlanes.android.widget.gestureimageview.MoveAnimationListener mMoveAnimationListener -> a
    39:65:boolean update(com.tweetlanes.android.widget.gestureimageview.GestureImageView,long) -> a
com.tweetlanes.android.widget.gestureimageview.MoveAnimationListener -> eO:
    com.tweetlanes.android.widget.gestureimageview.GestureImageView val$image -> a
    145:147:void onMove(float,float) -> a
com.tweetlanes.android.widget.gestureimageview.VectorF -> eP:
    float angle -> d
    float length -> a
    android.graphics.PointF start -> b
    android.graphics.PointF end -> c
    26:28:void calculateEndPoint() -> a
    31:33:void setStart(android.graphics.PointF) -> a
    36:38:void setEnd(android.graphics.PointF) -> b
    48:49:float calculateLength() -> b
    53:54:float calculateAngle() -> c
com.tweetlanes.android.widget.gestureimageview.ZoomAnimation -> eQ:
    boolean mFirstFrame -> a
    float mTouchX -> b
    float mTouchY -> c
    float mZoom -> d
    float mStartX -> g
    float mStartY -> h
    float mStartScale -> i
    float mXDiff -> j
    float mYDiff -> k
    float mScaleDiff -> l
    long mAnimationLengthMS -> m
    long mTotalTime -> e
    com.tweetlanes.android.widget.gestureimageview.ZoomAnimationListener zoomAnimationListener -> f
    49:114:boolean update(com.tweetlanes.android.widget.gestureimageview.GestureImageView,long) -> a
com.tweetlanes.android.widget.gestureimageview.ZoomAnimationListener -> eR:
    com.tweetlanes.android.widget.gestureimageview.GestureImageViewTouchListener this$0 -> a
    129:132:void onZoom(float,float,float) -> a
    136:138:void onComplete() -> a
com.tweetlanes.android.widget.pulltorefresh.PullToRefreshAdapterViewBase -> com.tweetlanes.android.widget.pulltorefresh.PullToRefreshAdapterViewBase:
    int mLastSavedFirstVisibleItem -> g
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> h
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> i
    android.widget.FrameLayout mRefreshableViewHolder -> j
    46:62:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    66:69:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    87:109:void setEmptyView(android.view.View) -> setEmptyView
    113:114:void setOnLastItemVisibleListener(com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener) -> setOnLastItemVisibleListener
    117:118:void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    130:130:boolean isReadyForPullDown() -> a
    134:134:boolean isReadyForPullUp() -> b
    1:1:void addRefreshableView(android.content.Context,android.view.View) -> a
com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase -> com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase:
    int mTouchSlop -> g
    float mInitialMotionY -> h
    float mLastMotionX -> i
    float mLastMotionY -> j
    boolean mIsBeingDragged -> k
    int mState -> l
    int mMode -> a
    int mCurrentMode -> b
    boolean mDisableScrollingWhileRefreshing -> m
    android.view.View mRefreshableView -> c
    boolean mIsPullToRefreshEnabled -> n
    com.tweetlanes.android.widget.pulltorefresh.internal.LoadingLayout mHeaderLayout -> d
    com.tweetlanes.android.widget.pulltorefresh.internal.LoadingLayout mFooterLayout -> e
    int mHeaderHeight -> f
    android.os.Handler mHandler -> o
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> p
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> q
    167:167:android.view.View getRefreshableView() -> c
    195:195:boolean isRefreshing() -> f
    207:208:void setDisableScrollingWhileRefreshing(boolean) -> setDisableScrollingWhileRefreshing
    215:218:void onRefreshComplete() -> d
    227:228:void setOnRefreshListener(com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    237:238:void setPullToRefreshEnabled(boolean) -> setPullToRefreshEnabled
    248:254:void setReleaseLabel(java.lang.String) -> setReleaseLabel
    263:269:void setPullLabel(java.lang.String) -> setPullLabel
    278:284:void setRefreshingLabel(java.lang.String) -> setRefreshingLabel
    287:288:void setRefreshing() -> setRefreshing
    298:302:void setRefreshing(boolean) -> setRefreshing
    318:367:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    373:432:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    436:438:void addRefreshableView(android.content.Context,android.view.View) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    boolean isReadyForPullDown() -> a
    boolean isReadyForPullUp() -> b
    501:512:void resetHeader() -> e
    515:528:void setRefreshingInternal(boolean) -> a
    531:532:void setHeaderScroll(int) -> a
    535:544:void smoothScrollTo(int) -> b
    548:635:void init(android.content.Context,android.util.AttributeSet) -> b
    638:655:void measureView(android.view.View) -> a
    719:727:boolean isReadyForPull() -> g
    748:749:void setLongClickable(boolean) -> setLongClickable
com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnLastItemVisibleListener -> eS:
    void onLastItemVisible() -> a
com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$OnRefreshListener -> eT:
    void onRefresh() -> a
com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase$SmoothScrollRunnable -> eU:
    android.view.animation.Interpolator mInterpolator -> a
    int mScrollToY -> b
    int mScrollFromY -> c
    android.os.Handler mHandler -> d
    boolean mContinueRunning -> e
    long mStartTime -> f
    int mCurrentY -> g
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshBase this$0 -> h
    49:73:void run() -> run
    76:78:void stop() -> a
com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView -> com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView:
    com.tweetlanes.android.widget.pulltorefresh.internal.LoadingLayout mHeaderLoadingView -> g
    com.tweetlanes.android.widget.pulltorefresh.internal.LoadingLayout mFooterLoadingView -> h
    58:58:android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    62:70:void setReleaseLabel(java.lang.String) -> setReleaseLabel
    73:81:void setPullLabel(java.lang.String) -> setPullLabel
    84:92:void setRefreshingLabel(java.lang.String) -> setRefreshingLabel
    140:182:void setRefreshingInternal(boolean) -> a
    190:221:void resetHeader() -> e
    1:1:android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView$InternalListView -> eV:
    com.tweetlanes.android.widget.pulltorefresh.PullToRefreshListView this$0 -> a
    28:29:void setEmptyView(android.view.View) -> setEmptyView
    33:34:void setEmptyViewInternal(android.view.View) -> a
    37:37:android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
com.tweetlanes.android.widget.pulltorefresh.internal.EmptyViewMethodAccessor -> eW:
    void setEmptyViewInternal(android.view.View) -> a
com.tweetlanes.android.widget.pulltorefresh.internal.LoadingLayout -> com.tweetlanes.android.widget.pulltorefresh.internal.LoadingLayout:
    android.widget.ImageView mHeaderImage -> a
    android.widget.ProgressBar mHeaderProgress -> b
    android.widget.TextView mHeaderText -> c
    java.lang.String mPullLabel -> d
    java.lang.String mRefreshingLabel -> e
    java.lang.String mReleaseLabel -> f
    android.view.animation.Animation mRotateAnimation -> g
    android.view.animation.Animation mResetRotateAnimation -> h
    74:77:void reset() -> a
    80:83:void releaseToRefresh() -> b
    86:87:void setPullLabel(java.lang.String) -> setPullLabel
    90:94:void refreshing() -> c
    97:98:void setRefreshingLabel(java.lang.String) -> setRefreshingLabel
    101:102:void setReleaseLabel(java.lang.String) -> setReleaseLabel
    105:108:void pullToRefresh() -> d
    111:112:void setTextColor(int) -> setTextColor
com.tweetlanes.android.widget.urlimageviewhelper.SoftReferenceHashTable -> eX:
    java.util.Hashtable mTable -> a
    11:13:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
com.tweetlanes.android.widget.urlimageviewhelper.URLImageCache -> eY:
    com.tweetlanes.android.widget.urlimageviewhelper.URLImageCache mInstance -> b
    11:11:com.tweetlanes.android.widget.urlimageviewhelper.URLImageCache getInstance() -> a
com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper -> eZ:
    android.content.res.Resources mResources -> a
    android.util.DisplayMetrics mMetrics -> b
    boolean USE_IMAGE_CACHE -> c
    boolean mHasCleaned -> d
    java.util.Hashtable mPendingViews -> e
    java.util.Hashtable mPendingDownloads -> f
    39:46:int copyStream(java.io.InputStream,java.io.OutputStream) -> a
    64:73:android.graphics.drawable.BitmapDrawable loadDrawableFromStream(android.content.Context,java.io.InputStream) -> b
    96:98:void setURLDrawable(android.widget.ImageView,java.lang.String,int) -> a
    114:116:void setURLDrawable(android.widget.ImageView,java.lang.String,com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper$Callback) -> a
    191:191:java.lang.String getFilenameForUrl(java.lang.String) -> a
    221:233:void emptyCache(android.content.Context) -> a
    239:435:void setURLDrawable(android.content.Context,android.widget.ImageView,java.lang.String,android.graphics.drawable.Drawable,long,com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper$Callback) -> a
    62:62:android.graphics.drawable.BitmapDrawable access$0(android.content.Context,java.io.InputStream) -> a
    438:438:java.util.Hashtable access$1() -> a
    437:437:java.util.Hashtable access$2() -> b
com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper$1 -> fa:
    android.content.Context val$context -> a
    java.lang.String val$url -> b
    java.lang.String val$filename -> c
    android.graphics.drawable.Drawable val$defaultDrawable -> d
    com.tweetlanes.android.widget.urlimageviewhelper.URLImageCache val$cache -> e
    java.util.ArrayList val$downloads -> f
    com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper$Callback val$callback -> g
    366:403:com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper$1TaskOutput doInBackground$19628976() -> a
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper$1TaskOutput -> fb:
    boolean mResult -> a
    android.graphics.drawable.Drawable mDrawable -> b
com.tweetlanes.android.widget.urlimageviewhelper.URLImageViewHelper$Callback -> fc:
    void onComplete(boolean) -> a
com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator -> com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator:
    android.view.View$OnClickListener mTabClickListener -> a
    android.content.Context mContext -> b
    com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator$ListArrayAdapter mListAdapter -> c
    android.support.v4.view.ViewPager mViewPager -> d
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> e
    android.view.LayoutInflater mInflater -> f
    int mSelectedTabIndex -> g
    95:96:void onAttachedToWindow() -> onAttachedToWindow
    104:105:void onDetachedFromWindow() -> onDetachedFromWindow
    122:125:void onPageScrollStateChanged(int) -> a
    129:132:void onPageScrolled(int,float,int) -> a
    136:140:void onPageSelected(int,int) -> a
    144:156:void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    161:190:void notifyDataSetChanged() -> a
    194:196:void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    200:213:void setCurrentItem(int) -> setCurrentItem
    217:218:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    39:39:android.support.v4.view.ViewPager access$0(com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator) -> a
    42:42:android.view.LayoutInflater access$1(com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator) -> b
    28:28:android.view.View$OnClickListener access$2(com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator) -> c
com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator$1 -> fd:
    com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator this$0 -> a
    31:33:void onClick(android.view.View) -> onClick
com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator$ListArrayAdapter -> fe:
    java.lang.String[] values -> a
    com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator this$0 -> b
    274:282:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator$TabView -> com.tweetlanes.android.widget.viewpagerindicator.ListTabPageIndicator$TabView:
    int mIndex -> a
    234:238:void init(java.lang.String,int) -> a
    251:251:int getIndex() -> a
com.tweetlanes.android.widget.viewpagerindicator.PageIndicator -> ff:
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> a
com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator -> com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator:
    java.lang.Runnable mTabSelector -> a
    android.view.View$OnClickListener mTabClickListener -> c
    android.widget.LinearLayout mTabLayout -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    android.view.LayoutInflater mInflater -> g
    int mMaxTabWidth -> b
    int mSelectedTabIndex -> h
    com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$TabCallbacks mTabCallbacks -> i
    79:106:void onMeasure(int,int) -> onMeasure
    127:132:void onAttachedToWindow() -> onAttachedToWindow
    136:140:void onDetachedFromWindow() -> onDetachedFromWindow
    156:159:void onPageScrollStateChanged(int) -> a
    163:166:void onPageScrolled(int,float,int) -> a
    170:174:void onPageSelected(int,int) -> a
    178:190:void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    193:204:void notifyDataSetChanged() -> a
    208:210:void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    214:227:void setCurrentItem(int) -> setCurrentItem
    231:232:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    277:278:void setTabCallbacks(com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$TabCallbacks) -> setTabCallbacks
    53:53:android.support.v4.view.ViewPager access$0(com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator) -> a
    274:274:com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$TabCallbacks access$1(com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator) -> b
com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$1 -> fg:
    com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator this$0 -> a
    39:49:void onClick(android.view.View) -> onClick
com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$2 -> fh:
    com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator this$0 -> a
    android.view.View val$tabView -> b
    116:120:void run() -> run
com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$TabCallbacks -> fi:
    com.tweetlanes.android.view.BaseLaneActivity this$0 -> a
    138:139:void onCurrentItemClicked() -> a
com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$TabView -> com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator$TabView:
    com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator mParent -> a
    int mIndex -> b
    244:249:void init(com.tweetlanes.android.widget.viewpagerindicator.TabPageIndicator,java.lang.String,int) -> a
    253:262:void onMeasure(int,int) -> onMeasure
    265:265:int getIndex() -> a
com.tweetlanes.android.widget.viewpagerindicator.TitleProvider -> fj:
    java.lang.String getTitle(int) -> b
com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator -> com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator:
    android.graphics.Paint mPaint -> a
    boolean mFades -> b
    int mFadeDelay -> c
    int mFadeLength -> d
    int mFadeBy -> e
    android.support.v4.view.ViewPager mViewPager -> f
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> g
    int mScrollState -> h
    int mCurrentPage -> i
    float mPositionOffset -> j
    int mTouchSlop -> k
    float mLastMotionX -> l
    int mActivePointerId -> m
    boolean mIsDragging -> n
    java.lang.Runnable mFadeRunnable -> o
    122:132:void setFades(boolean) -> setFades
    139:140:void setFadeDelay(int) -> setFadeDelay
    147:149:void setFadeLength(int) -> setFadeLength
    156:158:void setSelectedColor(int) -> setSelectedColor
    162:186:void onDraw(android.graphics.Canvas) -> onDraw
    189:271:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    276:299:void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    303:305:void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    309:315:void setCurrentItem(int) -> setCurrentItem
    319:320:void notifyDataSetChanged() -> a
    324:329:void onPageScrollStateChanged(int) -> a
    334:350:void onPageScrolled(int,float,int) -> a
    354:363:void onPageSelected(int,int) -> a
    367:368:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    372:376:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    380:383:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    39:39:android.graphics.Paint access$0(com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator) -> a
    44:44:int access$1(com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator) -> b
    41:41:boolean access$2(com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator) -> c
    57:57:java.lang.Runnable access$3(com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator) -> d
com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator$1 -> fk:
    com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator this$0 -> a
    61:67:void run() -> run
com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator$2 -> fl:
    com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator this$0 -> a
    294:297:void run() -> run
com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator$SavedState -> fm:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    401:403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tweetlanes.android.widget.viewpagerindicator.UnderlinePageIndicator$SavedState$1 -> fn:
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.twitter.Autolink -> fo:
    java.lang.String urlClass -> b
    java.lang.String listClass -> c
    java.lang.String usernameClass -> d
    java.lang.String hashtagClass -> e
    java.lang.String cashtagClass -> f
    java.lang.String usernameUrlBase -> g
    java.lang.String listUrlBase -> h
    java.lang.String hashtagUrlBase -> i
    java.lang.String cashtagUrlBase -> j
    java.lang.String invisibleTagAttrs -> k
    boolean noFollow -> l
    boolean usernameIncludeSymbol -> m
    java.lang.String symbolTag -> n
    java.lang.String textWithSymbolTag -> o
    java.lang.String urlTarget -> p
    android.support.v4.app.FragmentManager$OnBackStackChangedListener linkAttributeModifier$49b1d987 -> q
    android.support.v4.app.FragmentManager$OnBackStackChangedListener linkTextModifier$4fca3a48 -> r
    com.twitter.Extractor extractor -> a
    int[] $SWITCH_TABLE$com$twitter$Extractor$Entity$Type -> s
    61:73:java.lang.CharSequence escapeHTML(java.lang.CharSequence) -> a
    110:125:void linkToText(com.twitter.Extractor$Entity,java.lang.CharSequence,java.util.Map,java.lang.StringBuilder) -> a
    128:140:void linkToTextWithSymbol(com.twitter.Extractor$Entity,java.lang.CharSequence,java.lang.CharSequence,java.util.Map,java.lang.StringBuilder) -> a
    185:262:void linkToURL$2727d536(com.twitter.Extractor$Entity,java.lang.StringBuilder) -> a
    265:289:java.lang.String autoLinkEntities(java.lang.String,java.util.List) -> a
    509:510:void setNoFollow(boolean) -> a
    518:519:void setUsernameIncludeSymbol(boolean) -> b
    545:546:void setUrlTarget(java.lang.String) -> a
    12:12:int[] $SWITCH_TABLE$com$twitter$Extractor$Entity$Type() -> a
com.twitter.AutolinkEx -> fp:
    java.lang.String DEFAULT_LIST_CLASS -> a
    java.lang.String DEFAULT_USERNAME_CLASS -> b
    java.lang.String DEFAULT_HASHTAG_CLASS -> c
    java.lang.String DEFAULT_CASHTAG_CLASS -> d
    java.lang.String DEFAULT_INVISIBLE_TAG_ATTRS -> e
    java.lang.String listClass -> f
    java.lang.String usernameClass -> g
    java.lang.String hashtagClass -> h
    java.lang.String cashtagClass -> i
    java.lang.String usernameUrlBase -> j
    java.lang.String listUrlBase -> k
    java.lang.String hashtagUrlBase -> l
    java.lang.String cashtagUrlBase -> m
    boolean noFollow -> n
    boolean usernameIncludeSymbol -> o
    java.lang.String symbolTag -> p
    java.lang.String textWithSymbolTag -> q
    android.support.v4.app.FragmentManager$OnBackStackChangedListener linkAttributeModifier$4357af14 -> r
    android.support.v4.app.FragmentManager$OnBackStackChangedListener linkTextModifier$22d9ec0b -> s
    com.twitter.Extractor extractor -> t
    int[] $SWITCH_TABLE$com$twitter$Extractor$Entity$Type -> u
    68:80:java.lang.CharSequence escapeHTML(java.lang.CharSequence) -> a
    117:132:void linkToText(com.twitter.Extractor$Entity,java.lang.CharSequence,java.util.Map,java.lang.StringBuilder) -> a
    135:147:void linkToTextWithSymbol(com.twitter.Extractor$Entity,java.lang.CharSequence,java.lang.CharSequence,java.util.Map,java.lang.StringBuilder) -> a
    200:213:void linkToURL$5cb032b5(com.twitter.Extractor$Entity,java.lang.StringBuilder,twitter4j.URLEntity) -> a
    220:277:java.lang.String autoLinkEntities$52babed5(java.lang.String,java.util.List,twitter4j.MediaEntity[],twitter4j.URLEntity[]) -> a
    295:299:java.lang.String autoLinkAll(java.lang.String,org.tweetalib.android.model.TwitterMediaEntity,twitter4j.MediaEntity[],twitter4j.URLEntity[]) -> a
    505:506:void setNoFollow(boolean) -> a
    514:515:void setUsernameIncludeSymbol(boolean) -> b
    541:541:void setUrlTarget(java.lang.String) -> a
    16:16:int[] $SWITCH_TABLE$com$twitter$Extractor$Entity$Type() -> a
com.twitter.Extractor -> fq:
    boolean extractURLWithoutProtocol -> a
    125:147:void removeOverlappingEntities(java.util.List) -> a
    155:162:java.util.List extractEntitiesWithIndices(java.lang.String) -> a
    200:234:java.util.List extractMentionsOrListsWithIndices(java.lang.String) -> c
    287:321:java.util.List extractURLsWithIndices(java.lang.String) -> b
    362:390:java.util.List extractHashtagsWithIndices(java.lang.String,boolean) -> a
    437:456:java.util.List extractCashtagsWithIndices(java.lang.String) -> d
    460:461:void setExtractURLWithoutProtocol(boolean) -> a
com.twitter.Extractor$1 -> fr:
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
com.twitter.Extractor$Entity -> fs:
    int start -> a
    int end -> b
    java.lang.String value -> c
    java.lang.String listSlug -> d
    com.twitter.Extractor$Entity$Type type -> e
    java.lang.String displayURL -> f
    java.lang.String expandedURL -> g
    48:64:boolean equals(java.lang.Object) -> equals
    70:70:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
    79:79:java.lang.Integer getStart() -> a
    83:83:java.lang.Integer getEnd() -> b
    87:87:java.lang.String getValue() -> c
com.twitter.Extractor$Entity$Type -> ft:
    com.twitter.Extractor$Entity$Type URL -> a
    com.twitter.Extractor$Entity$Type HASHTAG -> b
    com.twitter.Extractor$Entity$Type MENTION -> c
    com.twitter.Extractor$Entity$Type CASHTAG -> d
    com.twitter.Extractor$Entity$Type[] ENUM$VALUES -> e
    1:1:com.twitter.Extractor$Entity$Type[] values() -> a
com.twitter.Regex -> fu:
    java.lang.String LATIN_ACCENTS_CHARS -> j
    java.lang.String HASHTAG_ALPHA_CHARS -> k
    java.lang.String HASHTAG_ALPHA_NUMERIC_CHARS -> l
    java.lang.String HASHTAG_ALPHA -> m
    java.lang.String HASHTAG_ALPHA_NUMERIC -> n
    java.lang.String URL_VALID_CHARS -> o
    java.lang.String URL_VALID_SUBDOMAIN -> p
    java.lang.String URL_VALID_DOMAIN_NAME -> q
    java.lang.String URL_VALID_DOMAIN -> r
    java.lang.String URL_VALID_GENERAL_PATH_CHARS -> s
    java.lang.String URL_BALANCED_PARENS -> t
    java.lang.String URL_VALID_PATH_ENDING_CHARS -> u
    java.lang.String URL_VALID_PATH -> v
    java.lang.String VALID_URL_PATTERN_STRING -> w
    java.lang.String AT_SIGNS_CHARS -> x
    java.util.regex.Pattern VALID_HASHTAG -> a
    java.util.regex.Pattern INVALID_HASHTAG_MATCH_END -> b
    java.util.regex.Pattern AT_SIGNS -> c
    java.util.regex.Pattern VALID_MENTION_OR_LIST -> d
    java.util.regex.Pattern INVALID_MENTION_MATCH_END -> e
    java.util.regex.Pattern VALID_URL -> f
    java.util.regex.Pattern VALID_TCO_URL -> g
    java.util.regex.Pattern INVALID_URL_WITHOUT_PROTOCOL_MATCH_BEGIN -> h
    java.util.regex.Pattern VALID_CASHTAG -> i
com.twitter.Validator -> fv:
    int shortUrlLength -> a
    int shortUrlLengthHttps -> b
    com.twitter.Extractor extractor -> c
    17:25:int getTweetLength(java.lang.String) -> a
    29:41:boolean isValidTweet(java.lang.String) -> b
crittercism.android.aa -> fw:
    crittercism.android.ag a -> a
    void run() -> run
crittercism.android.ab -> fx:
    long a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    org.json.JSONArray f -> f
    java.util.List g -> g
    double h -> h
    org.json.JSONObject b -> b
    org.json.JSONObject i -> i
    crittercism.android.ab a(java.lang.Throwable,java.util.Map,java.util.List,org.json.JSONObject,long,org.json.JSONObject) -> a
    crittercism.android.ab a(org.json.JSONObject) -> a
    void a(java.util.Map) -> a
    void a(java.util.List,org.json.JSONObject) -> a
    void b(java.util.List,org.json.JSONObject) -> b
crittercism.android.ac -> fy:
    com.crittercism.NotificationActivity a -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
crittercism.android.ad -> fz:
    boolean a -> a
    com.crittercism.NewFeedbackCreateActivity b -> b
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
crittercism.android.ae -> fA:
    crittercism.android.d a -> a
    void run() -> run
crittercism.android.ag -> fB:
    crittercism.android.d a -> a
    void run() -> run
crittercism.android.ah -> fC:
    crittercism.android.d a -> a
    void run() -> run
crittercism.android.ai -> fD:
    crittercism.android.d a -> a
    void run() -> run
crittercism.android.aj -> fE:
    com.crittercism.service.CrittercismService a -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.content.pm.ApplicationInfo) -> a
    void b(android.content.pm.ApplicationInfo) -> b
crittercism.android.ak -> fF:
    java.lang.String a -> a
    crittercism.android.x$a k() -> a
    android.widget.TextView a(android.content.Context) -> a
crittercism.android.am -> fG:
    void run() -> run
crittercism.android.an -> fH:
    com.crittercism.NewFeedbackCreateActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.ao -> fI:
    void run() -> run
crittercism.android.ap -> fJ:
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String a -> a
    java.lang.String j -> i
    crittercism.android.r b -> b
    android.content.Context k -> j
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String l -> k
    java.lang.String m -> l
    java.lang.String n -> m
    java.util.List o -> n
    java.lang.Object r -> o
    java.lang.String a(java.lang.String) -> a
    java.lang.String a() -> a
    java.util.List b() -> b
    double h() -> h
    long i() -> i
    java.lang.String j() -> j
    org.json.JSONObject k() -> k
    org.json.JSONObject l() -> l
    java.lang.String m() -> m
    org.json.JSONObject c() -> c
    int b(java.lang.String) -> b
    org.json.JSONArray n() -> n
    float d() -> d
    float e() -> e
    float f() -> f
    org.json.JSONObject a(org.json.JSONObject) -> a
    java.lang.String a(java.lang.Exception) -> a
    java.lang.String o() -> o
    crittercism.android.n g() -> g
    boolean a(crittercism.android.ab) -> a
crittercism.android.ap$a -> fK:
    java.lang.StringBuilder a -> a
    java.lang.String[] b -> b
    boolean c -> c
    java.lang.Process d -> d
    java.lang.Object e -> e
    crittercism.android.ap$b f -> f
    crittercism.android.ap$b g -> g
    boolean a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    java.lang.StringBuilder e() -> e
    java.lang.Object call() -> call
crittercism.android.ap$b -> fL:
    java.io.InputStream b -> b
    java.lang.StringBuilder a -> a
    java.io.BufferedReader c -> c
    void a() -> a
    void run() -> run
crittercism.android.aq -> fM:
    com.crittercism.NewFeedbackCreateActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.ar -> fN:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
crittercism.android.as -> fO:
    com.crittercism.app.Crittercism a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
crittercism.android.at -> fP:
    com.crittercism.app.Crittercism a -> a
    void handleMessage(android.os.Message) -> handleMessage
crittercism.android.av -> fQ:
    com.crittercism.app.Crittercism a -> a
    void run() -> run
crittercism.android.aw -> fR:
    com.crittercism.app.Crittercism a -> a
    void a() -> a
    void run() -> run
crittercism.android.ax -> fS:
    crittercism.android.t a -> a
    void run() -> run
crittercism.android.ay -> fT:
    com.crittercism.NewFeedbackIssueListActivity a -> a
    void run() -> run
crittercism.android.az -> fU:
    com.crittercism.NewFeedbackIssueListActivity a -> a
    void onClick(android.view.View) -> onClick
crittercism.android.ba -> fV:
    com.crittercism.NewFeedbackIssueListActivity a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
crittercism.android.bb -> fW:
    com.crittercism.NewFeedbackIssueListActivity a -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
crittercism.android.bc -> fX:
    byte[] a -> a
    int a(byte[],byte[],int) -> a
    byte[] a(java.lang.String) -> a
crittercism.android.bd -> fY:
    com.crittercism.NewFeedbackIssueListActivity a -> a
    void onClick(android.view.View) -> onClick
crittercism.android.be -> fZ:
    com.crittercism.NewFeedbackIssueListActivity a -> a
    void onClick(android.view.View) -> onClick
crittercism.android.bf -> ga:
    crittercism.android.bo a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.bg -> gb:
    void onClick(android.view.View) -> onClick
crittercism.android.bh -> gc:
    crittercism.android.h a -> a
    void run() -> run
crittercism.android.bi -> gd:
    void run() -> run
crittercism.android.bj -> ge:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.ArrayList d -> d
    java.lang.String a(int) -> a
    void a(android.content.Context) -> a
    byte[] c(int) -> c
    android.graphics.drawable.BitmapDrawable a() -> a
    android.graphics.Bitmap b(int) -> b
    java.lang.String b(android.content.Context) -> b
    java.lang.String b() -> b
    java.lang.String c() -> c
crittercism.android.bj$a -> gf:
crittercism.android.bj$b -> gg:
    java.lang.String g -> f
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String d -> c
    java.lang.String e -> d
    java.lang.String f -> e
crittercism.android.bj$c -> gh:
    java.util.HashMap a -> a
    java.lang.Thread b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a() -> a
    void b() -> b
    void a(boolean) -> a
    java.lang.String a(int) -> a
    java.lang.String c() -> c
    java.util.HashMap d() -> d
crittercism.android.bk -> gi:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    void onClick(android.view.View) -> onClick
crittercism.android.bl -> gj:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    void onClick(android.view.View) -> onClick
crittercism.android.bm -> gk:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    void onClick(android.view.View) -> onClick
crittercism.android.bn -> gl:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
crittercism.android.bo -> gm:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    void run() -> run
crittercism.android.bp -> gn:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
crittercism.android.bq -> go:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
crittercism.android.br -> gp:
    crittercism.android.bh a -> a
    void run() -> run
crittercism.android.bs -> gq:
    java.lang.String a -> a
    android.view.View$OnClickListener b -> b
    crittercism.android.x$a k() -> a
crittercism.android.bt -> gr:
    com.crittercism.NewFeedbackQuestionListActivity a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
crittercism.android.bu -> gs:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
crittercism.android.bv -> gt:
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.bw -> gu:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    crittercism.android.bw a(org.json.JSONObject) -> a
    org.json.JSONObject a() -> a
crittercism.android.c -> gv:
    crittercism.android.c$a a -> a
crittercism.android.c$a -> gw:
    crittercism.android.c$a a -> a
    crittercism.android.c$a b -> b
    crittercism.android.c$a d -> d
    crittercism.android.c$a c -> c
crittercism.android.cb -> gx:
    android.graphics.Paint a -> a
    void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint) -> onDraw
crittercism.android.cc -> gy:
    crittercism.android.ai a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.d -> gz:
    boolean a -> a
    com.crittercism.NewFeedbackSpringboardActivity b -> b
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
crittercism.android.e -> gA:
    com.crittercism.NewFeedbackSpringboardActivity a -> a
    void run() -> run
crittercism.android.f -> gB:
    com.crittercism.NewFeedbackItemDetailsActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.g -> gC:
    com.crittercism.NewFeedbackItemDetailsActivity a -> a
    void run() -> run
crittercism.android.h -> gD:
    boolean a -> a
    com.crittercism.NewFeedbackItemDetailsActivity b -> b
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
crittercism.android.i -> gE:
    com.crittercism.NewFeedbackItemDetailsActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.j -> gF:
    java.lang.String a -> a
    java.lang.String b -> b
crittercism.android.k -> gG:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    crittercism.android.k a(org.json.JSONObject) -> a
crittercism.android.l -> gH:
    com.crittercism.NewFeedbackSpringboardActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.m -> gI:
    crittercism.android.aa a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.n -> gJ:
    java.lang.Object a -> a
    java.lang.Object b -> b
    java.math.BigInteger a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
crittercism.android.o -> gK:
    com.crittercism.service.CrittercismService$a a -> a
    void run() -> run
crittercism.android.p -> gL:
    java.util.Vector d -> d
    android.content.Context a -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void b() -> b
    void c(java.util.Vector) -> c
    android.view.View a(int) -> a
    android.view.View a(crittercism.android.bs) -> a
crittercism.android.q -> gM:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
crittercism.android.r -> gN:
    org.apache.http.impl.client.DefaultHttpClient b -> b
    java.lang.String a -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    java.lang.String a(org.apache.http.client.methods.HttpRequestBase) -> a
    java.lang.String a(java.lang.String,java.util.List) -> a
    java.lang.String a(java.lang.String,org.json.JSONObject) -> a
crittercism.android.s -> gO:
    crittercism.android.ay a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.t -> gP:
    crittercism.android.ad a -> a
    void run() -> run
crittercism.android.u -> gQ:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    java.util.ArrayList i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    boolean o -> o
    android.os.Parcelable$Creator CREATOR -> CREATOR
    org.json.JSONObject a() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    crittercism.android.u a(org.json.JSONObject) -> a
    java.lang.String b() -> c
    java.lang.String c() -> d
    java.lang.String d() -> e
    java.lang.String e() -> f
    int f() -> g
    int g() -> h
    int h() -> i
    java.lang.String i() -> j
    void a(int) -> a
    java.lang.String j() -> k
    crittercism.android.x$a k() -> a
crittercism.android.v -> gR:
    crittercism.android.v$a a -> a
    int[] b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    void a(org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    int[] c() -> c
crittercism.android.v$a -> gS:
    crittercism.android.v$a a -> a
    crittercism.android.v$a b -> b
    crittercism.android.v$a c -> c
    crittercism.android.v$a d -> d
    crittercism.android.v$a e -> e
    crittercism.android.v$a f -> f
    crittercism.android.v$a g -> g
    crittercism.android.v$a h -> h
    crittercism.android.v$a i -> i
    crittercism.android.v$a[] j -> j
    crittercism.android.v$a[] values() -> a
crittercism.android.x -> gT:
    crittercism.android.x$a k() -> a
crittercism.android.x$a -> gU:
    crittercism.android.x$a a -> a
    crittercism.android.x$a b -> b
    crittercism.android.x$a c -> c
crittercism.android.y -> gV:
    void onClick(android.content.DialogInterface,int) -> onClick
crittercism.android.z -> crittercism.android.z:
    java.util.Vector e -> e
    java.util.Vector f -> f
    java.util.Vector g -> g
    java.lang.String h -> h
    java.util.Vector i -> i
    int j -> j
    boolean a -> a
    crittercism.android.u k -> k
    crittercism.android.z$b l -> l
    java.lang.String b -> b
    boolean m -> m
    boolean c -> c
    android.app.AlertDialog n -> n
    android.widget.ProgressBar d -> d
    void a(boolean) -> a
    android.view.View a() -> a
    void a(java.util.Vector,java.lang.Exception) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void c() -> c
    java.util.Vector a(java.util.Vector) -> a
    java.util.Vector a(java.util.Vector,java.util.Vector) -> a
    java.util.Vector b(java.util.Vector) -> b
    java.util.Vector b(java.util.Vector,java.util.Vector) -> b
    int a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void b(java.lang.String) -> b
    java.lang.String b() -> b
crittercism.android.z$a -> gW:
    java.lang.Exception a -> a
    void run() -> run
crittercism.android.z$b -> gX:
    java.lang.Exception a -> a
    java.lang.String b -> b
    crittercism.android.z c -> c
    void onPreExecute() -> onPreExecute
    java.util.Vector a() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.appdotnet4j.model.AdnPaging -> org.appdotnet4j.model.AdnPaging:
org.appdotnet4j.model.AdnPost -> org.appdotnet4j.model.AdnPost:
    long mId -> mId
    java.lang.Long mInReplyTo -> mInReplyTo
    java.lang.String mText -> mText
    org.appdotnet4j.model.AdnUser mUser -> mUser
    java.util.Date mCreatedAt -> mCreatedAt
    java.lang.String mSource -> mSource
    boolean mIsDeleted -> mIsDeleted
org.appdotnet4j.model.AdnPostCompose -> org.appdotnet4j.model.AdnPostCompose:
    java.lang.String mText -> mText
    java.lang.String mInReplyTo -> mInReplyTo
org.appdotnet4j.model.AdnPosts -> org.appdotnet4j.model.AdnPosts:
    java.util.ArrayList mPosts -> mPosts
org.appdotnet4j.model.AdnUser -> org.appdotnet4j.model.AdnUser:
    long mId -> mId
    java.lang.String mUserName -> mUserName
    java.lang.String mName -> mName
    java.lang.String mDescription -> mDescription
    int mFollowersCount -> mFollowersCount
    int mFollowingCount -> mFollowingCount
    int mPostCount -> mPostCount
    java.lang.String mAvatarUrl -> mAvatarUrl
    java.lang.String mCoverUrl -> mCoverUrl
org.asynctasktex.AsyncTaskEx -> org.asynctasktex.AsyncTaskEx:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    int PRIORITY_LOWEST -> PRIORITY_LOWEST
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MEDIUM -> PRIORITY_MEDIUM
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_HIGHEST -> PRIORITY_HIGHEST
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    org.asynctasktex.PriorityExecutor DEFAULT_EXECUTOR -> DEFAULT_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    org.asynctasktex.AsyncTaskEx$InternalHandler sHandler -> sHandler
    org.asynctasktex.BaseExecutor sDefaultExecutor -> sDefaultExecutor
    org.asynctasktex.AsyncTaskEx$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    int mPriority -> mPriority
    java.lang.String mDescription -> mDescription
    org.asynctasktex.AsyncTaskEx$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    int[] $SWITCH_TABLE$org$asynctasktex$AsyncTaskEx$Status -> $SWITCH_TABLE$org$asynctasktex$AsyncTaskEx$Status
    275:276:void init() -> init
    280:281:void setDefaultExecutor(org.asynctasktex.PriorityExecutor) -> setDefaultExecutor
    316:320:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    324:327:java.lang.Object postResult(java.lang.Object) -> postResult
    336:336:org.asynctasktex.AsyncTaskEx$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    364:364:void onPreExecute() -> onPreExecute
    380:380:void onPostExecute(java.lang.Object) -> onPostExecute
    393:393:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    411:412:void onCancelled(java.lang.Object) -> onCancelled
    427:427:void onCancelled() -> onCancelled
    440:440:boolean isCancelled() -> isCancelled
    473:474:boolean cancel(boolean) -> cancel
    489:489:java.lang.Object get() -> get
    509:509:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    541:541:org.asynctasktex.AsyncTaskEx execute(int,java.lang.Object[]) -> execute
    544:544:org.asynctasktex.AsyncTaskEx execute(int,java.lang.String,java.lang.Object[]) -> execute
    582:604:org.asynctasktex.AsyncTaskEx executeOnExecutor(org.asynctasktex.BaseExecutor,int,java.lang.String,java.lang.Object[]) -> executeOnExecutor
    616:617:void execute(java.lang.Runnable) -> execute
    634:638:void publishProgress(java.lang.Object[]) -> publishProgress
    641:647:void finish(java.lang.Object) -> finish
    640:640:void access$0(org.asynctasktex.AsyncTaskEx,java.lang.Object) -> access$0
    250:250:java.util.concurrent.atomic.AtomicBoolean access$1(org.asynctasktex.AsyncTaskEx) -> access$1
    322:322:java.lang.Object access$2(org.asynctasktex.AsyncTaskEx,java.lang.Object) -> access$2
    315:315:void access$3(org.asynctasktex.AsyncTaskEx,java.lang.Object) -> access$3
    196:196:int[] $SWITCH_TABLE$org$asynctasktex$AsyncTaskEx$Status() -> $SWITCH_TABLE$org$asynctasktex$AsyncTaskEx$Status
org.asynctasktex.AsyncTaskEx$1 -> org.asynctasktex.AsyncTaskEx$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    216:216:java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.asynctasktex.AsyncTaskEx$2 -> org.asynctasktex.AsyncTaskEx$2:
    org.asynctasktex.AsyncTaskEx this$0 -> this$0
    289:294:java.lang.Object call() -> call
org.asynctasktex.AsyncTaskEx$3 -> org.asynctasktex.AsyncTaskEx$3:
    org.asynctasktex.AsyncTaskEx this$0 -> this$0
    302:311:void done() -> done
org.asynctasktex.AsyncTaskEx$InternalHandler -> org.asynctasktex.AsyncTaskEx$InternalHandler:
    653:663:void handleMessage(android.os.Message) -> handleMessage
org.asynctasktex.AsyncTaskEx$PrioritizedAsyncTaskResult -> org.asynctasktex.AsyncTaskEx$PrioritizedAsyncTaskResult:
    org.asynctasktex.AsyncTaskEx mTask -> mTask
    java.lang.Object[] mData -> mData
org.asynctasktex.AsyncTaskEx$Status -> org.asynctasktex.AsyncTaskEx$Status:
    org.asynctasktex.AsyncTaskEx$Status PENDING -> PENDING
    org.asynctasktex.AsyncTaskEx$Status RUNNING -> RUNNING
    org.asynctasktex.AsyncTaskEx$Status FINISHED -> FINISHED
    org.asynctasktex.AsyncTaskEx$Status[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.asynctasktex.AsyncTaskEx$Status[] values() -> values
    1:1:org.asynctasktex.AsyncTaskEx$Status valueOf(java.lang.String) -> valueOf
org.asynctasktex.AsyncTaskEx$WorkerRunnable -> org.asynctasktex.AsyncTaskEx$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
org.asynctasktex.BaseExecutor -> org.asynctasktex.BaseExecutor:
    void execute(int,java.lang.Runnable) -> execute
org.asynctasktex.PriorityExecutor -> org.asynctasktex.PriorityExecutor:
    java.util.ArrayList mTasks -> mTasks
    org.asynctasktex.PriorityExecutor$PrioritizedRunnable mActive -> mActive
    58:71:void execute(int,java.lang.Runnable) -> execute
    79:82:void execute(java.lang.Runnable) -> execute
    89:96:void scheduleNext() -> scheduleNext
org.asynctasktex.PriorityExecutor$1 -> org.asynctasktex.PriorityExecutor$1:
    org.asynctasktex.PriorityExecutor this$0 -> this$0
    java.lang.Runnable val$r -> val$r
    61:65:void run() -> run
org.asynctasktex.PriorityExecutor$PrioritizedRunnable -> org.asynctasktex.PriorityExecutor$PrioritizedRunnable:
    java.lang.Runnable mRunnable -> mRunnable
    int mPriority -> mPriority
org.asynctasktex.PriorityExecutor$PrioritizedRunnableComparator -> org.asynctasktex.PriorityExecutor$PrioritizedRunnableComparator:
    45:45:int compare(org.asynctasktex.PriorityExecutor$PrioritizedRunnable,org.asynctasktex.PriorityExecutor$PrioritizedRunnable) -> compare
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
org.asynctasktex.SerialExecutor -> org.asynctasktex.SerialExecutor:
    java.util.ArrayDeque mTasks -> mTasks
    java.lang.Runnable mActive -> mActive
    27:28:void execute(int,java.lang.Runnable) -> execute
    31:43:void execute(java.lang.Runnable) -> execute
    46:49:void scheduleNext() -> scheduleNext
org.asynctasktex.SerialExecutor$1 -> org.asynctasktex.SerialExecutor$1:
    org.asynctasktex.SerialExecutor this$0 -> this$0
    java.lang.Runnable val$r -> val$r
    34:38:void run() -> run
org.socialnetlib.android.AppdotnetApi -> org.socialnetlib.android.AppdotnetApi:
    47:47:void init() -> init
    50:54:boolean isResponseValid(com.turbomanage.httpclient.HttpResponse) -> isResponseValid
    59:62:com.turbomanage.httpclient.BasicHttpClient getHttpClient() -> getHttpClient
    67:70:com.turbomanage.httpclient.BasicHttpClient getHttpClient(java.lang.String) -> getHttpClient
    74:74:java.lang.String doGet(java.lang.String,com.turbomanage.httpclient.ParameterMap) -> doGet
    78:83:java.lang.String doGet(java.lang.String,com.turbomanage.httpclient.ParameterMap,java.lang.String) -> doGet
    93:99:org.tweetalib.android.model.TwitterUser verifyCredentialsSync(java.lang.String,java.lang.String) -> verifyCredentialsSync
    107:113:org.tweetalib.android.model.TwitterUser getAdnUser(long) -> getAdnUser
    120:120:org.appdotnet4j.model.AdnPosts getAdnStream() -> getAdnStream
    127:127:org.appdotnet4j.model.AdnPosts getAdnGlobalStream() -> getAdnGlobalStream
    134:134:org.appdotnet4j.model.AdnPosts getAdnMentions(int) -> getAdnMentions
    141:141:org.appdotnet4j.model.AdnPosts getAdnUserStream(int) -> getAdnUserStream
    148:148:org.appdotnet4j.model.AdnPosts getAdnTagPosts(java.lang.String) -> getAdnTagPosts
    155:161:org.appdotnet4j.model.AdnPosts getPosts(java.lang.String,com.turbomanage.httpclient.ParameterMap) -> getPosts
    168:172:org.appdotnet4j.model.AdnPost getAdnPost(long) -> getAdnPost
    176:190:org.appdotnet4j.model.AdnPost setAdnStatus(org.appdotnet4j.model.AdnPostCompose) -> setAdnStatus
    195:195:twitter4j.Twitter getAndConfigureApiInstance() -> getAndConfigureApiInstance
    202:202:void clearApiInstance() -> clearApiInstance
org.socialnetlib.android.SocialNetApi -> org.socialnetlib.android.SocialNetApi:
    org.socialnetlib.android.SocialNetConstant$Type mType -> mType
    java.lang.String mCurrentOAuthToken -> mCurrentOAuthToken
    java.lang.String mCurrentOAuthSecret -> mCurrentOAuthSecret
    java.lang.String mAppConsumerKey -> mAppConsumerKey
    java.lang.String mAppConsumerSecret -> mAppConsumerSecret
    org.tweetalib.android.TwitterFetchBooleans mFetchBooleans -> mFetchBooleans
    org.tweetalib.android.fetch.TwitterFetchDirectMessages mFetchDirectMessages -> mFetchDirectMessages
    org.tweetalib.android.TwitterFetchStatus mFetchStatus -> mFetchStatus
    org.tweetalib.android.fetch.TwitterFetchStatuses mFetchStatuses -> mFetchStatuses
    org.tweetalib.android.TwitterFetchUser mFetchUser -> mFetchUser
    org.tweetalib.android.TwitterFetchUsers mFetchUsers -> mFetchUsers
    org.tweetalib.android.TwitterFetchLists mFetchLists -> mFetchLists
    org.tweetalib.android.TwitterModifyStatuses mModifyStatuses -> mModifyStatuses
    org.tweetalib.android.TwitterSignIn mSignIn -> mSignIn
    org.tweetalib.android.ConnectionStatus mConnectionStatus -> mConnectionStatus
    void init() -> init
    org.tweetalib.android.model.TwitterUser verifyCredentialsSync(java.lang.String,java.lang.String) -> verifyCredentialsSync
    twitter4j.Twitter getAndConfigureApiInstance() -> getAndConfigureApiInstance
    void clearApiInstance() -> clearApiInstance
    106:126:void initFetchStatus() -> initFetchStatus
    133:159:void initFetchStatuses() -> initFetchStatuses
    165:175:void initFetchBooleans() -> initFetchBooleans
    182:197:void initFetchDirectMessages() -> initFetchDirectMessages
    203:230:void initSignIn() -> initSignIn
    236:253:void initFetchUser() -> initFetchUser
    257:261:org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
    267:288:void initFetchUsers() -> initFetchUsers
    294:306:void initFetchLists() -> initFetchLists
    312:324:void initModifyStatuses() -> initModifyStatuses
    330:339:boolean isAuthenticated() -> isAuthenticated
    347:348:void cacheUser(twitter4j.User) -> cacheUser
    354:357:void cacheUser(twitter4j.User,boolean) -> cacheUser
    363:364:void cacheUser(org.appdotnet4j.model.AdnUser) -> cacheUser
    370:373:void cacheUser(org.appdotnet4j.model.AdnUser,boolean) -> cacheUser
    380:412:void setOAuthTokenWithSecret(java.lang.String,java.lang.String,boolean) -> setOAuthTokenWithSecret
    418:419:void setConnectionStatus(org.tweetalib.android.ConnectionStatus$Callbacks) -> setConnectionStatus
    425:425:org.tweetalib.android.ConnectionStatus getConnectionStatus() -> getConnectionStatus
    429:429:org.tweetalib.android.model.TwitterStatuses getContentFeed(org.tweetalib.android.TwitterContentHandle) -> getContentFeed
    436:437:void getAuthUrl(org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback) -> getAuthUrl
    439:440:void getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String,org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback) -> getOAuthAccessToken
    446:446:org.tweetalib.android.model.TwitterUser getUser(java.lang.Long) -> getUser
    449:450:org.tweetalib.android.model.TwitterUser getUser(java.lang.Long,org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> getUser
    453:454:org.tweetalib.android.model.TwitterUser getUser(java.lang.String,org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> getUser
    458:459:void verifyUser(org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> verifyUser
    465:466:org.tweetalib.android.model.TwitterUsers getUsers(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging) -> getUsers
    469:470:org.tweetalib.android.model.TwitterUsers getUsers(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> getUsers
    477:478:org.tweetalib.android.model.TwitterDirectMessages getDirectMessages(org.tweetalib.android.TwitterContentHandle) -> getDirectMessages
    481:482:org.tweetalib.android.model.TwitterDirectMessages getDirectMessages(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback) -> getDirectMessages
    486:487:void sendDirectMessage(long,java.lang.String,java.lang.String,org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback) -> sendDirectMessage
    493:494:void updateFriendship(java.lang.String,org.tweetalib.android.model.TwitterUser,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendship
    496:497:void updateFriendship(java.lang.String,org.tweetalib.android.model.TwitterUsers,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendship
    499:500:void updateFriendshipScreenName(java.lang.String,java.lang.String,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipScreenName
    502:503:void updateFriendshipScreenNames(java.lang.String,java.util.ArrayList,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipScreenNames
    505:506:void updateFriendshipUserId(long,long,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipUserId
    508:509:void updateFriendshipUserIds(long,java.util.ArrayList,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipUserIds
    515:516:void createBlock(long,java.lang.Long,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> createBlock
    518:519:void createBlock(long,java.util.ArrayList,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> createBlock
    525:526:void reportSpam(long,java.lang.Long,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> reportSpam
    528:529:void reportSpam(long,java.util.ArrayList,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> reportSpam
    535:536:org.tweetalib.android.model.TwitterLists getLists(int) -> getLists
    539:540:org.tweetalib.android.model.TwitterLists getLists(int,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> getLists
    543:544:org.tweetalib.android.model.TwitterLists getLists(java.lang.String) -> getLists
    547:548:org.tweetalib.android.model.TwitterLists getLists(java.lang.String,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> getLists
    555:555:org.tweetalib.android.model.TwitterStatus getStatus(long,org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> getStatus
    562:563:void setStatus(org.tweetalib.android.model.TwitterStatusUpdate,org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> setStatus
    569:570:void setRetweet(long,org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> setRetweet
    576:577:void setFavorite(org.tweetalib.android.model.TwitterStatus,boolean,org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> setFavorite
    579:580:void setFavorite(org.tweetalib.android.model.TwitterStatuses,boolean,org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> setFavorite
    586:587:void triggerFetchStatuses(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback,int) -> triggerFetchStatuses
    593:594:void cancelFetchStatuses(org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback) -> cancelFetchStatuses
    600:601:void getFriendshipExists(java.lang.String,java.lang.String,org.tweetalib.android.TwitterFetchBooleans$FinishedCallback) -> getFriendshipExists
    604:604:org.tweetalib.android.TwitterFetchLists getFetchListsInstance() -> getFetchListsInstance
    605:605:org.tweetalib.android.TwitterFetchStatus getFetchStatusInstance() -> getFetchStatusInstance
    606:606:org.tweetalib.android.TwitterFetchBooleans getFetchBooleansInstance() -> getFetchBooleansInstance
    607:607:org.tweetalib.android.TwitterFetchUser getFetchUserInstance() -> getFetchUserInstance
    608:608:org.tweetalib.android.TwitterFetchUsers getFetchUsersInstance() -> getFetchUsersInstance
    609:609:org.tweetalib.android.TwitterModifyStatuses getSetStatusesInstance() -> getSetStatusesInstance
    610:610:org.tweetalib.android.TwitterSignIn getSignInInstance() -> getSignInInstance
    346:346:void access$0(org.socialnetlib.android.SocialNetApi,twitter4j.User) -> access$0
    362:362:void access$1(org.socialnetlib.android.SocialNetApi,org.appdotnet4j.model.AdnUser) -> access$1
    75:75:org.tweetalib.android.TwitterFetchUser access$2(org.socialnetlib.android.SocialNetApi) -> access$2
    80:80:org.tweetalib.android.ConnectionStatus access$3(org.socialnetlib.android.SocialNetApi) -> access$3
org.socialnetlib.android.SocialNetApi$1 -> org.socialnetlib.android.SocialNetApi$1:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    111:111:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    116:117:void addUser(twitter4j.User) -> addUser
    121:121:org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
org.socialnetlib.android.SocialNetApi$2 -> org.socialnetlib.android.SocialNetApi$2:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    138:138:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    143:144:void addUser(twitter4j.User) -> addUser
    148:149:void addUser(org.appdotnet4j.model.AdnUser) -> addUser
    153:153:org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
org.socialnetlib.android.SocialNetApi$3 -> org.socialnetlib.android.SocialNetApi$3:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    170:170:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
org.socialnetlib.android.SocialNetApi$4 -> org.socialnetlib.android.SocialNetApi$4:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    187:187:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    192:193:void addUser(twitter4j.User) -> addUser
org.socialnetlib.android.SocialNetApi$5 -> org.socialnetlib.android.SocialNetApi$5:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    209:209:java.lang.String getConsumerKey() -> getConsumerKey
    214:214:java.lang.String getConsumerSecret() -> getConsumerSecret
    219:219:org.tweetalib.android.model.TwitterUser verifyCredentials(java.lang.String,java.lang.String) -> verifyCredentials
    224:224:org.socialnetlib.android.SocialNetConstant$Type getType() -> getType
org.socialnetlib.android.SocialNetApi$6 -> org.socialnetlib.android.SocialNetApi$6:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    242:242:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    247:247:org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
org.socialnetlib.android.SocialNetApi$7 -> org.socialnetlib.android.SocialNetApi$7:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    273:273:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    278:279:void addUser(twitter4j.User) -> addUser
    283:283:org.tweetalib.android.model.TwitterUser getUser(java.lang.Long) -> getUser
org.socialnetlib.android.SocialNetApi$8 -> org.socialnetlib.android.SocialNetApi$8:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    300:300:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
org.socialnetlib.android.SocialNetApi$9 -> org.socialnetlib.android.SocialNetApi$9:
    org.socialnetlib.android.SocialNetApi this$0 -> this$0
    318:318:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
org.socialnetlib.android.SocialNetConstant -> org.socialnetlib.android.SocialNetConstant:
org.socialnetlib.android.SocialNetConstant$Type -> org.socialnetlib.android.SocialNetConstant$Type:
    org.socialnetlib.android.SocialNetConstant$Type Twitter -> Twitter
    org.socialnetlib.android.SocialNetConstant$Type Appdotnet -> Appdotnet
    org.socialnetlib.android.SocialNetConstant$Type[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.socialnetlib.android.SocialNetConstant$Type[] values() -> values
    1:1:org.socialnetlib.android.SocialNetConstant$Type valueOf(java.lang.String) -> valueOf
org.socialnetlib.android.TwitterApi -> org.socialnetlib.android.TwitterApi:
    java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON -> TWITTER_VERIFY_CREDENTIALS_JSON
    twitter4j.Twitter mSocNetApi -> mSocNetApi
    twitter4j.auth.OAuthAuthorization mOAuth -> mOAuth
    49:65:org.tweetalib.android.model.TwitterUser verifyCredentialsSync(java.lang.String,java.lang.String) -> verifyCredentialsSync
    70:72:void init() -> init
    76:95:twitter4j.Twitter getAndConfigureApiInstance() -> getAndConfigureApiInstance
    100:102:void clearApiInstance() -> clearApiInstance
    108:110:java.lang.String generateTwitterVerifyCredentialsAuthorizationHeader() -> generateTwitterVerifyCredentialsAuthorizationHeader
org.tjson.CDL -> org.tjson.CDL:
    65:90:java.lang.String getValue(org.tjson.JSONTokener) -> getValue
    101:110:org.tjson.JSONArray rowToJSONArray(org.tjson.JSONTokener) -> rowToJSONArray
    138:139:org.tjson.JSONObject rowToJSONObject(org.tjson.JSONArray,org.tjson.JSONTokener) -> rowToJSONObject
    150:176:java.lang.String rowToString(org.tjson.JSONArray) -> rowToString
    187:187:org.tjson.JSONArray toJSONArray(java.lang.String) -> toJSONArray
    198:198:org.tjson.JSONArray toJSONArray(org.tjson.JSONTokener) -> toJSONArray
    211:211:org.tjson.JSONArray toJSONArray(org.tjson.JSONArray,java.lang.String) -> toJSONArray
    224:238:org.tjson.JSONArray toJSONArray(org.tjson.JSONArray,org.tjson.JSONTokener) -> toJSONArray
    251:258:java.lang.String toString(org.tjson.JSONArray) -> toString
    272:282:java.lang.String toString(org.tjson.JSONArray,org.tjson.JSONArray) -> toString
org.tjson.Cookie -> org.tjson.Cookie:
    53:66:java.lang.String escape(java.lang.String) -> escape
    87:108:org.tjson.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    123:143:java.lang.String toString(org.tjson.JSONObject) -> toString
    155:171:java.lang.String unescape(java.lang.String) -> unescape
org.tjson.CookieList -> org.tjson.CookieList:
    54:62:org.tjson.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    76:92:java.lang.String toString(org.tjson.JSONObject) -> toString
org.tjson.HTTP -> org.tjson.HTTP:
    java.lang.String CRLF -> CRLF
    75:106:org.tjson.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    131:164:java.lang.String toString(org.tjson.JSONObject) -> toString
org.tjson.HTTPTokener -> org.tjson.HTTPTokener:
    55:72:java.lang.String nextToken() -> nextToken
org.tjson.JSONArray -> org.tjson.JSONArray:
    java.util.ArrayList myArrayList -> myArrayList
    193:197:java.lang.Object get(int) -> get
    211:221:boolean getBoolean(int) -> getBoolean
    234:240:double getDouble(int) -> getDouble
    254:260:int getInt(int) -> getInt
    274:278:org.tjson.JSONArray getJSONArray(int) -> getJSONArray
    291:295:org.tjson.JSONObject getJSONObject(int) -> getJSONObject
    309:315:long getLong(int) -> getLong
    328:332:java.lang.String getString(int) -> getString
    342:342:boolean isNull(int) -> isNull
    355:364:java.lang.String join(java.lang.String) -> join
    374:374:int length() -> length
    385:385:java.lang.Object opt(int) -> opt
    400:400:boolean optBoolean(int) -> optBoolean
    415:417:boolean optBoolean(int,boolean) -> optBoolean
    431:431:double optDouble(int) -> optDouble
    446:448:double optDouble(int,double) -> optDouble
    462:462:int optInt(int) -> optInt
    476:478:int optInt(int,int) -> optInt
    490:491:org.tjson.JSONArray optJSONArray(int) -> optJSONArray
    504:505:org.tjson.JSONObject optJSONObject(int) -> optJSONObject
    518:518:long optLong(int) -> optLong
    532:534:long optLong(int,long) -> optLong
    548:548:java.lang.String optString(int) -> optString
    561:562:java.lang.String optString(int,java.lang.String) -> optString
    575:576:org.tjson.JSONArray put(boolean) -> put
    587:588:org.tjson.JSONArray put(java.util.Collection) -> put
    600:603:org.tjson.JSONArray put(double) -> put
    614:615:org.tjson.JSONArray put(int) -> put
    626:627:org.tjson.JSONArray put(long) -> put
    638:639:org.tjson.JSONArray put(java.util.Map) -> put
    651:652:org.tjson.JSONArray put(java.lang.Object) -> put
    666:667:org.tjson.JSONArray put(int,boolean) -> put
    681:682:org.tjson.JSONArray put(int,java.util.Collection) -> put
    697:698:org.tjson.JSONArray put(int,double) -> put
    712:713:org.tjson.JSONArray put(int,int) -> put
    727:728:org.tjson.JSONArray put(int,long) -> put
    742:743:org.tjson.JSONArray put(int,java.util.Map) -> put
    760:772:org.tjson.JSONArray put(int,java.lang.Object) -> put
    783:785:java.lang.Object remove(int) -> remove
    799:806:org.tjson.JSONObject toJSONObject(org.tjson.JSONArray) -> toJSONObject
    823:825:java.lang.String toString() -> toString
    842:842:java.lang.String toString(int) -> toString
    857:885:java.lang.String toString(int,int) -> toString
    900:922:java.io.Writer write(java.io.Writer) -> write
org.tjson.JSONException -> org.tjson.JSONException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> cause
    26:26:java.lang.Throwable getCause() -> getCause
org.tjson.JSONML -> org.tjson.JSONML:
    59:72:java.lang.Object parse(org.tjson.XMLTokener,boolean,org.tjson.JSONArray) -> parse
    253:253:org.tjson.JSONArray toJSONArray(java.lang.String) -> toJSONArray
    270:270:org.tjson.JSONArray toJSONArray(org.tjson.XMLTokener) -> toJSONArray
    288:288:org.tjson.JSONObject toJSONObject(org.tjson.XMLTokener) -> toJSONObject
    306:306:org.tjson.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    323:386:java.lang.String toString(org.tjson.JSONArray) -> toString
    399:467:java.lang.String toString(org.tjson.JSONObject) -> toString
org.tjson.JSONObject -> org.tjson.JSONObject:
    java.util.Map map -> map
    java.lang.Object NULL -> NULL
    378:389:org.tjson.JSONObject accumulate(java.lang.String,java.lang.Object) -> accumulate
    405:415:org.tjson.JSONObject append(java.lang.String,java.lang.Object) -> append
    426:442:java.lang.String doubleToString(double) -> doubleToString
    454:462:java.lang.Object get(java.lang.String) -> get
    475:485:boolean getBoolean(java.lang.String) -> getBoolean
    498:504:double getDouble(java.lang.String) -> getDouble
    519:525:int getInt(java.lang.String) -> getInt
    540:544:org.tjson.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    558:562:org.tjson.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    576:582:long getLong(java.lang.String) -> getLong
    594:605:java.lang.String[] getNames(org.tjson.JSONObject) -> getNames
    615:628:java.lang.String[] getNames(java.lang.Object) -> getNames
    640:642:java.lang.String getString(java.lang.String) -> getString
    659:659:boolean has(java.lang.String) -> has
    673:687:org.tjson.JSONObject increment(java.lang.String) -> increment
    699:699:boolean isNull(java.lang.String) -> isNull
    709:709:java.util.Iterator keys() -> keys
    719:719:int length() -> length
    730:735:org.tjson.JSONArray names() -> names
    746:763:java.lang.String numberToString(java.lang.Number) -> numberToString
    773:773:java.lang.Object opt(java.lang.String) -> opt
    786:786:boolean optBoolean(java.lang.String) -> optBoolean
    801:803:boolean optBoolean(java.lang.String,boolean) -> optBoolean
    818:818:double optDouble(java.lang.String) -> optDouble
    834:836:double optDouble(java.lang.String,double) -> optDouble
    851:851:int optInt(java.lang.String) -> optInt
    867:869:int optInt(java.lang.String,int) -> optInt
    883:884:org.tjson.JSONArray optJSONArray(java.lang.String) -> optJSONArray
    897:898:org.tjson.JSONObject optJSONObject(java.lang.String) -> optJSONObject
    912:912:long optLong(java.lang.String) -> optLong
    928:930:long optLong(java.lang.String,long) -> optLong
    944:944:java.lang.String optString(java.lang.String) -> optString
    957:958:java.lang.String optString(java.lang.String,java.lang.String) -> optString
    963:1007:void populateMap(java.lang.Object) -> populateMap
    1019:1020:org.tjson.JSONObject put(java.lang.String,boolean) -> put
    1033:1034:org.tjson.JSONObject put(java.lang.String,java.util.Collection) -> put
    1047:1048:org.tjson.JSONObject put(java.lang.String,double) -> put
    1061:1062:org.tjson.JSONObject put(java.lang.String,int) -> put
    1075:1076:org.tjson.JSONObject put(java.lang.String,long) -> put
    1089:1090:org.tjson.JSONObject put(java.lang.String,java.util.Map) -> put
    1106:1115:org.tjson.JSONObject put(java.lang.String,java.lang.Object) -> put
    1129:1135:org.tjson.JSONObject putOnce(java.lang.String,java.lang.Object) -> putOnce
    1150:1153:org.tjson.JSONObject putOpt(java.lang.String,java.lang.Object) -> putOpt
    1166:1219:java.lang.String quote(java.lang.String) -> quote
    1229:1229:java.lang.Object remove(java.lang.String) -> remove
    1240:1281:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1291:1304:void testValidity(java.lang.Object) -> testValidity
    1316:1323:org.tjson.JSONArray toJSONArray(org.tjson.JSONArray) -> toJSONArray
    1340:1355:java.lang.String toString() -> toString
    1373:1373:java.lang.String toString(int) -> toString
    1392:1430:java.lang.String toString(int,int) -> toString
    1456:1487:java.lang.String valueToString(java.lang.Object) -> valueToString
    1510:1543:java.lang.String valueToString(java.lang.Object,int,int) -> valueToString
    1561:1596:java.lang.Object wrap(java.lang.Object) -> wrap
    1612:1636:java.io.Writer write(java.io.Writer) -> write
org.tjson.JSONObject$Null -> org.tjson.JSONObject$Null:
    110:110:java.lang.Object clone() -> clone
    120:120:boolean equals(java.lang.Object) -> equals
    128:128:java.lang.String toString() -> toString
org.tjson.JSONString -> org.tjson.JSONString:
    java.lang.String toJSONString() -> toJSONString
org.tjson.JSONStringer -> org.tjson.JSONStringer:
    76:76:java.lang.String toString() -> toString
org.tjson.JSONTokener -> org.tjson.JSONTokener:
    long character -> character
    boolean eof -> eof
    long index -> index
    long line -> line
    char previous -> previous
    java.io.Reader reader -> reader
    boolean usePrevious -> usePrevious
    98:105:void back() -> back
    115:124:int dehexchar(char) -> dehexchar
    128:128:boolean end() -> end
    138:143:boolean more() -> more
    154:180:char next() -> next
    192:197:char next(char) -> next
    211:225:java.lang.String next(int) -> next
    236:238:char nextClean() -> nextClean
    257:258:java.lang.String nextString(char) -> nextString
    313:314:java.lang.String nextTo(char) -> nextTo
    335:336:java.lang.String nextTo(java.lang.String) -> nextTo
    358:393:java.lang.Object nextValue() -> nextValue
    407:426:char skipTo(char) -> skipTo
    437:437:org.tjson.JSONException syntaxError(java.lang.String) -> syntaxError
    447:447:java.lang.String toString() -> toString
org.tjson.JSONWriter -> org.tjson.JSONWriter:
    int maxdepth -> maxdepth
    boolean comma -> comma
    char mode -> mode
    org.tjson.JSONObject[] stack -> stack
    int top -> top
    java.io.Writer writer -> writer
    114:132:org.tjson.JSONWriter append(java.lang.String) -> append
    145:151:org.tjson.JSONWriter array() -> array
    162:174:org.tjson.JSONWriter end(char,char) -> end
    184:184:org.tjson.JSONWriter endArray() -> endArray
    194:194:org.tjson.JSONWriter endObject() -> endObject
    206:224:org.tjson.JSONWriter key(java.lang.String) -> key
    238:247:org.tjson.JSONWriter object() -> object
    258:271:void pop(char) -> pop
    279:285:void push(org.tjson.JSONObject) -> push
    296:296:org.tjson.JSONWriter value(boolean) -> value
    306:306:org.tjson.JSONWriter value(double) -> value
    316:316:org.tjson.JSONWriter value(long) -> value
    328:328:org.tjson.JSONWriter value(java.lang.Object) -> value
org.tjson.XML -> org.tjson.XML:
    java.lang.Character AMP -> AMP
    java.lang.Character APOS -> APOS
    java.lang.Character BANG -> BANG
    java.lang.Character EQ -> EQ
    java.lang.Character GT -> GT
    java.lang.Character LT -> LT
    java.lang.Character QUEST -> QUEST
    java.lang.Character QUOT -> QUOT
    java.lang.Character SLASH -> SLASH
    81:104:java.lang.String escape(java.lang.String) -> escape
    114:124:void noSpace(java.lang.String) -> noSpace
    138:291:boolean parse(org.tjson.XMLTokener,org.tjson.JSONObject,java.lang.String) -> parse
    308:351:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    370:375:org.tjson.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    386:386:java.lang.String toString(java.lang.Object) -> toString
    399:506:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
org.tjson.XMLTokener -> org.tjson.XMLTokener:
    java.util.HashMap entity -> entity
    69:80:java.lang.String nextCDATA() -> nextCDATA
    99:108:java.lang.Object nextContent() -> nextContent
    131:144:java.lang.Object nextEntity(char) -> nextEntity
    161:191:java.lang.Object nextMeta() -> nextMeta
    227:270:java.lang.Object nextToken() -> nextToken
    309:328:boolean skipPast(java.lang.String) -> skipPast
org.tweetalib.R -> org.tweetalib.R:
org.tweetalib.R$drawable -> org.tweetalib.R$drawable:
    int ic_launcher -> ic_launcher
org.tweetalib.R$layout -> org.tweetalib.R$layout:
    int main -> main
org.tweetalib.R$string -> org.tweetalib.R$string:
    int hello -> hello
    int app_name -> app_name
org.tweetalib.android.ConnectionStatus -> org.tweetalib.android.ConnectionStatus:
    org.tweetalib.android.ConnectionStatus$Callbacks mCallbacks -> mCallbacks
    42:42:boolean isOnline() -> isOnline
    43:43:java.lang.String getErrorMessageNoConnection() -> getErrorMessageNoConnection
    44:44:void handleError(org.tweetalib.android.TwitterFetchResult) -> handleError
org.tweetalib.android.ConnectionStatus$Callbacks -> org.tweetalib.android.ConnectionStatus$Callbacks:
    boolean isOnline() -> isOnline
    java.lang.String getErrorMessageNoConnection() -> getErrorMessageNoConnection
    void handleError(org.tweetalib.android.TwitterFetchResult) -> handleError
org.tweetalib.android.TwitterConstant -> org.tweetalib.android.TwitterConstant:
org.tweetalib.android.TwitterConstant$BooleanType -> org.tweetalib.android.TwitterConstant$BooleanType:
    org.tweetalib.android.TwitterConstant$BooleanType FRIENDSHIP_EXISTS -> FRIENDSHIP_EXISTS
    org.tweetalib.android.TwitterConstant$BooleanType BLOCK_EXISTS -> BLOCK_EXISTS
    org.tweetalib.android.TwitterConstant$BooleanType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.TwitterConstant$BooleanType[] values() -> values
    1:1:org.tweetalib.android.TwitterConstant$BooleanType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.TwitterConstant$ContentType -> org.tweetalib.android.TwitterConstant$ContentType:
    org.tweetalib.android.TwitterConstant$ContentType AUTH -> AUTH
    org.tweetalib.android.TwitterConstant$ContentType BOOLEAN -> BOOLEAN
    org.tweetalib.android.TwitterConstant$ContentType DIRECT_MESSAGES -> DIRECT_MESSAGES
    org.tweetalib.android.TwitterConstant$ContentType STATUS -> STATUS
    org.tweetalib.android.TwitterConstant$ContentType STATUSES -> STATUSES
    org.tweetalib.android.TwitterConstant$ContentType USER -> USER
    org.tweetalib.android.TwitterConstant$ContentType USERS -> USERS
    org.tweetalib.android.TwitterConstant$ContentType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.TwitterConstant$ContentType[] values() -> values
    1:1:org.tweetalib.android.TwitterConstant$ContentType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.TwitterConstant$DirectMessagesType -> org.tweetalib.android.TwitterConstant$DirectMessagesType:
    org.tweetalib.android.TwitterConstant$DirectMessagesType ALL_MESSAGES -> ALL_MESSAGES
    org.tweetalib.android.TwitterConstant$DirectMessagesType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.TwitterConstant$DirectMessagesType[] values() -> values
    1:1:org.tweetalib.android.TwitterConstant$DirectMessagesType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.TwitterConstant$StatusType -> org.tweetalib.android.TwitterConstant$StatusType:
    org.tweetalib.android.TwitterConstant$StatusType GET_STATUS -> GET_STATUS
    org.tweetalib.android.TwitterConstant$StatusType SET_STATUS -> SET_STATUS
    org.tweetalib.android.TwitterConstant$StatusType SET_RETWEET -> SET_RETWEET
    org.tweetalib.android.TwitterConstant$StatusType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.TwitterConstant$StatusType[] values() -> values
    1:1:org.tweetalib.android.TwitterConstant$StatusType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.TwitterConstant$StatusesType -> org.tweetalib.android.TwitterConstant$StatusesType:
    org.tweetalib.android.TwitterConstant$StatusesType NONE -> NONE
    org.tweetalib.android.TwitterConstant$StatusesType USER_TIMELINE -> USER_TIMELINE
    org.tweetalib.android.TwitterConstant$StatusesType USER_HOME_TIMELINE -> USER_HOME_TIMELINE
    org.tweetalib.android.TwitterConstant$StatusesType USER_MENTIONS -> USER_MENTIONS
    org.tweetalib.android.TwitterConstant$StatusesType USER_LIST_TIMELINE -> USER_LIST_TIMELINE
    org.tweetalib.android.TwitterConstant$StatusesType USER_FAVORITES -> USER_FAVORITES
    org.tweetalib.android.TwitterConstant$StatusesType RETWEETS_OF_ME -> RETWEETS_OF_ME
    org.tweetalib.android.TwitterConstant$StatusesType SCREEN_NAME_SEARCH -> SCREEN_NAME_SEARCH
    org.tweetalib.android.TwitterConstant$StatusesType STATUS_SEARCH -> STATUS_SEARCH
    org.tweetalib.android.TwitterConstant$StatusesType PREVIOUS_CONVERSATION -> PREVIOUS_CONVERSATION
    org.tweetalib.android.TwitterConstant$StatusesType FULL_CONVERSATION -> FULL_CONVERSATION
    org.tweetalib.android.TwitterConstant$StatusesType SET_FAVORITE -> SET_FAVORITE
    org.tweetalib.android.TwitterConstant$StatusesType GLOBAL_FEED -> GLOBAL_FEED
    org.tweetalib.android.TwitterConstant$StatusesType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.TwitterConstant$StatusesType[] values() -> values
    1:1:org.tweetalib.android.TwitterConstant$StatusesType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.TwitterConstant$UsersType -> org.tweetalib.android.TwitterConstant$UsersType:
    org.tweetalib.android.TwitterConstant$UsersType FRIENDS -> FRIENDS
    org.tweetalib.android.TwitterConstant$UsersType FOLLOWERS -> FOLLOWERS
    org.tweetalib.android.TwitterConstant$UsersType RETWEETED_BY -> RETWEETED_BY
    org.tweetalib.android.TwitterConstant$UsersType PEOPLE_SEARCH -> PEOPLE_SEARCH
    org.tweetalib.android.TwitterConstant$UsersType UPDATE_FRIENDSHIP -> UPDATE_FRIENDSHIP
    org.tweetalib.android.TwitterConstant$UsersType CREATE_BLOCK -> CREATE_BLOCK
    org.tweetalib.android.TwitterConstant$UsersType REPORT_SPAM -> REPORT_SPAM
    org.tweetalib.android.TwitterConstant$UsersType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.TwitterConstant$UsersType[] values() -> values
    1:1:org.tweetalib.android.TwitterConstant$UsersType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.TwitterContentHandle -> org.tweetalib.android.TwitterContentHandle:
    long serialVersionUID -> serialVersionUID
    java.lang.String mScreenNameLower -> mScreenNameLower
    java.lang.String mScreenName -> mScreenName
    java.lang.String mIdentifier -> mIdentifier
    39:40:java.lang.String getKey() -> getKey
    45:55:java.lang.String getEnumsAsString() -> getEnumsAsString
    60:64:java.lang.String getTypeAsString() -> getTypeAsString
    67:67:java.lang.String getScreenName() -> getScreenName
    68:68:java.lang.String getIdentifier() -> getIdentifier
org.tweetalib.android.TwitterContentHandleBase -> org.tweetalib.android.TwitterContentHandleBase:
    long serialVersionUID -> serialVersionUID
    org.tweetalib.android.TwitterConstant$ContentType mContentType -> mContentType
    org.tweetalib.android.TwitterConstant$DirectMessagesType mDirectMessagesType -> mDirectMessagesType
    org.tweetalib.android.TwitterConstant$StatusType mStatusType -> mStatusType
    org.tweetalib.android.TwitterConstant$StatusesType mStatusesType -> mStatusesType
    org.tweetalib.android.TwitterConstant$UsersType mUsersType -> mUsersType
    72:85:java.lang.String getTypeAsString() -> getTypeAsString
    88:88:org.tweetalib.android.TwitterConstant$ContentType getContentType() -> getContentType
    89:89:org.tweetalib.android.TwitterConstant$DirectMessagesType getDirectMessagesType() -> getDirectMessagesType
    90:90:org.tweetalib.android.TwitterConstant$StatusType getStatusType() -> getStatusType
    91:91:org.tweetalib.android.TwitterConstant$StatusesType getStatusesType() -> getStatusesType
    92:92:org.tweetalib.android.TwitterConstant$UsersType getUsersType() -> getUsersType
org.tweetalib.android.TwitterFetchBooleans -> org.tweetalib.android.TwitterFetchBooleans:
    org.tweetalib.android.TwitterFetchBooleans$FetchBooleansWorkerCallbacks mCallbacks -> mCallbacks
    java.lang.Integer mFetchBooleanCallbackHandle -> mFetchBooleanCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    41:42:void clearCallbacks() -> clearCallbacks
    91:92:void setWorkerCallbacks(org.tweetalib.android.TwitterFetchBooleans$FetchBooleansWorkerCallbacks) -> setWorkerCallbacks
    103:104:org.tweetalib.android.TwitterFetchBooleans$FinishedCallback getFetchBooleanCallback(java.lang.Integer) -> getFetchBooleanCallback
    111:114:void removeFetchBooleanCallback(org.tweetalib.android.TwitterFetchBooleans$FinishedCallback) -> removeFetchBooleanCallback
    120:120:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    128:129:void getFriendshipExists(java.lang.String,java.lang.String,org.tweetalib.android.TwitterFetchBooleans$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> getFriendshipExists
    136:146:void triggerFetchBooleanTask(org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskInput,org.tweetalib.android.TwitterFetchBooleans$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> triggerFetchBooleanTask
    153:154:void cancel(org.tweetalib.android.TwitterFetchBooleans$FinishedCallback) -> cancel
org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTask -> org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTask:
    org.tweetalib.android.TwitterFetchBooleans this$0 -> this$0
    int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$BooleanType -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$BooleanType
    204:240:org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskOutput doInBackground(org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskInput[]) -> doInBackground
    246:253:void onPostExecute(org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    199:199:int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$BooleanType() -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$BooleanType
org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskInput -> org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.ConnectionStatus mConnectionStatus -> mConnectionStatus
    org.tweetalib.android.TwitterConstant$BooleanType mBooleanType -> mBooleanType
    java.lang.String mUserScreenName -> mUserScreenName
    java.lang.String mUserScreenNameToCheck -> mUserScreenNameToCheck
    org.tweetalib.android.TwitterFetchBooleans this$0 -> this$0
org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskOutput -> org.tweetalib.android.TwitterFetchBooleans$FetchBooleanTaskOutput:
    org.tweetalib.android.TwitterFetchResult mResult -> mResult
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    java.util.ArrayList mReturnValues -> mReturnValues
    org.tweetalib.android.TwitterFetchBooleans this$0 -> this$0
org.tweetalib.android.TwitterFetchBooleans$FetchBooleansWorkerCallbacks -> org.tweetalib.android.TwitterFetchBooleans$FetchBooleansWorkerCallbacks:
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
org.tweetalib.android.TwitterFetchBooleans$FinishedCallback -> org.tweetalib.android.TwitterFetchBooleans$FinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterFetchBooleans this$0 -> this$0
    73:74:void setHandle(int) -> setHandle
    76:76:int access$0(org.tweetalib.android.TwitterFetchBooleans$FinishedCallback) -> access$0
org.tweetalib.android.TwitterFetchBooleans$FinishedCallbackInterface -> org.tweetalib.android.TwitterFetchBooleans$FinishedCallbackInterface:
    void finished(org.tweetalib.android.TwitterFetchResult,java.util.ArrayList) -> finished
org.tweetalib.android.TwitterFetchLists -> org.tweetalib.android.TwitterFetchLists:
    org.tweetalib.android.TwitterFetchLists$FetchListsWorkerCallbacks mCallbacks -> mCallbacks
    java.util.HashMap mListsHashMap -> mListsHashMap
    java.lang.Integer mFetchListsCallbackHandle -> mFetchListsCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    boolean $assertionsDisabled -> $assertionsDisabled
    41:42:void clearCallbacks() -> clearCallbacks
    93:94:void setWorkerCallbacks(org.tweetalib.android.TwitterFetchLists$FetchListsWorkerCallbacks) -> setWorkerCallbacks
    100:101:org.tweetalib.android.TwitterFetchLists$FinishedCallback getFetchStatusesCallback(java.lang.Integer) -> getFetchStatusesCallback
    108:111:void removeFetchStatusesCallback(org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> removeFetchStatusesCallback
    117:117:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    125:131:org.tweetalib.android.model.TwitterLists getLists(java.lang.Integer,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> getLists
    136:140:org.tweetalib.android.model.TwitterLists getLists(java.lang.String,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> getLists
    149:155:void trigger(java.lang.Integer,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> trigger
    159:165:void trigger(java.lang.String,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> trigger
    172:173:void cancel(org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> cancel
org.tweetalib.android.TwitterFetchLists$FetchListsTask -> org.tweetalib.android.TwitterFetchLists$FetchListsTask:
    org.tweetalib.android.TwitterFetchLists this$0 -> this$0
    219:236:org.tweetalib.android.TwitterFetchLists$FetchListsTaskOutput doInBackground(org.tweetalib.android.TwitterFetchLists$FetchListsTaskInput[]) -> doInBackground
    242:249:void onPostExecute(org.tweetalib.android.TwitterFetchLists$FetchListsTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.tweetalib.android.TwitterFetchLists$FetchListsTaskInput -> org.tweetalib.android.TwitterFetchLists$FetchListsTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    java.lang.Integer mUserId -> mUserId
    java.lang.String mScreenName -> mScreenName
    org.tweetalib.android.TwitterFetchLists this$0 -> this$0
org.tweetalib.android.TwitterFetchLists$FetchListsTaskOutput -> org.tweetalib.android.TwitterFetchLists$FetchListsTaskOutput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.model.TwitterLists mLists -> mLists
    org.tweetalib.android.TwitterFetchLists this$0 -> this$0
org.tweetalib.android.TwitterFetchLists$FetchListsWorkerCallbacks -> org.tweetalib.android.TwitterFetchLists$FetchListsWorkerCallbacks:
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
org.tweetalib.android.TwitterFetchLists$FinishedCallback -> org.tweetalib.android.TwitterFetchLists$FinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterFetchLists this$0 -> this$0
    73:74:void setHandle(int) -> setHandle
    76:76:int access$0(org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> access$0
org.tweetalib.android.TwitterFetchLists$FinishedCallbackInterface -> org.tweetalib.android.TwitterFetchLists$FinishedCallbackInterface:
    void finished(boolean,org.tweetalib.android.model.TwitterLists) -> finished
org.tweetalib.android.TwitterFetchResult -> org.tweetalib.android.TwitterFetchResult:
    boolean mSuccessful -> mSuccessful
    java.lang.String mErrorMessage -> mErrorMessage
    39:39:boolean isSuccessful() -> isSuccessful
    40:40:java.lang.String getErrorMessage() -> getErrorMessage
org.tweetalib.android.TwitterFetchStatus -> org.tweetalib.android.TwitterFetchStatus:
    org.tweetalib.android.TwitterFetchStatus$FetchStatusWorkerCallbacks mCallbacks -> mCallbacks
    java.lang.Integer mFetchStatusCallbackHandle -> mFetchStatusCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    44:45:void clearCallbacks() -> clearCallbacks
    96:97:void setWorkerCallbacks(org.tweetalib.android.TwitterFetchStatus$FetchStatusWorkerCallbacks) -> setWorkerCallbacks
    108:109:org.tweetalib.android.TwitterFetchStatus$FinishedCallback getFetchStatusCallback(java.lang.Integer) -> getFetchStatusCallback
    116:119:void removeFetchStatusCallback(org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> removeFetchStatusCallback
    125:125:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    129:129:org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
    137:138:org.tweetalib.android.model.TwitterStatus getStatus(long,org.tweetalib.android.TwitterFetchStatus$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> getStatus
    146:147:void setStatus(org.tweetalib.android.model.TwitterStatusUpdate,org.tweetalib.android.TwitterFetchStatus$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> setStatus
    153:154:void setRetweet(long,org.tweetalib.android.TwitterFetchStatus$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> setRetweet
    161:171:void triggerFetchStatusTask(org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskInput,org.tweetalib.android.TwitterFetchStatus$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> triggerFetchStatusTask
    178:179:void cancel(org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> cancel
org.tweetalib.android.TwitterFetchStatus$FetchStatusTask -> org.tweetalib.android.TwitterFetchStatus$FetchStatusTask:
    org.tweetalib.android.TwitterFetchStatus this$0 -> this$0
    int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusType -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusType
    233:331:org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskOutput doInBackground(org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskInput[]) -> doInBackground
    337:344:void onPostExecute(org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    228:228:int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusType() -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusType
org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskInput -> org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.TwitterConstant$StatusType mStatusType -> mStatusType
    org.tweetalib.android.model.TwitterStatusUpdate mStatusUpdate -> mStatusUpdate
    java.lang.Long mExistingStatusId -> mExistingStatusId
    org.tweetalib.android.ConnectionStatus mConnectionStatus -> mConnectionStatus
    org.tweetalib.android.TwitterFetchStatus this$0 -> this$0
org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskOutput -> org.tweetalib.android.TwitterFetchStatus$FetchStatusTaskOutput:
    org.tweetalib.android.TwitterFetchResult mResult -> mResult
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.model.TwitterStatus mStatus -> mStatus
    org.tweetalib.android.TwitterFetchStatus this$0 -> this$0
org.tweetalib.android.TwitterFetchStatus$FetchStatusWorkerCallbacks -> org.tweetalib.android.TwitterFetchStatus$FetchStatusWorkerCallbacks:
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
    void addUser(twitter4j.User) -> addUser
org.tweetalib.android.TwitterFetchStatus$FinishedCallback -> org.tweetalib.android.TwitterFetchStatus$FinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterFetchStatus this$0 -> this$0
    78:79:void setHandle(int) -> setHandle
    81:81:int access$0(org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> access$0
org.tweetalib.android.TwitterFetchStatus$FinishedCallbackInterface -> org.tweetalib.android.TwitterFetchStatus$FinishedCallbackInterface:
    void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatus) -> finished
org.tweetalib.android.TwitterFetchUser -> org.tweetalib.android.TwitterFetchUser:
    org.tweetalib.android.TwitterFetchUser$FetchUserWorkerCallbacks mCallbacks -> mCallbacks
    java.util.HashMap mUserIdHashMap -> mUserIdHashMap
    java.util.HashMap mUserScreenNameHashMap -> mUserScreenNameHashMap
    java.lang.Integer mFetchUserCallbackHandle -> mFetchUserCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    boolean $assertionsDisabled -> $assertionsDisabled
    45:46:void clearCallbacks() -> clearCallbacks
    98:99:void setWorkerCallbacks(org.tweetalib.android.TwitterFetchUser$FetchUserWorkerCallbacks) -> setWorkerCallbacks
    105:106:org.tweetalib.android.TwitterFetchUser$FinishedCallback getFetchStatusesCallback(java.lang.Integer) -> getFetchStatusesCallback
    113:116:void removeFetchStatusesCallback(org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> removeFetchStatusesCallback
    122:122:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    126:126:org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
    133:139:void setUser(org.tweetalib.android.model.TwitterUser) -> setUser
    142:150:void setUser(twitter4j.User,boolean) -> setUser
    153:161:void setUser(org.appdotnet4j.model.AdnUser,boolean) -> setUser
    168:174:org.tweetalib.android.model.TwitterUser getUser(java.lang.Long,org.tweetalib.android.TwitterFetchUser$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> getUser
    179:185:org.tweetalib.android.model.TwitterUser getUser(java.lang.String,org.tweetalib.android.TwitterFetchUser$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> getUser
    193:203:void verifyUser(org.tweetalib.android.TwitterFetchUser$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> verifyUser
    210:223:void trigger(java.lang.Long,org.tweetalib.android.TwitterFetchUser$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> trigger
    227:240:void trigger(java.lang.String,org.tweetalib.android.TwitterFetchUser$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> trigger
    247:248:void cancel(org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> cancel
org.tweetalib.android.TwitterFetchUser$FetchUserTask -> org.tweetalib.android.TwitterFetchUser$FetchUserTask:
    org.tweetalib.android.TwitterFetchUser this$0 -> this$0
    307:342:org.tweetalib.android.TwitterFetchUser$FetchUserTaskOutput doInBackground(org.tweetalib.android.TwitterFetchUser$FetchUserTaskInput[]) -> doInBackground
    348:355:void onPostExecute(org.tweetalib.android.TwitterFetchUser$FetchUserTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.tweetalib.android.TwitterFetchUser$FetchUserTaskInput -> org.tweetalib.android.TwitterFetchUser$FetchUserTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    java.lang.Boolean mVerifyCredentials -> mVerifyCredentials
    java.lang.Long mUserId -> mUserId
    java.lang.String mScreenName -> mScreenName
    org.tweetalib.android.ConnectionStatus mConnectionStatus -> mConnectionStatus
    org.tweetalib.android.TwitterFetchUser this$0 -> this$0
org.tweetalib.android.TwitterFetchUser$FetchUserTaskOutput -> org.tweetalib.android.TwitterFetchUser$FetchUserTaskOutput:
    org.tweetalib.android.TwitterFetchResult mFetchResult -> mFetchResult
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.model.TwitterUser mUser -> mUser
    org.tweetalib.android.TwitterFetchUser this$0 -> this$0
org.tweetalib.android.TwitterFetchUser$FetchUserWorkerCallbacks -> org.tweetalib.android.TwitterFetchUser$FetchUserWorkerCallbacks:
    org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
org.tweetalib.android.TwitterFetchUser$FinishedCallback -> org.tweetalib.android.TwitterFetchUser$FinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterFetchUser this$0 -> this$0
    78:79:void setHandle(int) -> setHandle
    81:81:int access$0(org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> access$0
org.tweetalib.android.TwitterFetchUser$FinishedCallbackInterface -> org.tweetalib.android.TwitterFetchUser$FinishedCallbackInterface:
    void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUser) -> finished
org.tweetalib.android.TwitterFetchUsers -> org.tweetalib.android.TwitterFetchUsers:
    org.tweetalib.android.TwitterFetchUsers$FetchUsersWorkerCallbacks mWorkerCallbacks -> mWorkerCallbacks
    java.util.HashMap mIdsHashMap -> mIdsHashMap
    java.lang.Integer mFetchUsersCallbackHandle -> mFetchUsersCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    int _mFriendshipCounter -> _mFriendshipCounter
    boolean $assertionsDisabled -> $assertionsDisabled
    47:48:void clearCallbacks() -> clearCallbacks
    101:102:void setWorkerCallbacks(org.tweetalib.android.TwitterFetchUsers$FetchUsersWorkerCallbacks) -> setWorkerCallbacks
    108:109:org.tweetalib.android.TwitterFetchUsers$FinishedCallback getFetchUsersCallback(java.lang.Integer) -> getFetchUsersCallback
    116:119:void removeFetchUsersCallback(org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> removeFetchUsersCallback
    125:125:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    132:134:org.tweetalib.android.model.TwitterIds setUsers(org.tweetalib.android.TwitterContentHandle,twitter4j.IDs) -> setUsers
    142:151:org.tweetalib.android.model.TwitterIds getUserIds(org.tweetalib.android.TwitterContentHandle) -> getUserIds
    159:173:org.tweetalib.android.model.TwitterUsers getUsers(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging) -> getUsers
    180:187:org.tweetalib.android.model.TwitterUsers getUsers(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> getUsers
    195:209:void trigger(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> trigger
    216:217:void cancel(org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> cancel
    223:224:void updateFriendshipUser(java.lang.String,org.tweetalib.android.model.TwitterUser,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> updateFriendshipUser
    226:231:void updateFriendshipUsers(java.lang.String,org.tweetalib.android.model.TwitterUsers,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> updateFriendshipUsers
    237:240:void updateFriendshipScreenName(java.lang.String,java.lang.String,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> updateFriendshipScreenName
    244:258:void updateFriendshipScreenNames(java.lang.String,java.util.ArrayList,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> updateFriendshipScreenNames
    264:267:void updateFriendshipUserId(long,java.lang.Long,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> updateFriendshipUserId
    269:283:void updateFriendshipUserIds(long,java.util.ArrayList,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> updateFriendshipUserIds
    289:292:void createBlockOrReportSpam(org.tweetalib.android.TwitterConstant$UsersType,long,java.lang.Long,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> createBlockOrReportSpam
    295:309:void createBlockOrReportSpam(org.tweetalib.android.TwitterConstant$UsersType,long,java.util.ArrayList,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> createBlockOrReportSpam
    315:316:void reportSpam(long,java.lang.Long,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> reportSpam
    318:319:void reportSpam(long,java.util.ArrayList,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> reportSpam
    325:326:void createBlock(long,java.lang.Long,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> createBlock
    328:329:void createBlock(long,java.util.ArrayList,org.tweetalib.android.TwitterFetchUsers$FinishedCallback,org.tweetalib.android.ConnectionStatus) -> createBlock
    38:38:org.tweetalib.android.TwitterFetchUsers$FetchUsersWorkerCallbacks access$0(org.tweetalib.android.TwitterFetchUsers) -> access$0
org.tweetalib.android.TwitterFetchUsers$FetchUsersTask -> org.tweetalib.android.TwitterFetchUsers$FetchUsersTask:
    org.tweetalib.android.TwitterFetchUsers this$0 -> this$0
    int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$UsersType -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$UsersType
    397:558:org.tweetalib.android.TwitterFetchUsers$FetchUsersTaskOutput doInBackground(org.tweetalib.android.TwitterFetchUsers$FetchUsersTaskInput[]) -> doInBackground
    564:571:void onPostExecute(org.tweetalib.android.TwitterFetchUsers$FetchUsersTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    392:392:int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$UsersType() -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$UsersType
org.tweetalib.android.TwitterFetchUsers$FetchUsersTaskInput -> org.tweetalib.android.TwitterFetchUsers$FetchUsersTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.TwitterContentHandle mContentHandle -> mContentHandle
    org.tweetalib.android.TwitterPaging mPaging -> mPaging
    org.tweetalib.android.ConnectionStatus mConnectionStatus -> mConnectionStatus
    java.util.ArrayList mScreenNames -> mScreenNames
    java.util.ArrayList mUserIds -> mUserIds
    boolean mCreateFriendship -> mCreateFriendship
    org.tweetalib.android.TwitterFetchUsers this$0 -> this$0
org.tweetalib.android.TwitterFetchUsers$FetchUsersTaskOutput -> org.tweetalib.android.TwitterFetchUsers$FetchUsersTaskOutput:
    org.tweetalib.android.TwitterFetchResult mResult -> mResult
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.model.TwitterUsers mUsers -> mUsers
    org.tweetalib.android.TwitterFetchUsers this$0 -> this$0
org.tweetalib.android.TwitterFetchUsers$FetchUsersWorkerCallbacks -> org.tweetalib.android.TwitterFetchUsers$FetchUsersWorkerCallbacks:
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    void addUser(twitter4j.User) -> addUser
    org.tweetalib.android.model.TwitterUser getUser(java.lang.Long) -> getUser
org.tweetalib.android.TwitterFetchUsers$FinishedCallback -> org.tweetalib.android.TwitterFetchUsers$FinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterFetchUsers this$0 -> this$0
    81:82:void setHandle(int) -> setHandle
    84:84:int access$0(org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> access$0
org.tweetalib.android.TwitterFetchUsers$FinishedCallbackInterface -> org.tweetalib.android.TwitterFetchUsers$FinishedCallbackInterface:
    void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterUsers) -> finished
org.tweetalib.android.TwitterManager -> org.tweetalib.android.TwitterManager:
    org.tweetalib.android.TwitterManager mInstance -> mInstance
    org.socialnetlib.android.SocialNetApi mApi -> mApi
    java.util.HashMap mUserIdentifierHashMap -> mUserIdentifierHashMap
    int[] $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type -> $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type
    48:51:void initModule(org.socialnetlib.android.SocialNetConstant$Type,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.tweetalib.android.ConnectionStatus$Callbacks) -> initModule
    52:52:void deinitModule() -> deinitModule
    53:53:org.tweetalib.android.TwitterManager get() -> get
    84:85:void setOAuthTokenWithSecret(java.lang.String,java.lang.String,boolean) -> setOAuthTokenWithSecret
    91:92:void setConnectionStatus(org.tweetalib.android.ConnectionStatus$Callbacks) -> setConnectionStatus
    98:98:org.tweetalib.android.ConnectionStatus getConnectionStatus() -> getConnectionStatus
    107:109:org.tweetalib.android.TwitterContentHandle getContentHandle(org.tweetalib.android.TwitterContentHandleBase,java.lang.String,java.lang.String) -> getContentHandle
    124:124:java.lang.String getProfileImageUrl(java.lang.String,org.tweetalib.android.TwitterManager$ProfileImageSize) -> getProfileImageUrl
    131:131:org.tweetalib.android.model.TwitterStatuses getContentFeed(org.tweetalib.android.TwitterContentHandle) -> getContentFeed
    137:137:org.tweetalib.android.TwitterFetchLists getFetchListsInstance() -> getFetchListsInstance
    138:138:org.tweetalib.android.TwitterFetchStatus getFetchStatusInstance() -> getFetchStatusInstance
    139:139:org.tweetalib.android.TwitterFetchBooleans getFetchBooleansInstance() -> getFetchBooleansInstance
    140:140:org.tweetalib.android.TwitterFetchUser getFetchUserInstance() -> getFetchUserInstance
    141:141:org.tweetalib.android.TwitterFetchUsers getFetchUsersInstance() -> getFetchUsersInstance
    142:142:org.tweetalib.android.TwitterModifyStatuses getSetStatusesInstance() -> getSetStatusesInstance
    143:143:org.tweetalib.android.TwitterSignIn getSignInInstance() -> getSignInInstance
    152:153:void getAuthUrl(org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback) -> getAuthUrl
    155:156:void getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String,org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback) -> getOAuthAccessToken
    162:162:org.tweetalib.android.model.TwitterUser getUser(java.lang.Long) -> getUser
    165:165:org.tweetalib.android.model.TwitterUser getUser(java.lang.String) -> getUser
    168:169:org.tweetalib.android.model.TwitterUser getUser(java.lang.Long,org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> getUser
    172:173:org.tweetalib.android.model.TwitterUser getUser(java.lang.String,org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> getUser
    177:178:void verifyUser(org.tweetalib.android.TwitterFetchUser$FinishedCallback) -> verifyUser
    184:184:org.tweetalib.android.model.TwitterUsers getUsers(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging) -> getUsers
    187:187:org.tweetalib.android.model.TwitterUsers getUsers(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> getUsers
    194:195:org.tweetalib.android.model.TwitterDirectMessages getDirectMessages(org.tweetalib.android.TwitterContentHandle) -> getDirectMessages
    198:199:org.tweetalib.android.model.TwitterDirectMessages getDirectMessages(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback) -> getDirectMessages
    203:204:void sendDirectMessage(long,java.lang.String,java.lang.String,org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback) -> sendDirectMessage
    210:211:void updateFriendship(java.lang.String,org.tweetalib.android.model.TwitterUser,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendship
    213:214:void updateFriendship(java.lang.String,org.tweetalib.android.model.TwitterUsers,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendship
    216:217:void updateFriendshipScreenName(java.lang.String,java.lang.String,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipScreenName
    219:220:void updateFriendshipScreenNames(java.lang.String,java.util.ArrayList,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipScreenNames
    222:223:void updateFriendshipUserId(long,long,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipUserId
    225:226:void updateFriendshipUserIds(long,java.util.ArrayList,boolean,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> updateFriendshipUserIds
    232:233:void createBlock(long,java.lang.Long,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> createBlock
    235:236:void createBlock(long,java.util.ArrayList,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> createBlock
    242:243:void reportSpam(long,java.lang.Long,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> reportSpam
    245:246:void reportSpam(long,java.util.ArrayList,org.tweetalib.android.TwitterFetchUsers$FinishedCallback) -> reportSpam
    252:253:org.tweetalib.android.model.TwitterLists getLists(int) -> getLists
    256:257:org.tweetalib.android.model.TwitterLists getLists(int,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> getLists
    260:261:org.tweetalib.android.model.TwitterLists getLists(java.lang.String) -> getLists
    264:265:org.tweetalib.android.model.TwitterLists getLists(java.lang.String,org.tweetalib.android.TwitterFetchLists$FinishedCallback) -> getLists
    272:272:org.tweetalib.android.model.TwitterStatus getStatus(long,org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> getStatus
    279:280:void setStatus(org.tweetalib.android.model.TwitterStatusUpdate,org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> setStatus
    286:287:void setRetweet(long,org.tweetalib.android.TwitterFetchStatus$FinishedCallback) -> setRetweet
    293:294:void setFavorite(org.tweetalib.android.model.TwitterStatus,boolean,org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> setFavorite
    296:297:void setFavorite(org.tweetalib.android.model.TwitterStatuses,boolean,org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> setFavorite
    303:304:void triggerFetchStatuses(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback,int) -> triggerFetchStatuses
    310:311:void cancelFetchStatuses(org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback) -> cancelFetchStatuses
    317:318:void getFriendshipExists(java.lang.String,java.lang.String,org.tweetalib.android.TwitterFetchBooleans$FinishedCallback) -> getFriendshipExists
    324:324:boolean isAuthenticated() -> isAuthenticated
    331:331:boolean hasValidTwitterInstance() -> hasValidTwitterInstance
    338:342:java.lang.String generateTwitterVerifyCredentialsAuthorizationHeader() -> generateTwitterVerifyCredentialsAuthorizationHeader
    352:355:void addUserIdentifier(java.lang.String,long) -> addUserIdentifier
    358:361:java.lang.Long getUserIdFromScreenName(java.lang.String) -> getUserIdFromScreenName
    42:42:int[] $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type() -> $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type
org.tweetalib.android.TwitterManager$ProfileImageSize -> org.tweetalib.android.TwitterManager$ProfileImageSize:
    org.tweetalib.android.TwitterManager$ProfileImageSize MINI -> MINI
    org.tweetalib.android.TwitterManager$ProfileImageSize NORMAL -> NORMAL
    org.tweetalib.android.TwitterManager$ProfileImageSize BIGGER -> BIGGER
    org.tweetalib.android.TwitterManager$ProfileImageSize ORIGINAL -> ORIGINAL
    org.tweetalib.android.TwitterManager$ProfileImageSize[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.TwitterManager$ProfileImageSize[] values() -> values
    1:1:org.tweetalib.android.TwitterManager$ProfileImageSize valueOf(java.lang.String) -> valueOf
org.tweetalib.android.TwitterModifyStatuses -> org.tweetalib.android.TwitterModifyStatuses:
    org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesWorkerCallbacks mCallbacks -> mCallbacks
    java.lang.Integer mModifyStatusesCallbackHandle -> mModifyStatusesCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    41:42:void clearCallbacks() -> clearCallbacks
    91:92:void setWorkerCallbacks(org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesWorkerCallbacks) -> setWorkerCallbacks
    103:104:org.tweetalib.android.TwitterModifyStatuses$FinishedCallback getModifyStatusesCallback(java.lang.Integer) -> getModifyStatusesCallback
    111:114:void removeModifyStatusesCallback(org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> removeModifyStatusesCallback
    120:120:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    126:127:void cancel(org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> cancel
    135:136:void setFavorite(org.tweetalib.android.model.TwitterStatus,boolean,org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> setFavorite
    143:147:void setFavorite(org.tweetalib.android.model.TwitterStatuses,boolean,org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> setFavorite
org.tweetalib.android.TwitterModifyStatuses$FinishedCallback -> org.tweetalib.android.TwitterModifyStatuses$FinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterModifyStatuses this$0 -> this$0
    73:74:void setHandle(int) -> setHandle
    76:76:int access$0(org.tweetalib.android.TwitterModifyStatuses$FinishedCallback) -> access$0
org.tweetalib.android.TwitterModifyStatuses$FinishedCallbackInterface -> org.tweetalib.android.TwitterModifyStatuses$FinishedCallbackInterface:
    void finished(boolean,org.tweetalib.android.model.TwitterStatuses,java.lang.Integer) -> finished
org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTask -> org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTask:
    org.tweetalib.android.TwitterModifyStatuses this$0 -> this$0
    int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType
    192:241:org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTaskOutput doInBackground(org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTaskInput[]) -> doInBackground
    247:254:void onPostExecute(org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    187:187:int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType() -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType
org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTaskInput -> org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.TwitterConstant$StatusesType mStatusesType -> mStatusesType
    org.tweetalib.android.model.TwitterStatuses mStatuses -> mStatuses
    java.lang.Integer mValue -> mValue
    org.tweetalib.android.TwitterModifyStatuses this$0 -> this$0
org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTaskOutput -> org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesTaskOutput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.model.TwitterStatuses mFeed -> mFeed
    java.lang.Integer mValue -> mValue
    org.tweetalib.android.TwitterModifyStatuses this$0 -> this$0
org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesWorkerCallbacks -> org.tweetalib.android.TwitterModifyStatuses$ModifyStatusesWorkerCallbacks:
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
org.tweetalib.android.TwitterPaging -> org.tweetalib.android.TwitterPaging:
    int DEFAULT_STATUS_COUNT -> DEFAULT_STATUS_COUNT
    java.lang.Integer mPage -> mPage
    java.lang.Integer mCount -> mCount
    java.lang.Long mMaxId -> mMaxId
    java.lang.Long mSinceId -> mSinceId
    32:32:org.tweetalib.android.TwitterPaging createGetOlder(long) -> createGetOlder
    36:36:org.tweetalib.android.TwitterPaging createGetNewer(long) -> createGetNewer
    40:40:org.tweetalib.android.TwitterPaging createGetMostRecent() -> createGetMostRecent
    43:43:org.tweetalib.android.TwitterPaging createGetMostRecent(int) -> createGetMostRecent
    79:110:twitter4j.Paging getT4JPaging() -> getT4JPaging
    148:148:org.appdotnet4j.model.AdnPaging getAdnPaging() -> getAdnPaging
    151:151:java.lang.Integer getPage() -> getPage
    152:152:java.lang.Integer getCount() -> getCount
    153:153:java.lang.Long getMaxId() -> getMaxId
    154:154:java.lang.Long getSinceId() -> getSinceId
org.tweetalib.android.TwitterSignIn -> org.tweetalib.android.TwitterSignIn:
    org.tweetalib.android.TwitterSignIn$SignInWorkerCallbacks mCallbacks -> mCallbacks
    java.lang.Integer mGetAuthUrlCallbackHandle -> mGetAuthUrlCallbackHandle
    java.util.HashMap mGetAuthUrlCallbackMap -> mGetAuthUrlCallbackMap
    java.lang.Integer mGetOAuthAccessTokenCallbackHandle -> mGetOAuthAccessTokenCallbackHandle
    java.util.HashMap mGetOAuthAccessTokenCallbackMap -> mGetOAuthAccessTokenCallbackMap
    boolean $assertionsDisabled -> $assertionsDisabled
    46:48:void clearCallbacks() -> clearCallbacks
    66:67:void setWorkerCallbacks(org.tweetalib.android.TwitterSignIn$SignInWorkerCallbacks) -> setWorkerCallbacks
    139:140:org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback getAuthUrlCallback(java.lang.Integer) -> getAuthUrlCallback
    147:150:void removeAuthUrlCallback(org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback) -> removeAuthUrlCallback
    156:157:org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback getOAuthAccessTokenCallback(java.lang.Integer) -> getOAuthAccessTokenCallback
    164:167:void removeGetOAuthAccessTokenCallback(org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback) -> removeGetOAuthAccessTokenCallback
    175:182:void getAuthUrl(org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback) -> getAuthUrl
    190:197:void getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String,org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback) -> getOAuthAccessToken
    36:36:org.tweetalib.android.TwitterSignIn$SignInWorkerCallbacks access$0(org.tweetalib.android.TwitterSignIn) -> access$0
org.tweetalib.android.TwitterSignIn$FetchAuthUrlTask -> org.tweetalib.android.TwitterSignIn$FetchAuthUrlTask:
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
    237:255:org.tweetalib.android.TwitterSignIn$FetchAuthUrlTaskOutput doInBackground(org.tweetalib.android.TwitterSignIn$FetchAuthUrlTaskInput[]) -> doInBackground
    261:268:void onPostExecute(org.tweetalib.android.TwitterSignIn$FetchAuthUrlTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.tweetalib.android.TwitterSignIn$FetchAuthUrlTaskInput -> org.tweetalib.android.TwitterSignIn$FetchAuthUrlTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
org.tweetalib.android.TwitterSignIn$FetchAuthUrlTaskOutput -> org.tweetalib.android.TwitterSignIn$FetchAuthUrlTaskOutput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    twitter4j.auth.RequestToken mRequestToken -> mRequestToken
    java.lang.String mUrl -> mUrl
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTask -> org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTask:
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
    int[] $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type -> $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type
    317:350:org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTaskOutput doInBackground(org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTaskInput[]) -> doInBackground
    356:367:void onPostExecute(org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    312:312:int[] $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type() -> $SWITCH_TABLE$org$socialnetlib$android$SocialNetConstant$Type
org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTaskInput -> org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTaskInput:
    twitter4j.auth.RequestToken mRequestToken -> mRequestToken
    java.lang.String mOAuthVerifier -> mOAuthVerifier
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTaskOutput -> org.tweetalib.android.TwitterSignIn$FetchOAuthAccessTokenTaskOutput:
    org.tweetalib.android.model.TwitterUser mUser -> mUser
    java.lang.String mAccessToken -> mAccessToken
    java.lang.String mAccessTokenSecret -> mAccessTokenSecret
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback -> org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
    90:91:void setHandle(int) -> setHandle
    93:93:int access$0(org.tweetalib.android.TwitterSignIn$GetAuthUrlCallback) -> access$0
org.tweetalib.android.TwitterSignIn$GetAuthUrlCallbackInterface -> org.tweetalib.android.TwitterSignIn$GetAuthUrlCallbackInterface:
    void finished(boolean,java.lang.String,twitter4j.auth.RequestToken) -> finished
org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback -> org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    org.tweetalib.android.TwitterSignIn this$0 -> this$0
    117:118:void setHandle(int) -> setHandle
    120:120:int access$0(org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallback) -> access$0
org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallbackInterface -> org.tweetalib.android.TwitterSignIn$GetOAuthAccessTokenCallbackInterface:
    void finished(boolean,org.tweetalib.android.model.TwitterUser,java.lang.String,java.lang.String) -> finished
org.tweetalib.android.TwitterSignIn$SignInWorkerCallbacks -> org.tweetalib.android.TwitterSignIn$SignInWorkerCallbacks:
    org.socialnetlib.android.SocialNetConstant$Type getType() -> getType
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    org.tweetalib.android.model.TwitterUser verifyCredentials(java.lang.String,java.lang.String) -> verifyCredentials
org.tweetalib.android.TwitterUtil -> org.tweetalib.android.TwitterUtil:
    com.twitter.AutolinkEx mAutolinkEx -> mAutolinkEx
    com.twitter.Autolink mAutolink -> mAutolink
    43:56:void initCommon() -> initCommon
    62:62:java.lang.String stripMarkup(java.lang.String) -> stripMarkup
    69:70:java.lang.String getTextMarkup(java.lang.String) -> getTextMarkup
    77:77:java.lang.String getStatusMarkup(twitter4j.Status,org.tweetalib.android.model.TwitterMediaEntity) -> getStatusMarkup
    84:84:java.lang.String getStatusMarkup(twitter4j.Status) -> getStatusMarkup
    91:91:java.lang.String getStatusMarkup(org.appdotnet4j.model.AdnPost,org.tweetalib.android.model.TwitterMediaEntity) -> getStatusMarkup
    99:102:java.lang.String getStatusMarkup(java.lang.String,org.tweetalib.android.model.TwitterMediaEntity,twitter4j.MediaEntity[],twitter4j.URLEntity[]) -> getStatusMarkup
    109:126:java.lang.String[] getUserMentions(twitter4j.UserMentionEntity[]) -> getUserMentions
    183:193:twitter4j.Query updateQueryWithPaging(twitter4j.Query,twitter4j.Paging) -> updateQueryWithPaging
    201:208:java.util.Date iso6801StringToDate(java.lang.String) -> iso6801StringToDate
org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback -> org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    33:34:void setHandle(int) -> setHandle
    37:37:int getHandle() -> getHandle
org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallbackInterface -> org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallbackInterface:
    void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterDirectMessages) -> finished
org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback -> org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback:
    int kInvalidHandle -> kInvalidHandle
    int mHandle -> mHandle
    33:34:void setHandle(int) -> setHandle
    37:37:int getHandle() -> getHandle
org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallbackInterface -> org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallbackInterface:
    void finished(org.tweetalib.android.TwitterFetchResult,org.tweetalib.android.model.TwitterStatuses) -> finished
org.tweetalib.android.fetch.TwitterFetchDirectMessages -> org.tweetalib.android.fetch.TwitterFetchDirectMessages:
    org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchMessagesWorkerCallbacks mCallbacks -> mCallbacks
    java.util.HashMap mMessagesHashMap -> mMessagesHashMap
    java.lang.Integer mFetchMessagesCallbackHandle -> mFetchMessagesCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    50:51:void clearCallbacks() -> clearCallbacks
    75:76:void setWorkerCallbacks(org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchMessagesWorkerCallbacks) -> setWorkerCallbacks
    82:83:org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback getFetchStatusesCallback(java.lang.Integer) -> getFetchStatusesCallback
    90:93:void removeFetchStatusesCallback(org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback) -> removeFetchStatusesCallback
    99:99:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    107:119:org.tweetalib.android.model.TwitterDirectMessages getDirectMessages(org.tweetalib.android.TwitterContentHandle) -> getDirectMessages
    127:143:org.tweetalib.android.model.TwitterDirectMessages getDirectMessages(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback,org.tweetalib.android.ConnectionStatus) -> getDirectMessages
    151:161:void sendDirectMessage(long,java.lang.String,java.lang.String,org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback,org.tweetalib.android.ConnectionStatus) -> sendDirectMessage
    168:169:void cancel(org.tweetalib.android.callback.TwitterFetchDirectMessagesFinishedCallback) -> cancel
    41:41:org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchMessagesWorkerCallbacks access$0(org.tweetalib.android.fetch.TwitterFetchDirectMessages) -> access$0
org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchDirectMessagesTaskInput -> org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchDirectMessagesTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    java.lang.Long mUserId -> mUserId
    java.lang.String mRecipientScreenName -> mRecipientScreenName
    java.lang.String mStatusText -> mStatusText
    org.tweetalib.android.TwitterContentHandle mContentHandle -> mContentHandle
    org.tweetalib.android.TwitterPaging mPaging -> mPaging
    org.tweetalib.android.ConnectionStatus mConnectionStatus -> mConnectionStatus
    org.tweetalib.android.fetch.TwitterFetchDirectMessages this$0 -> this$0
org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchDirectMessagesTaskOutput -> org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchDirectMessagesTaskOutput:
    org.tweetalib.android.TwitterFetchResult mResult -> mResult
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.model.TwitterDirectMessages mMessages -> mMessages
    org.tweetalib.android.fetch.TwitterFetchDirectMessages this$0 -> this$0
org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchMessagesWorkerCallbacks -> org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchMessagesWorkerCallbacks:
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    void addUser(twitter4j.User) -> addUser
org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchStatusesTask -> org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchStatusesTask:
    org.tweetalib.android.fetch.TwitterFetchDirectMessages this$0 -> this$0
    int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$DirectMessagesType -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$DirectMessagesType
    226:288:org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchDirectMessagesTaskOutput doInBackground(org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchDirectMessagesTaskInput[]) -> doInBackground
    294:301:void onPostExecute(org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchDirectMessagesTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    221:221:int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$DirectMessagesType() -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$DirectMessagesType
    221:221:org.tweetalib.android.fetch.TwitterFetchDirectMessages access$3(org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchStatusesTask) -> access$3
org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchStatusesTask$1 -> org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchStatusesTask$1:
    org.tweetalib.android.fetch.TwitterFetchDirectMessages$FetchStatusesTask this$1 -> this$1
    270:271:void addUser(twitter4j.User) -> addUser
org.tweetalib.android.fetch.TwitterFetchStatuses -> org.tweetalib.android.fetch.TwitterFetchStatuses:
    org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesWorkerCallbacks mCallbacks -> mCallbacks
    java.util.HashMap mStatusesHashMap -> mStatusesHashMap
    java.lang.Integer mFetchStatusesCallbackHandle -> mFetchStatusesCallbackHandle
    java.util.HashMap mFinishedCallbackMap -> mFinishedCallbackMap
    57:58:void clearCallbacks() -> clearCallbacks
    85:86:void setWorkerCallbacks(org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesWorkerCallbacks) -> setWorkerCallbacks
    97:98:org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback getFetchStatusesCallback(java.lang.Integer) -> getFetchStatusesCallback
    105:108:void removeFetchStatusesCallback(org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback) -> removeFetchStatusesCallback
    114:114:twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    117:117:org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
    124:126:org.tweetalib.android.model.TwitterStatuses setStatuses(org.tweetalib.android.TwitterContentHandle,twitter4j.QueryResult) -> setStatuses
    133:148:org.tweetalib.android.model.TwitterStatuses setStatuses(org.tweetalib.android.TwitterContentHandle,twitter4j.ResponseList) -> setStatuses
    155:172:org.tweetalib.android.model.TwitterStatuses setStatuses(org.tweetalib.android.TwitterContentHandle,org.appdotnet4j.model.AdnPosts) -> setStatuses
    179:184:org.tweetalib.android.model.TwitterStatuses setStatuses(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.model.TwitterStatuses,boolean) -> setStatuses
    192:202:org.tweetalib.android.model.TwitterStatuses getStatuses(org.tweetalib.android.TwitterContentHandle) -> getStatuses
    211:227:void trigger(org.tweetalib.android.TwitterContentHandle,org.tweetalib.android.TwitterPaging,org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback,org.tweetalib.android.ConnectionStatus,int) -> trigger
    234:235:void cancel(org.tweetalib.android.callback.TwitterFetchStatusesFinishedCallback) -> cancel
    48:48:org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesWorkerCallbacks access$0(org.tweetalib.android.fetch.TwitterFetchStatuses) -> access$0
org.tweetalib.android.fetch.TwitterFetchStatuses$1 -> org.tweetalib.android.fetch.TwitterFetchStatuses$1:
    org.tweetalib.android.fetch.TwitterFetchStatuses this$0 -> this$0
    138:139:void addUser(twitter4j.User) -> addUser
    143:144:void addUser(org.appdotnet4j.model.AdnUser) -> addUser
org.tweetalib.android.fetch.TwitterFetchStatuses$2 -> org.tweetalib.android.fetch.TwitterFetchStatuses$2:
    org.tweetalib.android.fetch.TwitterFetchStatuses this$0 -> this$0
    160:161:void addUser(twitter4j.User) -> addUser
    165:166:void addUser(org.appdotnet4j.model.AdnUser) -> addUser
org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTask -> org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTask:
    org.tweetalib.android.fetch.TwitterFetchStatuses this$0 -> this$0
    int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType
    280:547:org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTaskOutput doInBackground(org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTaskInput[]) -> doInBackground
    553:560:void onPostExecute(org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTaskOutput) -> onPostExecute
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    275:275:int[] $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType() -> $SWITCH_TABLE$org$tweetalib$android$TwitterConstant$StatusesType
    275:275:org.tweetalib.android.fetch.TwitterFetchStatuses access$3(org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTask) -> access$3
org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTask$1 -> org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTask$1:
    org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTask this$1 -> this$1
    503:504:void addUser(twitter4j.User) -> addUser
    508:509:void addUser(org.appdotnet4j.model.AdnUser) -> addUser
org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTaskInput -> org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTaskInput:
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.TwitterContentHandle mContentHandle -> mContentHandle
    org.tweetalib.android.TwitterPaging mPaging -> mPaging
    org.tweetalib.android.ConnectionStatus mConnectionStatus -> mConnectionStatus
    org.tweetalib.android.fetch.TwitterFetchStatuses this$0 -> this$0
org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTaskOutput -> org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesTaskOutput:
    org.tweetalib.android.TwitterFetchResult mResult -> mResult
    java.lang.Integer mCallbackHandle -> mCallbackHandle
    org.tweetalib.android.model.TwitterStatuses mFeed -> mFeed
    org.tweetalib.android.fetch.TwitterFetchStatuses this$0 -> this$0
org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesWorkerCallbacks -> org.tweetalib.android.fetch.TwitterFetchStatuses$FetchStatusesWorkerCallbacks:
    org.socialnetlib.android.AppdotnetApi getAppdotnetApi() -> getAppdotnetApi
    twitter4j.Twitter getTwitterInstance() -> getTwitterInstance
    void addUser(twitter4j.User) -> addUser
    void addUser(org.appdotnet4j.model.AdnUser) -> addUser
org.tweetalib.android.model.TwitterDirectMessage -> org.tweetalib.android.model.TwitterDirectMessage:
    long mId -> mId
    org.tweetalib.android.model.TwitterDirectMessage$MessageType mMessageType -> mMessageType
    java.lang.String mText -> mText
    android.text.Spanned mTextSpanned -> mTextSpanned
    java.util.Date mCreatedAt -> mCreatedAt
    long mOtherUserId -> mOtherUserId
    java.lang.String mOtherUserName -> mOtherUserName
    java.lang.String mOtherUserScreenName -> mOtherUserScreenName
    56:56:long getId() -> getId
    57:57:org.tweetalib.android.model.TwitterDirectMessage$MessageType getMessageType() -> getMessageType
    58:58:java.lang.String getText() -> getText
    59:59:java.util.Date getCreatedAt() -> getCreatedAt
    60:60:long getOtherUserId() -> getOtherUserId
    61:61:java.lang.String getOtherUserName() -> getOtherUserName
    62:62:java.lang.String getOtherUserScreenName() -> getOtherUserScreenName
    83:86:int compareTo(org.tweetalib.android.model.TwitterDirectMessage) -> compareTo
    1:1:int compareTo(java.lang.Object) -> compareTo
org.tweetalib.android.model.TwitterDirectMessage$MessageType -> org.tweetalib.android.model.TwitterDirectMessage$MessageType:
    org.tweetalib.android.model.TwitterDirectMessage$MessageType SENT -> SENT
    org.tweetalib.android.model.TwitterDirectMessage$MessageType RECEIVED -> RECEIVED
    org.tweetalib.android.model.TwitterDirectMessage$MessageType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.model.TwitterDirectMessage$MessageType[] values() -> values
    1:1:org.tweetalib.android.model.TwitterDirectMessage$MessageType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.model.TwitterDirectMessages -> org.tweetalib.android.model.TwitterDirectMessages:
    long mMessageOwnerId -> mMessageOwnerId
    java.util.ArrayList mConversations -> mConversations
    org.tweetalib.android.model.TwitterDirectMessagesHandle mConversationHandle -> mConversationHandle
    155:181:void add(twitter4j.ResponseList,twitter4j.ResponseList,org.tweetalib.android.model.TwitterDirectMessages$AddUserCallback) -> add
    187:191:void add(twitter4j.DirectMessage) -> add
    198:206:void add(org.tweetalib.android.model.TwitterDirectMessage) -> add
    213:226:org.tweetalib.android.model.TwitterDirectMessages$Conversation getConversationForMessage(org.tweetalib.android.model.TwitterDirectMessage) -> getConversationForMessage
    233:237:twitter4j.User getOtherParty(twitter4j.DirectMessage) -> getOtherParty
    245:263:java.util.ArrayList getList(org.tweetalib.android.model.TwitterDirectMessagesHandle) -> getList
    270:275:org.tweetalib.android.model.TwitterDirectMessage getFirstMessage(org.tweetalib.android.model.TwitterDirectMessagesHandle) -> getFirstMessage
    282:287:org.tweetalib.android.model.TwitterDirectMessage getMessage(org.tweetalib.android.model.TwitterDirectMessagesHandle,int) -> getMessage
    294:298:int getConversationCount() -> getConversationCount
    305:308:org.tweetalib.android.model.TwitterDirectMessages$Conversation getConversation(int) -> getConversation
    315:318:java.lang.Long getNewestDirectMessageId() -> getNewestDirectMessageId
    325:329:java.lang.Long getOldestDirectMessageId() -> getOldestDirectMessageId
    336:337:void sort() -> sort
org.tweetalib.android.model.TwitterDirectMessages$AddUserCallback -> org.tweetalib.android.model.TwitterDirectMessages$AddUserCallback:
    void addUser(twitter4j.User) -> addUser
org.tweetalib.android.model.TwitterDirectMessages$Conversation -> org.tweetalib.android.model.TwitterDirectMessages$Conversation:
    java.util.ArrayList mMessages -> mMessages
    java.lang.Long mOtherUserId -> mOtherUserId
    org.tweetalib.android.model.TwitterDirectMessages this$0 -> this$0
    43:44:void add(org.tweetalib.android.model.TwitterDirectMessage) -> add
    50:54:org.tweetalib.android.model.TwitterDirectMessage getNewest() -> getNewest
    61:65:org.tweetalib.android.model.TwitterDirectMessage getOldest() -> getOldest
    76:82:int compareTo(org.tweetalib.android.model.TwitterDirectMessages$Conversation) -> compareTo
    89:90:void sort() -> sort
    96:108:void removeDuplicates() -> removeDuplicates
    114:114:java.util.ArrayList getMessages() -> getMessages
    1:1:int compareTo(java.lang.Object) -> compareTo
org.tweetalib.android.model.TwitterDirectMessagesHandle -> org.tweetalib.android.model.TwitterDirectMessagesHandle:
    java.lang.Long mUserId -> mUserId
    java.lang.Long mOtherUserId -> mOtherUserId
    33:37:java.lang.String getKey() -> getKey
org.tweetalib.android.model.TwitterIds -> org.tweetalib.android.model.TwitterIds:
    java.util.ArrayList mIds -> mIds
    30:30:int getIdCount() -> getIdCount
    31:31:java.lang.Long getId(int) -> getId
    42:47:void add(twitter4j.IDs) -> add
org.tweetalib.android.model.TwitterList -> org.tweetalib.android.model.TwitterList:
    int mId -> mId
    java.lang.String mName -> mName
    java.lang.String mFullName -> mFullName
    java.lang.String mDescription -> mDescription
    boolean mIsPublic -> mIsPublic
    boolean mIsFollowing -> mIsFollowing
    int mMemberCount -> mMemberCount
    int mSubscriberCount -> mSubscriberCount
    34:34:int getId() -> getId
    35:35:java.lang.String getName() -> getName
    36:36:java.lang.String getFullName() -> getFullName
    37:37:java.lang.String getDescription() -> getDescription
    38:38:boolean getIsPublic() -> getIsPublic
    39:39:boolean getIsFollowing() -> getIsFollowing
    40:40:int getMemberCount() -> getMemberCount
    41:41:int getSubscriberCount() -> getSubscriberCount
    54:54:int compareTo(org.tweetalib.android.model.TwitterList) -> compareTo
    1:1:int compareTo(java.lang.Object) -> compareTo
org.tweetalib.android.model.TwitterLists -> org.tweetalib.android.model.TwitterLists:
    java.util.ArrayList mLists -> mLists
    44:44:int getListCount() -> getListCount
    45:45:org.tweetalib.android.model.TwitterList getList(int) -> getList
    49:50:void sort() -> sort
org.tweetalib.android.model.TwitterMediaEntity -> org.tweetalib.android.model.TwitterMediaEntity:
    org.tweetalib.android.model.TwitterMediaEntity$Source mSource -> mSource
    java.lang.String mMediaCode -> mMediaCode
    java.lang.String mUrl -> mUrl
    java.lang.String mExpandedUrl -> mExpandedUrl
    java.lang.String KEY_SOURCE -> KEY_SOURCE
    java.lang.String KEY_MEDIA_CODE -> KEY_MEDIA_CODE
    java.lang.String KEY_URL -> KEY_URL
    java.lang.String KEY_EXPANDED_URL -> KEY_EXPANDED_URL
    int[] $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Size -> $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Size
    int[] $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Source -> $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Source
    61:68:org.tweetalib.android.model.TwitterMediaEntity createFromString(java.lang.String) -> createFromString
    75:92:org.tweetalib.android.model.TwitterMediaEntity createMediaEntity(twitter4j.Status) -> createMediaEntity
    101:114:org.tweetalib.android.model.TwitterMediaEntity createMediaEntity(org.appdotnet4j.model.AdnPost) -> createMediaEntity
    118:148:org.tweetalib.android.model.TwitterMediaEntity getTwitterMediaEntityFromUrl(java.lang.String,java.lang.String) -> getTwitterMediaEntityFromUrl
    156:167:java.lang.String getInstagramMediaUrl(java.lang.String) -> getInstagramMediaUrl
    174:182:java.lang.String getTwitpicMediaUrl(java.lang.String) -> getTwitpicMediaUrl
    190:198:java.lang.String getLockerzMediaUrl(java.lang.String) -> getLockerzMediaUrl
    205:212:java.lang.String getImgurUrl(java.lang.String) -> getImgurUrl
    220:224:java.lang.String getYfrogMediaUrl(java.lang.String) -> getYfrogMediaUrl
    232:252:java.lang.String getYouTubeUrl(java.lang.String) -> getYouTubeUrl
    313:323:java.lang.String toString() -> toString
    329:329:java.lang.String getUrl() -> getUrl
    330:330:java.lang.String getExpandedUrl() -> getExpandedUrl
    331:331:org.tweetalib.android.model.TwitterMediaEntity$Source getSource() -> getSource
    338:402:java.lang.String getMediaUrl(org.tweetalib.android.model.TwitterMediaEntity$Size) -> getMediaUrl
    30:30:int[] $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Size() -> $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Size
    30:30:int[] $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Source() -> $SWITCH_TABLE$org$tweetalib$android$model$TwitterMediaEntity$Source
org.tweetalib.android.model.TwitterMediaEntity$Size -> org.tweetalib.android.model.TwitterMediaEntity$Size:
    org.tweetalib.android.model.TwitterMediaEntity$Size THUMB -> THUMB
    org.tweetalib.android.model.TwitterMediaEntity$Size SMALL -> SMALL
    org.tweetalib.android.model.TwitterMediaEntity$Size MEDIUM -> MEDIUM
    org.tweetalib.android.model.TwitterMediaEntity$Size LARGE -> LARGE
    org.tweetalib.android.model.TwitterMediaEntity$Size[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.model.TwitterMediaEntity$Size[] values() -> values
    1:1:org.tweetalib.android.model.TwitterMediaEntity$Size valueOf(java.lang.String) -> valueOf
org.tweetalib.android.model.TwitterMediaEntity$Source -> org.tweetalib.android.model.TwitterMediaEntity$Source:
    org.tweetalib.android.model.TwitterMediaEntity$Source TWITTER -> TWITTER
    org.tweetalib.android.model.TwitterMediaEntity$Source INSTAGRAM -> INSTAGRAM
    org.tweetalib.android.model.TwitterMediaEntity$Source TWITPIC -> TWITPIC
    org.tweetalib.android.model.TwitterMediaEntity$Source LOCKERZ -> LOCKERZ
    org.tweetalib.android.model.TwitterMediaEntity$Source YFROG -> YFROG
    org.tweetalib.android.model.TwitterMediaEntity$Source IMGUR -> IMGUR
    org.tweetalib.android.model.TwitterMediaEntity$Source YOUTUBE -> YOUTUBE
    org.tweetalib.android.model.TwitterMediaEntity$Source[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.model.TwitterMediaEntity$Source[] values() -> values
    1:1:org.tweetalib.android.model.TwitterMediaEntity$Source valueOf(java.lang.String) -> valueOf
org.tweetalib.android.model.TwitterStatus -> org.tweetalib.android.model.TwitterStatus:
    java.lang.String KEY_AUTHOR_ID -> KEY_AUTHOR_ID
    java.lang.String KEY_AUTHOR_NAME -> KEY_AUTHOR_NAME
    java.lang.String KEY_AUTHOR_SCREEN_NAME -> KEY_AUTHOR_SCREEN_NAME
    java.lang.String KEY_CREATED_AT -> KEY_CREATED_AT
    java.lang.String KEY_PROFILE_IMAGE_URL -> KEY_PROFILE_IMAGE_URL
    java.lang.String KEY_ID -> KEY_ID
    java.lang.String KEY_IN_REPLY_TO_STATUS_ID -> KEY_IN_REPLY_TO_STATUS_ID
    java.lang.String KEY_IN_REPLY_TO_USER_ID -> KEY_IN_REPLY_TO_USER_ID
    java.lang.String KEY_IN_REPLY_TO_USER_SCREEN_NAME -> KEY_IN_REPLY_TO_USER_SCREEN_NAME
    java.lang.String KEY_IS_FAVORITED -> KEY_IS_FAVORITED
    java.lang.String KEY_IS_RETWEET -> KEY_IS_RETWEET
    java.lang.String KEY_IS_RETWEETED_BY_ME -> KEY_IS_RETWEETED_BY_ME
    java.lang.String KEY_RETWEET_COUNT -> KEY_RETWEET_COUNT
    java.lang.String KEY_STATUS -> KEY_STATUS
    java.lang.String KEY_STATUS_SLIM_MARKUP -> KEY_STATUS_SLIM_MARKUP
    java.lang.String KEY_STATUS_FULL_MARKUP -> KEY_STATUS_FULL_MARKUP
    java.lang.String KEY_SOURCE -> KEY_SOURCE
    java.lang.String KEY_USER_ID -> KEY_USER_ID
    java.lang.String KEY_USER_SCREEN_NAME -> KEY_USER_SCREEN_NAME
    java.lang.String KEY_USER_NAME -> KEY_USER_NAME
    java.lang.String KEY_USER_MENTIONS -> KEY_USER_MENTIONS
    java.lang.String KEY_MEDIA_ENTITY -> KEY_MEDIA_ENTITY
    long mAuthorId -> mAuthorId
    java.lang.String mAuthorName -> mAuthorName
    java.lang.String mAuthorScreenName -> mAuthorScreenName
    long mFavoriteCount -> mFavoriteCount
    java.util.Date mCreatedAt -> mCreatedAt
    java.lang.String mProfileImageUrl -> mProfileImageUrl
    long mId -> mId
    java.lang.Long mInReplyToStatusId -> mInReplyToStatusId
    java.lang.Long mInReplyToUserId -> mInReplyToUserId
    java.lang.String mInReplyToUserScreenName -> mInReplyToUserScreenName
    boolean mIsFavorited -> mIsFavorited
    boolean mIsRetweet -> mIsRetweet
    boolean mIsRetweetedByMe -> mIsRetweetedByMe
    long mRetweetCount -> mRetweetCount
    java.lang.String mStatus -> mStatus
    java.lang.String mStatusFullMarkup -> mStatusFullMarkup
    android.text.Spanned mStatusFullSpanned -> mStatusFullSpanned
    java.lang.String mSource -> mSource
    long mUserId -> mUserId
    java.lang.String mUserScreenName -> mUserScreenName
    java.lang.String mUserName -> mUserName
    java.lang.String[] mUserMentions -> mUserMentions
    org.tweetalib.android.model.TwitterMediaEntity mMediaEntity -> mMediaEntity
    275:327:java.lang.String toString() -> toString
    387:387:java.lang.String getAuthorName() -> getAuthorName
    388:388:java.lang.String getAuthorScreenName() -> getAuthorScreenName
    421:421:java.lang.String getTwitterComStatusUrl() -> getTwitterComStatusUrl
    430:433:int compareTo(org.tweetalib.android.model.TwitterStatus) -> compareTo
    440:451:boolean compareString(java.lang.String,java.lang.String) -> compareString
    455:466:boolean compareLong(java.lang.Long,java.lang.Long) -> compareLong
    474:528:boolean isEqualTo(org.tweetalib.android.model.TwitterStatus) -> isEqualTo
    535:537:void setStatusMarkup(twitter4j.Status) -> setStatusMarkup
    540:542:void setStatusMarkup(java.lang.String) -> setStatusMarkup
    545:547:void setStatusMarkup(org.appdotnet4j.model.AdnPost) -> setStatusMarkup
    593:594:void setFavorite(java.lang.Boolean) -> setFavorite
    1:1:int compareTo(java.lang.Object) -> compareTo
org.tweetalib.android.model.TwitterStatusUpdate -> org.tweetalib.android.model.TwitterStatusUpdate:
    java.lang.String mStatus -> mStatus
    java.lang.Long mInReplyToStatusId -> mInReplyToStatusId
    java.io.File mMediaFile -> mMediaFile
    java.lang.String mMediaFilePath -> mMediaFilePath
    41:56:twitter4j.StatusUpdate getT4JStatusUpdate() -> getT4JStatusUpdate
    60:61:org.appdotnet4j.model.AdnPostCompose getAdnComposePost() -> getAdnComposePost
    65:65:java.io.File getMediaFile() -> getMediaFile
    69:69:java.lang.String getMediaFilePath() -> getMediaFilePath
    73:74:void setMediaFilePath(java.lang.String) -> setMediaFilePath
org.tweetalib.android.model.TwitterStatuses -> org.tweetalib.android.model.TwitterStatuses:
    java.lang.String KEY_STATUSES -> KEY_STATUSES
    java.util.ArrayList _mStatuses -> _mStatuses
    int[] mCounts -> mCounts
    java.lang.Long mGetNewStatusesMaxId -> mGetNewStatusesMaxId
    int[] $SWITCH_TABLE$org$tweetalib$android$model$TwitterStatusesFilter$FilterType -> $SWITCH_TABLE$org$tweetalib$android$model$TwitterStatusesFilter$FilterType
    96:111:java.lang.String toString() -> toString
    118:118:int getStatusCount() -> getStatusCount
    121:127:int getStatusCount(org.tweetalib.android.model.TwitterStatusesFilter) -> getStatusCount
    134:134:org.tweetalib.android.model.TwitterStatus getStatus(int) -> getStatus
    142:190:org.tweetalib.android.model.TwitterStatus getStatus(int,org.tweetalib.android.model.TwitterStatusesFilter) -> getStatus
    209:211:void add(org.tweetalib.android.model.TwitterStatus) -> add
    218:228:void updateCount(org.tweetalib.android.model.TwitterStatus) -> updateCount
    235:243:void add(twitter4j.QueryResult) -> add
    259:296:void add(twitter4j.ResponseList,org.tweetalib.android.model.TwitterStatuses$AddUserCallback) -> add
    303:341:void add(org.appdotnet4j.model.AdnPosts,org.tweetalib.android.model.TwitterStatuses$AddUserCallback) -> add
    348:362:void add(org.tweetalib.android.model.TwitterStatuses) -> add
    368:372:void add(org.tweetalib.android.model.TwitterStatus,boolean) -> add
    378:391:void insert(org.tweetalib.android.model.TwitterStatuses) -> insert
    398:416:void remove(org.tweetalib.android.model.TwitterStatuses) -> remove
    422:423:void sort() -> sort
    429:434:org.tweetalib.android.model.TwitterStatus findByStatusId(long) -> findByStatusId
    441:459:java.lang.Integer getStatusIndex(long) -> getStatusIndex
    466:466:int size() -> size
    470:470:org.tweetalib.android.model.TwitterStatus get(int) -> get
    474:475:void remove(int) -> remove
    487:487:java.lang.Long getNewStatusesMaxId() -> getNewStatusesMaxId
    494:497:void reset() -> reset
    35:35:int[] $SWITCH_TABLE$org$tweetalib$android$model$TwitterStatusesFilter$FilterType() -> $SWITCH_TABLE$org$tweetalib$android$model$TwitterStatusesFilter$FilterType
org.tweetalib.android.model.TwitterStatuses$AddUserCallback -> org.tweetalib.android.model.TwitterStatuses$AddUserCallback:
    void addUser(twitter4j.User) -> addUser
    void addUser(org.appdotnet4j.model.AdnUser) -> addUser
org.tweetalib.android.model.TwitterStatusesFilter -> org.tweetalib.android.model.TwitterStatusesFilter:
    boolean mShowRetweets -> mShowRetweets
    boolean mShowReplies -> mShowReplies
    32:32:void setShowRetweets(boolean) -> setShowRetweets
    33:33:boolean getShowRetweets() -> getShowRetweets
    35:35:void setShowReplies(boolean) -> setShowReplies
    36:36:boolean getShowReplies() -> getShowReplies
    45:52:org.tweetalib.android.model.TwitterStatusesFilter$FilterType getFilterType() -> getFilterType
org.tweetalib.android.model.TwitterStatusesFilter$FilterType -> org.tweetalib.android.model.TwitterStatusesFilter$FilterType:
    org.tweetalib.android.model.TwitterStatusesFilter$FilterType ALL -> ALL
    org.tweetalib.android.model.TwitterStatusesFilter$FilterType HIDE_RETWEETS -> HIDE_RETWEETS
    org.tweetalib.android.model.TwitterStatusesFilter$FilterType HIDE_REPLIES -> HIDE_REPLIES
    org.tweetalib.android.model.TwitterStatusesFilter$FilterType HIDE_RETWEETS_REPLIES -> HIDE_RETWEETS_REPLIES
    org.tweetalib.android.model.TwitterStatusesFilter$FilterType FILTER_MAX -> FILTER_MAX
    org.tweetalib.android.model.TwitterStatusesFilter$FilterType[] ENUM$VALUES -> ENUM$VALUES
    1:1:org.tweetalib.android.model.TwitterStatusesFilter$FilterType[] values() -> values
    1:1:org.tweetalib.android.model.TwitterStatusesFilter$FilterType valueOf(java.lang.String) -> valueOf
org.tweetalib.android.model.TwitterUser -> org.tweetalib.android.model.TwitterUser:
    long mId -> mId
    java.lang.String mScreenName -> mScreenName
    java.lang.String mName -> mName
    java.lang.String mDescription -> mDescription
    java.lang.String mProfileImageUrl -> mProfileImageUrl
    java.lang.String mCoverImageUrl -> mCoverImageUrl
    java.lang.String mLocation -> mLocation
    java.lang.String mUrl -> mUrl
    int mStatusesCount -> mStatusesCount
    int mFriendsCount -> mFriendsCount
    int mFollowersCount -> mFollowersCount
    int mFavoritesCount -> mFavoritesCount
    int mListedCount -> mListedCount
    boolean mVerified -> mVerified
    boolean mProtected -> mProtected
    75:75:long getId() -> getId
    76:76:java.lang.String getScreenName() -> getScreenName
    77:77:java.lang.String getName() -> getName
    78:78:java.lang.String getDescription() -> getDescription
    79:79:java.lang.String getCoverImageUrl() -> getCoverImageUrl
    80:80:java.lang.String getLocation() -> getLocation
    81:81:java.lang.String getUrl() -> getUrl
    82:82:int getStatusesCount() -> getStatusesCount
    83:83:int getFriendsCount() -> getFriendsCount
    84:84:int getFollowersCount() -> getFollowersCount
    85:85:int getFavoritesCount() -> getFavoritesCount
    86:86:int getListedCount() -> getListedCount
    87:87:boolean getVerified() -> getVerified
    88:88:boolean getProtected() -> getProtected
    91:94:java.lang.String getProfileImageUrl(org.tweetalib.android.TwitterManager$ProfileImageSize) -> getProfileImageUrl
    98:98:java.lang.String getProfileImageUrl(java.lang.String,org.tweetalib.android.TwitterManager$ProfileImageSize) -> getProfileImageUrl
org.tweetalib.android.model.TwitterUsers -> org.tweetalib.android.model.TwitterUsers:
    java.util.ArrayList mUsers -> mUsers
    49:49:int getUserCount() -> getUserCount
    56:56:org.tweetalib.android.model.TwitterUser getUser(int) -> getUser
    63:64:void add(org.tweetalib.android.model.TwitterUser) -> add
    71:88:void remove(org.tweetalib.android.model.TwitterUsers) -> remove
org.tweetalib.android.widget.URLSpanNoUnderline -> org.tweetalib.android.widget.URLSpanNoUnderline:
    43:45:void updateDrawState(android.text.TextPaint) -> updateDrawState
    51:53:void stripUnderlines(android.widget.TextView) -> stripUnderlines
    59:59:android.text.Spannable stripUnderlines(android.text.Spanned) -> stripUnderlines
    66:74:android.text.Spannable stripUnderlines(android.text.Spannable) -> stripUnderlines
twitter4j.AccountSettings -> twitter4j.AccountSettings:
    boolean isSleepTimeEnabled() -> isSleepTimeEnabled
    java.lang.String getSleepStartTime() -> getSleepStartTime
    java.lang.String getSleepEndTime() -> getSleepEndTime
    twitter4j.Location[] getTrendLocations() -> getTrendLocations
    boolean isGeoEnabled() -> isGeoEnabled
    twitter4j.TimeZone getTimeZone() -> getTimeZone
    java.lang.String getLanguage() -> getLanguage
    boolean isDiscoverableByEmail() -> isDiscoverableByEmail
    boolean isAlwaysUseHttps() -> isAlwaysUseHttps
twitter4j.AccountTotals -> twitter4j.AccountTotals:
    int getUpdates() -> getUpdates
    int getFollowers() -> getFollowers
    int getFavorites() -> getFavorites
    int getFriends() -> getFriends
twitter4j.Category -> twitter4j.Category:
    java.lang.String getName() -> getName
    java.lang.String getSlug() -> getSlug
    int getSize() -> getSize
twitter4j.ConnectionLifeCycleListener -> twitter4j.ConnectionLifeCycleListener:
    void onConnect() -> onConnect
    void onDisconnect() -> onDisconnect
    void onCleanUp() -> onCleanUp
twitter4j.CursorSupport -> twitter4j.CursorSupport:
    long START -> START
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
twitter4j.DirectMessage -> twitter4j.DirectMessage:
    long getId() -> getId
    java.lang.String getText() -> getText
    long getSenderId() -> getSenderId
    long getRecipientId() -> getRecipientId
    java.util.Date getCreatedAt() -> getCreatedAt
    java.lang.String getSenderScreenName() -> getSenderScreenName
    java.lang.String getRecipientScreenName() -> getRecipientScreenName
    twitter4j.User getSender() -> getSender
    twitter4j.User getRecipient() -> getRecipient
twitter4j.EntitySupport -> twitter4j.EntitySupport:
    twitter4j.UserMentionEntity[] getUserMentionEntities() -> getUserMentionEntities
    twitter4j.URLEntity[] getURLEntities() -> getURLEntities
    twitter4j.HashtagEntity[] getHashtagEntities() -> getHashtagEntities
    twitter4j.MediaEntity[] getMediaEntities() -> getMediaEntities
twitter4j.ExceptionDiagnosis -> twitter4j.ExceptionDiagnosis:
    int stackLineHash -> stackLineHash
    int lineNumberHash -> lineNumberHash
    java.lang.String hexString -> hexString
    java.lang.Throwable th -> th
    long serialVersionUID -> serialVersionUID
    60:60:int getStackLineHash() -> getStackLineHash
    64:64:java.lang.String getStackLineHashAsHex() -> getStackLineHashAsHex
    68:68:int getLineNumberHash() -> getLineNumberHash
    72:72:java.lang.String getLineNumberHashAsHex() -> getLineNumberHashAsHex
    76:76:java.lang.String asHexString() -> asHexString
    80:81:java.lang.String toHexString(int) -> toHexString
    86:94:boolean equals(java.lang.Object) -> equals
    99:101:int hashCode() -> hashCode
    106:106:java.lang.String toString() -> toString
twitter4j.Friendship -> twitter4j.Friendship:
    long getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    boolean isFollowing() -> isFollowing
    boolean isFollowedBy() -> isFollowedBy
twitter4j.GeoLocation -> twitter4j.GeoLocation:
    double latitude -> latitude
    double longitude -> longitude
    long serialVersionUID -> serialVersionUID
    52:52:double getLatitude() -> getLatitude
    61:61:double getLongitude() -> getLongitude
    66:74:boolean equals(java.lang.Object) -> equals
    81:85:int hashCode() -> hashCode
    90:90:java.lang.String toString() -> toString
twitter4j.GeoQuery -> twitter4j.GeoQuery:
    twitter4j.GeoLocation location -> location
    java.lang.String query -> query
    java.lang.String ip -> ip
    java.lang.String accuracy -> accuracy
    java.lang.String granularity -> granularity
    int maxResults -> maxResults
    long serialVersionUID -> serialVersionUID
    57:57:twitter4j.GeoLocation getLocation() -> getLocation
    65:65:java.lang.String getQuery() -> getQuery
    69:70:void setQuery(java.lang.String) -> setQuery
    73:73:java.lang.String getIp() -> getIp
    77:77:java.lang.String getAccuracy() -> getAccuracy
    86:87:void setAccuracy(java.lang.String) -> setAccuracy
    90:91:twitter4j.GeoQuery accuracy(java.lang.String) -> accuracy
    95:95:java.lang.String getGranularity() -> getGranularity
    104:105:void setGranularity(java.lang.String) -> setGranularity
    108:109:twitter4j.GeoQuery granularity(java.lang.String) -> granularity
    113:113:int getMaxResults() -> getMaxResults
    122:123:void setMaxResults(int) -> setMaxResults
    126:127:twitter4j.GeoQuery maxResults(int) -> maxResults
    131:146:twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    150:153:void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    156:159:void appendParameter(java.lang.String,int,java.util.List) -> appendParameter
    162:163:void appendParameter(java.lang.String,double,java.util.List) -> appendParameter
    167:182:boolean equals(java.lang.Object) -> equals
    187:192:int hashCode() -> hashCode
    197:197:java.lang.String toString() -> toString
twitter4j.HashtagEntity -> twitter4j.HashtagEntity:
    java.lang.String getText() -> getText
    int getStart() -> getStart
    int getEnd() -> getEnd
twitter4j.IDs -> twitter4j.IDs:
    long[] getIDs() -> getIDs
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
twitter4j.Location -> twitter4j.Location:
    int getWoeid() -> getWoeid
    java.lang.String getCountryName() -> getCountryName
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getPlaceName() -> getPlaceName
    int getPlaceCode() -> getPlaceCode
    java.lang.String getName() -> getName
    java.lang.String getURL() -> getURL
twitter4j.MediaEntity -> twitter4j.MediaEntity:
    long getId() -> getId
    java.lang.String getMediaURL() -> getMediaURL
    java.lang.String getMediaURLHttps() -> getMediaURLHttps
    java.util.Map getSizes() -> getSizes
    java.lang.String getType() -> getType
twitter4j.MediaEntity$Size -> twitter4j.MediaEntity$Size:
    java.lang.Integer THUMB -> THUMB
    java.lang.Integer SMALL -> SMALL
    java.lang.Integer MEDIUM -> MEDIUM
    java.lang.Integer LARGE -> LARGE
    int FIT -> FIT
    int CROP -> CROP
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getResize() -> getResize
twitter4j.OEmbed -> twitter4j.OEmbed:
    java.lang.String getHtml() -> getHtml
    java.lang.String getAuthorName() -> getAuthorName
    java.lang.String getURL() -> getURL
    java.lang.String getVersion() -> getVersion
    long getCacheAge() -> getCacheAge
    java.lang.String getAuthorURL() -> getAuthorURL
    int getWidth() -> getWidth
twitter4j.OEmbedRequest -> twitter4j.OEmbedRequest:
    long serialVersionUID -> serialVersionUID
    long statusId -> statusId
    java.lang.String url -> url
    int maxWidth -> maxWidth
    boolean hideMedia -> hideMedia
    boolean hideThread -> hideThread
    boolean omitScript -> omitScript
    twitter4j.OEmbedRequest$Align align -> align
    java.lang.String[] related -> related
    java.lang.String lang -> lang
    48:49:void setMaxWidth(int) -> setMaxWidth
    52:53:twitter4j.OEmbedRequest MaxWidth(int) -> MaxWidth
    57:58:void setHideMedia(boolean) -> setHideMedia
    61:62:twitter4j.OEmbedRequest HideMedia(boolean) -> HideMedia
    66:67:void setHideThread(boolean) -> setHideThread
    70:71:twitter4j.OEmbedRequest HideThread(boolean) -> HideThread
    75:76:void setOmitScript(boolean) -> setOmitScript
    79:80:twitter4j.OEmbedRequest omitScript(boolean) -> omitScript
    84:85:void setAlign(twitter4j.OEmbedRequest$Align) -> setAlign
    88:89:twitter4j.OEmbedRequest align(twitter4j.OEmbedRequest$Align) -> align
    93:94:void setRelated(java.lang.String[]) -> setRelated
    97:98:twitter4j.OEmbedRequest related(java.lang.String[]) -> related
    102:103:void setLang(java.lang.String) -> setLang
    106:107:twitter4j.OEmbedRequest lang(java.lang.String) -> lang
    118:131:twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    135:138:void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    141:144:void appendParameter(java.lang.String,long,java.util.List) -> appendParameter
    148:163:boolean equals(java.lang.Object) -> equals
    168:177:int hashCode() -> hashCode
    182:182:java.lang.String toString() -> toString
twitter4j.OEmbedRequest$Align -> twitter4j.OEmbedRequest$Align:
    twitter4j.OEmbedRequest$Align LEFT -> LEFT
    twitter4j.OEmbedRequest$Align CENTER -> CENTER
    twitter4j.OEmbedRequest$Align RIGHT -> RIGHT
    twitter4j.OEmbedRequest$Align NONE -> NONE
    twitter4j.OEmbedRequest$Align[] $VALUES -> $VALUES
    110:110:twitter4j.OEmbedRequest$Align[] values() -> values
    110:110:twitter4j.OEmbedRequest$Align valueOf(java.lang.String) -> valueOf
twitter4j.PagableResponseList -> twitter4j.PagableResponseList:
    boolean hasPrevious() -> hasPrevious
    long getPreviousCursor() -> getPreviousCursor
    boolean hasNext() -> hasNext
    long getNextCursor() -> getNextCursor
twitter4j.Paging -> twitter4j.Paging:
    int page -> page
    int count -> count
    long sinceId -> sinceId
    long maxId -> maxId
    long serialVersionUID -> serialVersionUID
    char[] S -> S
    char[] SMCP -> SMCP
    java.lang.String COUNT -> COUNT
    java.lang.String PER_PAGE -> PER_PAGE
    twitter4j.internal.http.HttpParameter[] NULL_PARAMETER_ARRAY -> NULL_PARAMETER_ARRAY
    java.util.List NULL_PARAMETER_LIST -> NULL_PARAMETER_LIST
    51:51:java.util.List asPostParameterList() -> asPostParameterList
    57:61:twitter4j.internal.http.HttpParameter[] asPostParameterArray() -> asPostParameterArray
    65:65:java.util.List asPostParameterList(char[]) -> asPostParameterList
    81:89:java.util.List asPostParameterList(char[],java.lang.String) -> asPostParameterList
    103:111:twitter4j.internal.http.HttpParameter[] asPostParameterArray(char[],java.lang.String) -> asPostParameterArray
    117:131:void addPostParameter(char[],char,java.util.List,java.lang.String,long) -> addPostParameter
    165:165:int getPage() -> getPage
    169:173:void setPage(int) -> setPage
    176:176:int getCount() -> getCount
    180:184:void setCount(int) -> setCount
    187:188:twitter4j.Paging count(int) -> count
    192:192:long getSinceId() -> getSinceId
    196:200:void setSinceId(long) -> setSinceId
    203:204:twitter4j.Paging sinceId(long) -> sinceId
    208:208:long getMaxId() -> getMaxId
    212:216:void setMaxId(long) -> setMaxId
    219:220:twitter4j.Paging maxId(long) -> maxId
    225:235:boolean equals(java.lang.Object) -> equals
    240:244:int hashCode() -> hashCode
    249:249:java.lang.String toString() -> toString
twitter4j.Place -> twitter4j.Place:
    java.lang.String getName() -> getName
    java.lang.String getStreetAddress() -> getStreetAddress
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getId() -> getId
    java.lang.String getCountry() -> getCountry
    java.lang.String getPlaceType() -> getPlaceType
    java.lang.String getURL() -> getURL
    java.lang.String getFullName() -> getFullName
    java.lang.String getBoundingBoxType() -> getBoundingBoxType
    twitter4j.GeoLocation[][] getBoundingBoxCoordinates() -> getBoundingBoxCoordinates
    java.lang.String getGeometryType() -> getGeometryType
    twitter4j.GeoLocation[][] getGeometryCoordinates() -> getGeometryCoordinates
    twitter4j.Place[] getContainedWithIn() -> getContainedWithIn
twitter4j.Query -> twitter4j.Query:
    java.lang.String query -> query
    java.lang.String lang -> lang
    java.lang.String locale -> locale
    long maxId -> maxId
    int count -> count
    java.lang.String since -> since
    long sinceId -> sinceId
    java.lang.String geocode -> geocode
    java.lang.String until -> until
    java.lang.String resultType -> resultType
    long serialVersionUID -> serialVersionUID
    java.lang.String nextPageQuery -> nextPageQuery
    java.lang.String MILES -> MILES
    java.lang.String KILOMETERS -> KILOMETERS
    java.lang.String MIXED -> MIXED
    java.lang.String POPULAR -> POPULAR
    java.lang.String RECENT -> RECENT
    twitter4j.internal.http.HttpParameter WITH_TWITTER_USER_ID -> WITH_TWITTER_USER_ID
    58:60:twitter4j.Query createWithNextPageQuery(java.lang.String) -> createWithNextPageQuery
    69:69:java.lang.String getQuery() -> getQuery
    80:81:void setQuery(java.lang.String) -> setQuery
    93:94:twitter4j.Query query(java.lang.String) -> query
    103:103:java.lang.String getLang() -> getLang
    112:113:void setLang(java.lang.String) -> setLang
    123:124:twitter4j.Query lang(java.lang.String) -> lang
    134:134:java.lang.String getLocale() -> getLocale
    144:145:void setLocale(java.lang.String) -> setLocale
    155:156:twitter4j.Query locale(java.lang.String) -> locale
    166:166:long getMaxId() -> getMaxId
    176:177:void setMaxId(long) -> setMaxId
    187:188:twitter4j.Query maxId(long) -> maxId
    197:197:int getCount() -> getCount
    206:207:void setCount(int) -> setCount
    217:218:twitter4j.Query count(int) -> count
    228:228:java.lang.String getSince() -> getSince
    238:239:void setSince(java.lang.String) -> setSince
    249:250:twitter4j.Query since(java.lang.String) -> since
    259:259:long getSinceId() -> getSinceId
    268:269:void setSinceId(long) -> setSinceId
    279:280:twitter4j.Query sinceId(long) -> sinceId
    289:289:java.lang.String getGeocode() -> getGeocode
    304:305:void setGeoCode(twitter4j.GeoLocation,double,java.lang.String) -> setGeoCode
    318:319:twitter4j.Query geoCode(twitter4j.GeoLocation,double,java.lang.String) -> geoCode
    329:329:java.lang.String getUntil() -> getUntil
    339:340:void setUntil(java.lang.String) -> setUntil
    350:351:twitter4j.Query until(java.lang.String) -> until
    370:370:java.lang.String getResultType() -> getResultType
    380:381:void setResultType(java.lang.String) -> setResultType
    391:392:twitter4j.Query resultType(java.lang.String) -> resultType
    398:411:twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    415:418:void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    421:424:void appendParameter(java.lang.String,long,java.util.List) -> appendParameter
    427:427:java.lang.String nextPage() -> nextPage
    432:450:boolean equals(java.lang.Object) -> equals
    455:466:int hashCode() -> hashCode
    471:471:java.lang.String toString() -> toString
twitter4j.QueryResult -> twitter4j.QueryResult:
    long getSinceId() -> getSinceId
    long getMaxId() -> getMaxId
    java.lang.String getRefreshUrl() -> getRefreshUrl
    java.lang.String getRefreshURL() -> getRefreshURL
    int getCount() -> getCount
    double getCompletedIn() -> getCompletedIn
    java.lang.String getQuery() -> getQuery
    java.util.List getTweets() -> getTweets
    twitter4j.Query nextQuery() -> nextQuery
    boolean hasNext() -> hasNext
twitter4j.RateLimitStatus -> twitter4j.RateLimitStatus:
    int getRemaining() -> getRemaining
    int getRemainingHits() -> getRemainingHits
    int getLimit() -> getLimit
    int getResetTimeInSeconds() -> getResetTimeInSeconds
    int getSecondsUntilReset() -> getSecondsUntilReset
twitter4j.RateLimitStatusEvent -> twitter4j.RateLimitStatusEvent:
    twitter4j.RateLimitStatus rateLimitStatus -> rateLimitStatus
    boolean isAccountRateLimitStatus -> isAccountRateLimitStatus
    long serialVersionUID -> serialVersionUID
    39:39:twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    43:43:boolean isAccountRateLimitStatus() -> isAccountRateLimitStatus
    47:47:boolean isIPRateLimitStatus() -> isIPRateLimitStatus
twitter4j.RateLimitStatusListener -> twitter4j.RateLimitStatusListener:
    void onRateLimitStatus(twitter4j.RateLimitStatusEvent) -> onRateLimitStatus
    void onRateLimitReached(twitter4j.RateLimitStatusEvent) -> onRateLimitReached
twitter4j.RelatedResults -> twitter4j.RelatedResults:
    twitter4j.ResponseList getTweetsWithConversation() -> getTweetsWithConversation
    twitter4j.ResponseList getTweetsWithReply() -> getTweetsWithReply
    twitter4j.ResponseList getTweetsFromUser() -> getTweetsFromUser
twitter4j.Relationship -> twitter4j.Relationship:
    long getSourceUserId() -> getSourceUserId
    long getTargetUserId() -> getTargetUserId
    boolean isSourceBlockingTarget() -> isSourceBlockingTarget
    java.lang.String getSourceUserScreenName() -> getSourceUserScreenName
    java.lang.String getTargetUserScreenName() -> getTargetUserScreenName
    boolean isSourceFollowingTarget() -> isSourceFollowingTarget
    boolean isTargetFollowingSource() -> isTargetFollowingSource
    boolean isSourceFollowedByTarget() -> isSourceFollowedByTarget
    boolean isTargetFollowedBySource() -> isTargetFollowedBySource
    boolean isSourceNotificationsEnabled() -> isSourceNotificationsEnabled
    boolean isSourceWantRetweets() -> isSourceWantRetweets
twitter4j.ResponseList -> twitter4j.ResponseList:
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
twitter4j.SavedSearch -> twitter4j.SavedSearch:
    java.util.Date getCreatedAt() -> getCreatedAt
    java.lang.String getQuery() -> getQuery
    int getPosition() -> getPosition
    java.lang.String getName() -> getName
    int getId() -> getId
twitter4j.SimilarPlaces -> twitter4j.SimilarPlaces:
    java.lang.String getToken() -> getToken
twitter4j.Status -> twitter4j.Status:
    java.util.Date getCreatedAt() -> getCreatedAt
    long getId() -> getId
    java.lang.String getText() -> getText
    java.lang.String getSource() -> getSource
    boolean isTruncated() -> isTruncated
    long getInReplyToStatusId() -> getInReplyToStatusId
    long getInReplyToUserId() -> getInReplyToUserId
    java.lang.String getInReplyToScreenName() -> getInReplyToScreenName
    twitter4j.GeoLocation getGeoLocation() -> getGeoLocation
    twitter4j.Place getPlace() -> getPlace
    boolean isFavorited() -> isFavorited
    twitter4j.User getUser() -> getUser
    boolean isRetweet() -> isRetweet
    twitter4j.Status getRetweetedStatus() -> getRetweetedStatus
    long[] getContributors() -> getContributors
    long getRetweetCount() -> getRetweetCount
    boolean isRetweetedByMe() -> isRetweetedByMe
    long getCurrentUserRetweetId() -> getCurrentUserRetweetId
    boolean isPossiblySensitive() -> isPossiblySensitive
twitter4j.StatusDeletionNotice -> twitter4j.StatusDeletionNotice:
    long getStatusId() -> getStatusId
    long getUserId() -> getUserId
twitter4j.StatusDeletionNoticeImpl -> twitter4j.StatusDeletionNoticeImpl:
    long statusId -> statusId
    long userId -> userId
    long serialVersionUID -> serialVersionUID
    41:41:long getStatusId() -> getStatusId
    46:46:long getUserId() -> getUserId
    51:57:int compareTo(twitter4j.StatusDeletionNotice) -> compareTo
    62:70:boolean equals(java.lang.Object) -> equals
    75:77:int hashCode() -> hashCode
    82:82:java.lang.String toString() -> toString
    28:28:int compareTo(java.lang.Object) -> compareTo
twitter4j.StatusUpdate -> twitter4j.StatusUpdate:
    java.lang.String status -> status
    long inReplyToStatusId -> inReplyToStatusId
    twitter4j.GeoLocation location -> location
    java.lang.String placeId -> placeId
    boolean displayCoordinates -> displayCoordinates
    boolean possiblySensitive -> possiblySensitive
    java.lang.String mediaName -> mediaName
    java.io.InputStream mediaBody -> mediaBody
    java.io.File mediaFile -> mediaFile
    long serialVersionUID -> serialVersionUID
    48:48:java.lang.String getStatus() -> getStatus
    52:52:long getInReplyToStatusId() -> getInReplyToStatusId
    56:57:void setInReplyToStatusId(long) -> setInReplyToStatusId
    60:61:twitter4j.StatusUpdate inReplyToStatusId(long) -> inReplyToStatusId
    65:65:twitter4j.GeoLocation getLocation() -> getLocation
    69:70:void setLocation(twitter4j.GeoLocation) -> setLocation
    73:74:twitter4j.StatusUpdate location(twitter4j.GeoLocation) -> location
    78:78:java.lang.String getPlaceId() -> getPlaceId
    82:83:void setPlaceId(java.lang.String) -> setPlaceId
    86:87:twitter4j.StatusUpdate placeId(java.lang.String) -> placeId
    91:91:boolean isDisplayCoordinates() -> isDisplayCoordinates
    95:96:void setDisplayCoordinates(boolean) -> setDisplayCoordinates
    99:100:twitter4j.StatusUpdate displayCoordinates(boolean) -> displayCoordinates
    107:108:void setMedia(java.io.File) -> setMedia
    114:115:twitter4j.StatusUpdate media(java.io.File) -> media
    122:124:void setMedia(java.lang.String,java.io.InputStream) -> setMedia
    127:127:boolean isWithMedia() -> isWithMedia
    134:135:twitter4j.StatusUpdate media(java.lang.String,java.io.InputStream) -> media
    142:143:void setPossiblySensitive(boolean) -> setPossiblySensitive
    149:150:twitter4j.StatusUpdate possiblySensitive(boolean) -> possiblySensitive
    157:157:boolean isPossiblySensitive() -> isPossiblySensitive
    161:183:twitter4j.internal.http.HttpParameter[] asHttpParameterArray() -> asHttpParameterArray
    187:190:void appendParameter(java.lang.String,java.lang.String,java.util.List) -> appendParameter
    193:194:void appendParameter(java.lang.String,double,java.util.List) -> appendParameter
    197:198:void appendParameter(java.lang.String,long,java.util.List) -> appendParameter
    202:217:boolean equals(java.lang.Object) -> equals
    222:231:int hashCode() -> hashCode
    236:236:java.lang.String toString() -> toString
twitter4j.TimeZone -> twitter4j.TimeZone:
    java.lang.String getName() -> getName
    java.lang.String tzinfoName() -> tzinfoName
    int utcOffset() -> utcOffset
twitter4j.Trend -> twitter4j.Trend:
    java.lang.String getName() -> getName
    java.lang.String getUrl() -> getUrl
    java.lang.String getURL() -> getURL
    java.lang.String getQuery() -> getQuery
twitter4j.Trends -> twitter4j.Trends:
    twitter4j.Trend[] getTrends() -> getTrends
    twitter4j.Location getLocation() -> getLocation
    java.util.Date getAsOf() -> getAsOf
    java.util.Date getTrendAt() -> getTrendAt
twitter4j.Twitter -> twitter4j.Twitter:
twitter4j.TwitterAPIConfiguration -> twitter4j.TwitterAPIConfiguration:
    int getPhotoSizeLimit() -> getPhotoSizeLimit
    int getShortURLLength() -> getShortURLLength
    int getShortURLLengthHttps() -> getShortURLLengthHttps
    int getCharactersReservedPerMedia() -> getCharactersReservedPerMedia
    java.util.Map getPhotoSizes() -> getPhotoSizes
    java.lang.String[] getNonUsernamePaths() -> getNonUsernamePaths
    int getMaxMediaPerUpload() -> getMaxMediaPerUpload
twitter4j.TwitterAPIMonitor -> twitter4j.TwitterAPIMonitor:
    twitter4j.internal.logging.Logger logger -> logger
    java.util.regex.Pattern pattern -> pattern
    twitter4j.TwitterAPIMonitor SINGLETON -> SINGLETON
    twitter4j.management.APIStatistics STATISTICS -> STATISTICS
    98:98:twitter4j.TwitterAPIMonitor getInstance() -> getInstance
    102:102:twitter4j.management.APIStatisticsMBean getStatistics() -> getStatistics
    106:111:void methodCalled(java.lang.String,long,boolean) -> methodCalled
twitter4j.TwitterBase -> twitter4j.TwitterBase:
    java.lang.String getScreenName() -> getScreenName
    long getId() -> getId
    void addRateLimitStatusListener(twitter4j.RateLimitStatusListener) -> addRateLimitStatusListener
    twitter4j.auth.Authorization getAuthorization() -> getAuthorization
    twitter4j.conf.Configuration getConfiguration() -> getConfiguration
    void shutdown() -> shutdown
twitter4j.TwitterBaseImpl -> twitter4j.TwitterBaseImpl:
    twitter4j.conf.Configuration conf -> conf
    java.lang.String screenName -> screenName
    long id -> id
    twitter4j.internal.http.HttpClientWrapper http -> http
    java.util.List rateLimitStatusListeners -> rateLimitStatusListeners
    twitter4j.internal.json.z_T4JInternalFactory factory -> factory
    twitter4j.auth.Authorization auth -> auth
    long serialVersionUID -> serialVersionUID
    58:78:void init() -> init
    81:82:void setFactory() -> setFactory
    89:105:java.lang.String getScreenName() -> getScreenName
    113:121:long getId() -> getId
    125:129:twitter4j.User fillInIDAndScreenName() -> fillInIDAndScreenName
    137:138:void addRateLimitStatusListener(twitter4j.RateLimitStatusListener) -> addRateLimitStatusListener
    142:172:void httpResponseReceived(twitter4j.internal.http.HttpResponseEvent) -> httpResponseReceived
    179:179:twitter4j.auth.Authorization getAuthorization() -> getAuthorization
    187:187:twitter4j.conf.Configuration getConfiguration() -> getConfiguration
    195:196:void shutdown() -> shutdown
    199:203:void ensureAuthorizationEnabled() -> ensureAuthorizationEnabled
    206:210:void ensureOAuthEnabled() -> ensureOAuthEnabled
    214:226:void writeObject(java.io.ObjectOutputStream) -> writeObject
    231:239:void readObject(java.io.ObjectInputStream) -> readObject
    249:266:void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    273:273:twitter4j.auth.RequestToken getOAuthRequestToken() -> getOAuthRequestToken
    281:281:twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String) -> getOAuthRequestToken
    289:289:twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String) -> getOAuthRequestToken
    303:328:twitter4j.auth.AccessToken getOAuthAccessToken() -> getOAuthAccessToken
    339:341:twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String) -> getOAuthAccessToken
    351:354:twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken) -> getOAuthAccessToken
    364:364:twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String) -> getOAuthAccessToken
    372:373:void setOAuthAccessToken(twitter4j.auth.AccessToken) -> setOAuthAccessToken
    380:380:twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String,java.lang.String) -> getOAuthAccessToken
    385:389:twitter4j.auth.OAuthSupport getOAuth() -> getOAuth
    395:408:boolean equals(java.lang.Object) -> equals
    413:417:int hashCode() -> hashCode
    422:422:java.lang.String toString() -> toString
twitter4j.TwitterException -> twitter4j.TwitterException:
    int statusCode -> statusCode
    int errorCode -> errorCode
    long serialVersionUID -> serialVersionUID
    twitter4j.ExceptionDiagnosis exceptionDiagnosis -> exceptionDiagnosis
    twitter4j.internal.http.HttpResponse response -> response
    java.lang.String errorMessage -> errorMessage
    java.lang.String[] FILTER -> FILTER
    boolean nested -> nested
    77:89:java.lang.String getMessage() -> getMessage
    94:105:void decode(java.lang.String) -> decode
    108:108:int getStatusCode() -> getStatusCode
    112:112:int getErrorCode() -> getErrorCode
    116:123:java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
    133:136:twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    144:144:int getAccessLevel() -> getAccessLevel
    161:176:int getRetryAfter() -> getRetryAfter
    186:186:boolean isCausedByNetworkIssue() -> isCausedByNetworkIssue
    197:197:boolean exceededRateLimitation() -> exceededRateLimitation
    209:209:boolean resourceNotFound() -> resourceNotFound
    225:225:java.lang.String getExceptionCode() -> getExceptionCode
    229:232:twitter4j.ExceptionDiagnosis getExceptionDiagnosis() -> getExceptionDiagnosis
    238:239:void setNested() -> setNested
    248:248:java.lang.String getErrorMessage() -> getErrorMessage
    258:258:boolean isErrorMessageAvailable() -> isErrorMessageAvailable
    263:276:boolean equals(java.lang.Object) -> equals
    281:287:int hashCode() -> hashCode
    292:292:java.lang.String toString() -> toString
    308:358:java.lang.String getCause(int) -> getCause
twitter4j.TwitterFactory -> twitter4j.TwitterFactory:
    java.lang.reflect.Constructor TWITTER_CONSTRUCTOR -> TWITTER_CONSTRUCTOR
    twitter4j.auth.Authorization DEFAULT_AUTHORIZATION -> DEFAULT_AUTHORIZATION
    twitter4j.Twitter SINGLETON -> SINGLETON
    long serialVersionUID -> serialVersionUID
    twitter4j.conf.Configuration conf -> conf
    115:115:twitter4j.Twitter getInstance() -> getInstance
    128:135:twitter4j.Twitter getInstance(twitter4j.auth.AccessToken) -> getInstance
    140:146:twitter4j.Twitter getInstance(twitter4j.auth.Authorization) -> getInstance
    157:157:twitter4j.Twitter getSingleton() -> getSingleton
twitter4j.TwitterImpl -> twitter4j.TwitterImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String IMPLICIT_PARAMS_STR -> IMPLICIT_PARAMS_STR
    twitter4j.internal.http.HttpParameter[] IMPLICIT_PARAMS -> IMPLICIT_PARAMS
    twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET -> INCLUDE_MY_RETWEET
    java.util.Map implicitParamsMap -> implicitParamsMap
    java.util.Map implicitParamsStrMap -> implicitParamsStrMap
    82:82:twitter4j.ResponseList getMentions() -> getMentions
    90:90:twitter4j.ResponseList getMentionsTimeline() -> getMentionsTimeline
    98:98:twitter4j.ResponseList getMentions(twitter4j.Paging) -> getMentions
    106:106:twitter4j.ResponseList getMentionsTimeline(twitter4j.Paging) -> getMentionsTimeline
    117:117:twitter4j.ResponseList getHomeTimeline() -> getHomeTimeline
    127:127:twitter4j.ResponseList getHomeTimeline(twitter4j.Paging) -> getHomeTimeline
    135:135:twitter4j.ResponseList getRetweetsOfMe() -> getRetweetsOfMe
    143:143:twitter4j.ResponseList getRetweetsOfMe(twitter4j.Paging) -> getRetweetsOfMe
    153:153:twitter4j.ResponseList getUserTimeline(java.lang.String,twitter4j.Paging) -> getUserTimeline
    166:166:twitter4j.ResponseList getUserTimeline(long,twitter4j.Paging) -> getUserTimeline
    178:178:twitter4j.ResponseList getUserTimeline(java.lang.String) -> getUserTimeline
    186:186:twitter4j.ResponseList getUserTimeline(long) -> getUserTimeline
    195:195:twitter4j.ResponseList getUserTimeline() -> getUserTimeline
    204:204:twitter4j.ResponseList getUserTimeline(twitter4j.Paging) -> getUserTimeline
    216:216:twitter4j.ResponseList getRetweets(long) -> getRetweets
    225:225:twitter4j.Status showStatus(long) -> showStatus
    233:233:twitter4j.Status destroyStatus(long) -> destroyStatus
    241:241:twitter4j.Status updateStatus(java.lang.String) -> updateStatus
    250:252:twitter4j.Status updateStatus(twitter4j.StatusUpdate) -> updateStatus
    260:260:twitter4j.Status retweetStatus(long) -> retweetStatus
    268:268:twitter4j.OEmbed getOEmbed(twitter4j.OEmbedRequest) -> getOEmbed
    278:282:twitter4j.QueryResult search(twitter4j.Query) -> search
    293:293:twitter4j.ResponseList getDirectMessages() -> getDirectMessages
    301:301:twitter4j.ResponseList getDirectMessages(twitter4j.Paging) -> getDirectMessages
    311:311:twitter4j.ResponseList getSentDirectMessages() -> getSentDirectMessages
    320:320:twitter4j.ResponseList getSentDirectMessages(twitter4j.Paging) -> getSentDirectMessages
    329:329:twitter4j.DirectMessage showDirectMessage(long) -> showDirectMessage
    338:338:twitter4j.DirectMessage destroyDirectMessage(long) -> destroyDirectMessage
    347:347:twitter4j.DirectMessage sendDirectMessage(long,java.lang.String) -> sendDirectMessage
    356:356:twitter4j.DirectMessage sendDirectMessage(java.lang.String,java.lang.String) -> sendDirectMessage
    366:366:twitter4j.IDs getFriendsIDs(long) -> getFriendsIDs
    374:374:twitter4j.IDs getFriendsIDs(long,long) -> getFriendsIDs
    383:383:twitter4j.IDs getFriendsIDs(java.lang.String,long) -> getFriendsIDs
    392:392:twitter4j.IDs getFollowersIDs(long) -> getFollowersIDs
    400:400:twitter4j.IDs getFollowersIDs(long,long) -> getFollowersIDs
    409:409:twitter4j.IDs getFollowersIDs(java.lang.String,long) -> getFollowersIDs
    418:418:twitter4j.ResponseList lookupFriendships(long[]) -> lookupFriendships
    426:426:twitter4j.ResponseList lookupFriendships(java.lang.String[]) -> lookupFriendships
    435:435:twitter4j.IDs getIncomingFriendships(long) -> getIncomingFriendships
    443:443:twitter4j.IDs getOutgoingFriendships(long) -> getOutgoingFriendships
    451:451:twitter4j.User createFriendship(long) -> createFriendship
    459:459:twitter4j.User createFriendship(java.lang.String) -> createFriendship
    467:467:twitter4j.User createFriendship(long,boolean) -> createFriendship
    476:476:twitter4j.User createFriendship(java.lang.String,boolean) -> createFriendship
    485:485:twitter4j.User destroyFriendship(long) -> destroyFriendship
    493:493:twitter4j.User destroyFriendship(java.lang.String) -> destroyFriendship
    502:502:twitter4j.Relationship updateFriendship(long,boolean,boolean) -> updateFriendship
    516:516:twitter4j.Relationship updateFriendship(java.lang.String,boolean,boolean) -> updateFriendship
    529:529:twitter4j.Relationship showFriendship(long,long) -> showFriendship
    538:538:twitter4j.Relationship showFriendship(java.lang.String,java.lang.String) -> showFriendship
    547:547:twitter4j.PagableResponseList getFriendsList(long,long) -> getFriendsList
    556:556:twitter4j.PagableResponseList getFriendsList(java.lang.String,long) -> getFriendsList
    565:565:twitter4j.PagableResponseList getFollowersList(long,long) -> getFollowersList
    574:574:twitter4j.PagableResponseList getFollowersList(java.lang.String,long) -> getFollowersList
    584:584:twitter4j.AccountSettings getAccountSettings() -> getAccountSettings
    592:592:twitter4j.User verifyCredentials() -> verifyCredentials
    603:622:twitter4j.AccountSettings updateAccountSettings(java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateAccountSettings
    633:638:twitter4j.User updateProfile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfile
    648:649:twitter4j.User updateProfileBackgroundImage(java.io.File,boolean) -> updateProfileBackgroundImage
    659:659:twitter4j.User updateProfileBackgroundImage(java.io.InputStream,boolean) -> updateProfileBackgroundImage
    674:685:twitter4j.User updateProfileColors(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfileColors
    692:695:void addParameterToList(java.util.List,java.lang.String,java.lang.String) -> addParameterToList
    702:703:twitter4j.User updateProfileImage(java.io.File) -> updateProfileImage
    713:713:twitter4j.User updateProfileImage(java.io.InputStream) -> updateProfileImage
    726:734:void checkFileValidity(java.io.File) -> checkFileValidity
    742:742:twitter4j.PagableResponseList getBlocksList() -> getBlocksList
    751:751:twitter4j.PagableResponseList getBlocksList(long) -> getBlocksList
    759:759:twitter4j.IDs getBlocksIDs() -> getBlocksIDs
    767:767:twitter4j.IDs getBlocksIDs(long) -> getBlocksIDs
    775:775:twitter4j.User createBlock(long) -> createBlock
    783:783:twitter4j.User createBlock(java.lang.String) -> createBlock
    791:791:twitter4j.User destroyBlock(long) -> destroyBlock
    799:799:twitter4j.User destroyBlock(java.lang.String) -> destroyBlock
    807:807:twitter4j.ResponseList lookupUsers(long[]) -> lookupUsers
    816:816:twitter4j.ResponseList lookupUsers(java.lang.String[]) -> lookupUsers
    825:825:twitter4j.User showUser(long) -> showUser
    833:833:twitter4j.User showUser(java.lang.String) -> showUser
    841:841:twitter4j.ResponseList searchUsers(java.lang.String,int) -> searchUsers
    851:851:twitter4j.ResponseList getContributees(long) -> getContributees
    859:859:twitter4j.ResponseList getContributees(java.lang.String) -> getContributees
    867:867:twitter4j.ResponseList getContributors(long) -> getContributors
    875:875:twitter4j.ResponseList getContributors(java.lang.String) -> getContributors
    883:885:void removeProfileBanner() -> removeProfileBanner
    892:896:void updateProfileBanner(java.io.File) -> updateProfileBanner
    903:906:void updateProfileBanner(java.io.InputStream) -> updateProfileBanner
    914:920:twitter4j.ResponseList getUserSuggestions(java.lang.String) -> getUserSuggestions
    928:928:twitter4j.ResponseList getSuggestedUserCategories() -> getSuggestedUserCategories
    936:942:twitter4j.ResponseList getMemberSuggestions(java.lang.String) -> getMemberSuggestions
    952:952:twitter4j.ResponseList getFavorites() -> getFavorites
    960:960:twitter4j.ResponseList getFavorites(long) -> getFavorites
    968:968:twitter4j.ResponseList getFavorites(java.lang.String) -> getFavorites
    976:976:twitter4j.ResponseList getFavorites(twitter4j.Paging) -> getFavorites
    984:984:twitter4j.ResponseList getFavorites(long,twitter4j.Paging) -> getFavorites
    994:994:twitter4j.ResponseList getFavorites(java.lang.String,twitter4j.Paging) -> getFavorites
    1004:1004:twitter4j.Status destroyFavorite(long) -> destroyFavorite
    1012:1012:twitter4j.Status createFavorite(long) -> createFavorite
    1021:1021:twitter4j.ResponseList getUserLists(java.lang.String) -> getUserLists
    1029:1029:twitter4j.ResponseList getUserLists(long) -> getUserLists
    1037:1037:twitter4j.ResponseList getUserListStatuses(int,twitter4j.Paging) -> getUserListStatuses
    1047:1047:twitter4j.ResponseList getUserListStatuses(long,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    1059:1059:twitter4j.ResponseList getUserListStatuses(java.lang.String,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    1070:1070:twitter4j.UserList destroyUserListMember(int,long) -> destroyUserListMember
    1077:1077:twitter4j.UserList deleteUserListMember(int,long) -> deleteUserListMember
    1085:1085:twitter4j.UserList destroyUserListMember(long,java.lang.String,long) -> destroyUserListMember
    1096:1096:twitter4j.UserList destroyUserListMember(java.lang.String,java.lang.String,long) -> destroyUserListMember
    1103:1103:twitter4j.UserList deleteUserListMember(long,java.lang.String,long) -> deleteUserListMember
    1111:1111:twitter4j.PagableResponseList getUserListMemberships(long) -> getUserListMemberships
    1120:1120:twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long) -> getUserListMemberships
    1128:1128:twitter4j.PagableResponseList getUserListMemberships(long,long) -> getUserListMemberships
    1136:1136:twitter4j.PagableResponseList getUserListMemberships(long,long,boolean) -> getUserListMemberships
    1146:1146:twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long,boolean) -> getUserListMemberships
    1156:1156:twitter4j.PagableResponseList getUserListSubscribers(int,long) -> getUserListSubscribers
    1164:1164:twitter4j.PagableResponseList getUserListSubscribers(long,java.lang.String,long) -> getUserListSubscribers
    1175:1175:twitter4j.PagableResponseList getUserListSubscribers(java.lang.String,java.lang.String,long) -> getUserListSubscribers
    1184:1184:twitter4j.UserList createUserListSubscription(int) -> createUserListSubscription
    1193:1193:twitter4j.UserList createUserListSubscription(long,java.lang.String) -> createUserListSubscription
    1205:1205:twitter4j.UserList createUserListSubscription(java.lang.String,java.lang.String) -> createUserListSubscription
    1215:1215:twitter4j.User showUserListSubscription(int,long) -> showUserListSubscription
    1224:1224:twitter4j.User showUserListSubscription(long,java.lang.String,long) -> showUserListSubscription
    1234:1234:twitter4j.User showUserListSubscription(java.lang.String,java.lang.String,long) -> showUserListSubscription
    1243:1243:twitter4j.UserList destroyUserListSubscription(int) -> destroyUserListSubscription
    1252:1252:twitter4j.UserList destroyUserListSubscription(long,java.lang.String) -> destroyUserListSubscription
    1262:1262:twitter4j.UserList destroyUserListSubscription(java.lang.String,java.lang.String) -> destroyUserListSubscription
    1271:1271:twitter4j.UserList createUserListMembers(int,long[]) -> createUserListMembers
    1278:1278:twitter4j.UserList addUserListMembers(int,long[]) -> addUserListMembers
    1286:1286:twitter4j.UserList createUserListMembers(long,java.lang.String,long[]) -> createUserListMembers
    1297:1297:twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,long[]) -> createUserListMembers
    1304:1304:twitter4j.UserList addUserListMembers(long,java.lang.String,long[]) -> addUserListMembers
    1312:1312:twitter4j.UserList createUserListMembers(int,java.lang.String[]) -> createUserListMembers
    1321:1321:twitter4j.UserList addUserListMembers(int,java.lang.String[]) -> addUserListMembers
    1329:1329:twitter4j.UserList createUserListMembers(long,java.lang.String,java.lang.String[]) -> createUserListMembers
    1341:1341:twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,java.lang.String[]) -> createUserListMembers
    1349:1349:twitter4j.UserList addUserListMembers(long,java.lang.String,java.lang.String[]) -> addUserListMembers
    1357:1357:twitter4j.User showUserListMembership(int,long) -> showUserListMembership
    1366:1366:twitter4j.User showUserListMembership(long,java.lang.String,long) -> showUserListMembership
    1376:1376:twitter4j.User showUserListMembership(java.lang.String,java.lang.String,long) -> showUserListMembership
    1386:1386:twitter4j.PagableResponseList getUserListMembers(int,long) -> getUserListMembers
    1395:1395:twitter4j.PagableResponseList getUserListMembers(long,java.lang.String,long) -> getUserListMembers
    1405:1405:twitter4j.PagableResponseList getUserListMembers(java.lang.String,java.lang.String,long) -> getUserListMembers
    1414:1414:twitter4j.UserList createUserListMember(int,long) -> createUserListMember
    1421:1421:twitter4j.UserList addUserListMember(int,long) -> addUserListMember
    1429:1429:twitter4j.UserList createUserListMember(long,java.lang.String,long) -> createUserListMember
    1440:1440:twitter4j.UserList createUserListMember(java.lang.String,java.lang.String,long) -> createUserListMember
    1447:1447:twitter4j.UserList addUserListMember(long,java.lang.String,long) -> addUserListMember
    1455:1455:twitter4j.UserList destroyUserList(int) -> destroyUserList
    1464:1464:twitter4j.UserList destroyUserList(long,java.lang.String) -> destroyUserList
    1475:1475:twitter4j.UserList destroyUserList(java.lang.String,java.lang.String) -> destroyUserList
    1485:1485:twitter4j.UserList updateUserList(int,java.lang.String,boolean,java.lang.String) -> updateUserList
    1493:1493:twitter4j.UserList updateUserList(long,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    1504:1504:twitter4j.UserList updateUserList(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    1509:1518:twitter4j.UserList updateUserList(java.lang.String,boolean,java.lang.String,twitter4j.internal.http.HttpParameter[]) -> updateUserList
    1526:1532:twitter4j.UserList createUserList(java.lang.String,boolean,java.lang.String) -> createUserList
    1541:1541:twitter4j.UserList showUserList(int) -> showUserList
    1549:1549:twitter4j.UserList showUserList(long,java.lang.String) -> showUserList
    1559:1559:twitter4j.UserList showUserList(java.lang.String,java.lang.String) -> showUserList
    1568:1568:twitter4j.PagableResponseList getUserListSubscriptions(java.lang.String,long) -> getUserListSubscriptions
    1578:1578:twitter4j.ResponseList getSavedSearches() -> getSavedSearches
    1586:1586:twitter4j.SavedSearch showSavedSearch(int) -> showSavedSearch
    1595:1595:twitter4j.SavedSearch createSavedSearch(java.lang.String) -> createSavedSearch
    1604:1604:twitter4j.SavedSearch destroySavedSearch(int) -> destroySavedSearch
    1614:1614:twitter4j.Place getGeoDetails(java.lang.String) -> getGeoDetails
    1624:1630:twitter4j.ResponseList reverseGeoCode(twitter4j.GeoQuery) -> reverseGeoCode
    1640:1640:twitter4j.ResponseList searchPlaces(twitter4j.GeoQuery) -> searchPlaces
    1649:1659:twitter4j.SimilarPlaces getSimilarPlaces(twitter4j.GeoLocation,java.lang.String,java.lang.String,java.lang.String) -> getSimilarPlaces
    1668:1677:twitter4j.Place createPlace(java.lang.String,java.lang.String,java.lang.String,twitter4j.GeoLocation,java.lang.String) -> createPlace
    1688:1688:twitter4j.Trends getLocationTrends(int) -> getLocationTrends
    1696:1696:twitter4j.Trends getPlaceTrends(int) -> getPlaceTrends
    1705:1705:twitter4j.ResponseList getAvailableTrends() -> getAvailableTrends
    1714:1714:twitter4j.ResponseList getAvailableTrends(twitter4j.GeoLocation) -> getAvailableTrends
    1722:1722:twitter4j.ResponseList getClosestTrends(twitter4j.GeoLocation) -> getClosestTrends
    1735:1735:twitter4j.User reportSpam(long) -> reportSpam
    1743:1743:twitter4j.User reportSpam(java.lang.String) -> reportSpam
    1752:1752:twitter4j.TwitterAPIConfiguration getAPIConfiguration() -> getAPIConfiguration
    1760:1760:twitter4j.ResponseList getLanguages() -> getLanguages
    1769:1771:java.lang.String getPrivacyPolicy() -> getPrivacyPolicy
    1781:1783:java.lang.String getTermsOfService() -> getTermsOfService
    1792:1792:java.util.Map getRateLimitStatus() -> getRateLimitStatus
    1797:1797:java.util.Map getRateLimitStatus(java.lang.String[]) -> getRateLimitStatus
    1806:1806:twitter4j.RelatedResults getRelatedResults(long) -> getRelatedResults
    1810:1828:twitter4j.internal.http.HttpResponse get(java.lang.String) -> get
    1833:1846:twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> get
    1851:1864:twitter4j.internal.http.HttpResponse post(java.lang.String) -> post
    1869:1882:twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> post
    1887:1899:twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[]) -> mergeParameters
    1904:1916:twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter) -> mergeParameters
    1921:1921:twitter4j.internal.http.HttpParameter[] mergeImplicitParams(twitter4j.internal.http.HttpParameter[]) -> mergeImplicitParams
    1925:1925:boolean isOk(twitter4j.internal.http.HttpResponse) -> isOk
    1930:1930:java.lang.String toString() -> toString
twitter4j.TwitterResponse -> twitter4j.TwitterResponse:
    int NONE -> NONE
    int READ -> READ
    int READ_WRITE -> READ_WRITE
    int READ_WRITE_DIRECTMESSAGES -> READ_WRITE_DIRECTMESSAGES
    twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    int getAccessLevel() -> getAccessLevel
twitter4j.URLEntity -> twitter4j.URLEntity:
    java.lang.String getURL() -> getURL
    java.lang.String getExpandedURL() -> getExpandedURL
    java.lang.String getDisplayURL() -> getDisplayURL
    int getStart() -> getStart
    int getEnd() -> getEnd
twitter4j.User -> twitter4j.User:
    long getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    java.lang.String getLocation() -> getLocation
    java.lang.String getDescription() -> getDescription
    boolean isContributorsEnabled() -> isContributorsEnabled
    java.lang.String getProfileImageURL() -> getProfileImageURL
    java.lang.String getBiggerProfileImageURL() -> getBiggerProfileImageURL
    java.lang.String getMiniProfileImageURL() -> getMiniProfileImageURL
    java.lang.String getOriginalProfileImageURL() -> getOriginalProfileImageURL
    java.net.URL getProfileImageUrlHttps() -> getProfileImageUrlHttps
    java.lang.String getProfileImageURLHttps() -> getProfileImageURLHttps
    java.lang.String getBiggerProfileImageURLHttps() -> getBiggerProfileImageURLHttps
    java.lang.String getMiniProfileImageURLHttps() -> getMiniProfileImageURLHttps
    java.lang.String getOriginalProfileImageURLHttps() -> getOriginalProfileImageURLHttps
    java.lang.String getURL() -> getURL
    boolean isProtected() -> isProtected
    int getFollowersCount() -> getFollowersCount
    twitter4j.Status getStatus() -> getStatus
    java.lang.String getProfileBackgroundColor() -> getProfileBackgroundColor
    java.lang.String getProfileTextColor() -> getProfileTextColor
    java.lang.String getProfileLinkColor() -> getProfileLinkColor
    java.lang.String getProfileSidebarFillColor() -> getProfileSidebarFillColor
    java.lang.String getProfileSidebarBorderColor() -> getProfileSidebarBorderColor
    boolean isProfileUseBackgroundImage() -> isProfileUseBackgroundImage
    boolean isShowAllInlineMedia() -> isShowAllInlineMedia
    int getFriendsCount() -> getFriendsCount
    java.util.Date getCreatedAt() -> getCreatedAt
    int getFavouritesCount() -> getFavouritesCount
    int getUtcOffset() -> getUtcOffset
    java.lang.String getTimeZone() -> getTimeZone
    java.lang.String getProfileBackgroundImageUrl() -> getProfileBackgroundImageUrl
    java.lang.String getProfileBackgroundImageURL() -> getProfileBackgroundImageURL
    java.lang.String getProfileBackgroundImageUrlHttps() -> getProfileBackgroundImageUrlHttps
    java.lang.String getProfileBannerURL() -> getProfileBannerURL
    java.lang.String getProfileBannerRetinaURL() -> getProfileBannerRetinaURL
    java.lang.String getProfileBannerIPadURL() -> getProfileBannerIPadURL
    java.lang.String getProfileBannerIPadRetinaURL() -> getProfileBannerIPadRetinaURL
    java.lang.String getProfileBannerMobileURL() -> getProfileBannerMobileURL
    java.lang.String getProfileBannerMobileRetinaURL() -> getProfileBannerMobileRetinaURL
    boolean isProfileBackgroundTiled() -> isProfileBackgroundTiled
    java.lang.String getLang() -> getLang
    int getStatusesCount() -> getStatusesCount
    boolean isGeoEnabled() -> isGeoEnabled
    boolean isVerified() -> isVerified
    boolean isTranslator() -> isTranslator
    int getListedCount() -> getListedCount
    boolean isFollowRequestSent() -> isFollowRequestSent
    twitter4j.URLEntity[] getDescriptionURLEntities() -> getDescriptionURLEntities
    twitter4j.URLEntity getURLEntity() -> getURLEntity
twitter4j.UserList -> twitter4j.UserList:
    int getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    java.lang.String getSlug() -> getSlug
    java.lang.String getDescription() -> getDescription
    int getSubscriberCount() -> getSubscriberCount
    int getMemberCount() -> getMemberCount
    java.net.URI getURI() -> getURI
    boolean isPublic() -> isPublic
    twitter4j.User getUser() -> getUser
    boolean isFollowing() -> isFollowing
twitter4j.UserMentionEntity -> twitter4j.UserMentionEntity:
    java.lang.String getName() -> getName
    java.lang.String getScreenName() -> getScreenName
    long getId() -> getId
    int getStart() -> getStart
    int getEnd() -> getEnd
twitter4j.Version -> twitter4j.Version:
    java.lang.String VERSION -> VERSION
    java.lang.String TITLE -> TITLE
    31:31:java.lang.String getVersion() -> getVersion
    40:41:void main(java.lang.String[]) -> main
twitter4j.api.DirectMessagesResources -> twitter4j.api.DirectMessagesResources:
    twitter4j.ResponseList getDirectMessages() -> getDirectMessages
    twitter4j.ResponseList getDirectMessages(twitter4j.Paging) -> getDirectMessages
    twitter4j.ResponseList getSentDirectMessages() -> getSentDirectMessages
    twitter4j.ResponseList getSentDirectMessages(twitter4j.Paging) -> getSentDirectMessages
    twitter4j.DirectMessage showDirectMessage(long) -> showDirectMessage
    twitter4j.DirectMessage destroyDirectMessage(long) -> destroyDirectMessage
    twitter4j.DirectMessage sendDirectMessage(long,java.lang.String) -> sendDirectMessage
    twitter4j.DirectMessage sendDirectMessage(java.lang.String,java.lang.String) -> sendDirectMessage
twitter4j.api.FavoritesResources -> twitter4j.api.FavoritesResources:
    twitter4j.ResponseList getFavorites() -> getFavorites
    twitter4j.ResponseList getFavorites(long) -> getFavorites
    twitter4j.ResponseList getFavorites(java.lang.String) -> getFavorites
    twitter4j.ResponseList getFavorites(twitter4j.Paging) -> getFavorites
    twitter4j.ResponseList getFavorites(long,twitter4j.Paging) -> getFavorites
    twitter4j.ResponseList getFavorites(java.lang.String,twitter4j.Paging) -> getFavorites
    twitter4j.Status createFavorite(long) -> createFavorite
    twitter4j.Status destroyFavorite(long) -> destroyFavorite
twitter4j.api.FriendsFollowersResources -> twitter4j.api.FriendsFollowersResources:
    twitter4j.IDs getFriendsIDs(long) -> getFriendsIDs
    twitter4j.IDs getFriendsIDs(long,long) -> getFriendsIDs
    twitter4j.IDs getFriendsIDs(java.lang.String,long) -> getFriendsIDs
    twitter4j.IDs getFollowersIDs(long) -> getFollowersIDs
    twitter4j.IDs getFollowersIDs(long,long) -> getFollowersIDs
    twitter4j.IDs getFollowersIDs(java.lang.String,long) -> getFollowersIDs
    twitter4j.ResponseList lookupFriendships(long[]) -> lookupFriendships
    twitter4j.ResponseList lookupFriendships(java.lang.String[]) -> lookupFriendships
    twitter4j.IDs getIncomingFriendships(long) -> getIncomingFriendships
    twitter4j.IDs getOutgoingFriendships(long) -> getOutgoingFriendships
    twitter4j.User createFriendship(long) -> createFriendship
    twitter4j.User createFriendship(java.lang.String) -> createFriendship
    twitter4j.User createFriendship(long,boolean) -> createFriendship
    twitter4j.User createFriendship(java.lang.String,boolean) -> createFriendship
    twitter4j.User destroyFriendship(long) -> destroyFriendship
    twitter4j.User destroyFriendship(java.lang.String) -> destroyFriendship
    twitter4j.Relationship updateFriendship(long,boolean,boolean) -> updateFriendship
    twitter4j.Relationship updateFriendship(java.lang.String,boolean,boolean) -> updateFriendship
    twitter4j.Relationship showFriendship(long,long) -> showFriendship
    twitter4j.Relationship showFriendship(java.lang.String,java.lang.String) -> showFriendship
    twitter4j.PagableResponseList getFriendsList(long,long) -> getFriendsList
    twitter4j.PagableResponseList getFriendsList(java.lang.String,long) -> getFriendsList
    twitter4j.PagableResponseList getFollowersList(long,long) -> getFollowersList
    twitter4j.PagableResponseList getFollowersList(java.lang.String,long) -> getFollowersList
twitter4j.api.HelpResources -> twitter4j.api.HelpResources:
    twitter4j.TwitterAPIConfiguration getAPIConfiguration() -> getAPIConfiguration
    twitter4j.ResponseList getLanguages() -> getLanguages
    java.lang.String getPrivacyPolicy() -> getPrivacyPolicy
    java.lang.String getTermsOfService() -> getTermsOfService
    java.util.Map getRateLimitStatus() -> getRateLimitStatus
    java.util.Map getRateLimitStatus(java.lang.String[]) -> getRateLimitStatus
twitter4j.api.HelpResources$Language -> twitter4j.api.HelpResources$Language:
    java.lang.String getName() -> getName
    java.lang.String getCode() -> getCode
    java.lang.String getStatus() -> getStatus
twitter4j.api.ListsResources -> twitter4j.api.ListsResources:
    twitter4j.ResponseList getUserLists(java.lang.String) -> getUserLists
    twitter4j.ResponseList getUserLists(long) -> getUserLists
    twitter4j.ResponseList getUserListStatuses(int,twitter4j.Paging) -> getUserListStatuses
    twitter4j.ResponseList getUserListStatuses(long,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    twitter4j.ResponseList getUserListStatuses(java.lang.String,java.lang.String,twitter4j.Paging) -> getUserListStatuses
    twitter4j.UserList destroyUserListMember(int,long) -> destroyUserListMember
    twitter4j.UserList deleteUserListMember(int,long) -> deleteUserListMember
    twitter4j.UserList destroyUserListMember(long,java.lang.String,long) -> destroyUserListMember
    twitter4j.UserList deleteUserListMember(long,java.lang.String,long) -> deleteUserListMember
    twitter4j.UserList destroyUserListMember(java.lang.String,java.lang.String,long) -> destroyUserListMember
    twitter4j.PagableResponseList getUserListMemberships(long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(long,long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long,boolean) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListMemberships(long,long,boolean) -> getUserListMemberships
    twitter4j.PagableResponseList getUserListSubscribers(int,long) -> getUserListSubscribers
    twitter4j.PagableResponseList getUserListSubscribers(long,java.lang.String,long) -> getUserListSubscribers
    twitter4j.PagableResponseList getUserListSubscribers(java.lang.String,java.lang.String,long) -> getUserListSubscribers
    twitter4j.UserList createUserListSubscription(int) -> createUserListSubscription
    twitter4j.UserList createUserListSubscription(long,java.lang.String) -> createUserListSubscription
    twitter4j.UserList createUserListSubscription(java.lang.String,java.lang.String) -> createUserListSubscription
    twitter4j.User showUserListSubscription(int,long) -> showUserListSubscription
    twitter4j.User showUserListSubscription(long,java.lang.String,long) -> showUserListSubscription
    twitter4j.User showUserListSubscription(java.lang.String,java.lang.String,long) -> showUserListSubscription
    twitter4j.UserList destroyUserListSubscription(int) -> destroyUserListSubscription
    twitter4j.UserList destroyUserListSubscription(long,java.lang.String) -> destroyUserListSubscription
    twitter4j.UserList destroyUserListSubscription(java.lang.String,java.lang.String) -> destroyUserListSubscription
    twitter4j.UserList createUserListMembers(int,long[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(int,long[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(long,java.lang.String,long[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(long,java.lang.String,long[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,long[]) -> createUserListMembers
    twitter4j.UserList createUserListMembers(int,java.lang.String[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(int,java.lang.String[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(long,java.lang.String,java.lang.String[]) -> createUserListMembers
    twitter4j.UserList addUserListMembers(long,java.lang.String,java.lang.String[]) -> addUserListMembers
    twitter4j.UserList createUserListMembers(java.lang.String,java.lang.String,java.lang.String[]) -> createUserListMembers
    twitter4j.User showUserListMembership(int,long) -> showUserListMembership
    twitter4j.User showUserListMembership(long,java.lang.String,long) -> showUserListMembership
    twitter4j.User showUserListMembership(java.lang.String,java.lang.String,long) -> showUserListMembership
    twitter4j.PagableResponseList getUserListMembers(int,long) -> getUserListMembers
    twitter4j.PagableResponseList getUserListMembers(long,java.lang.String,long) -> getUserListMembers
    twitter4j.PagableResponseList getUserListMembers(java.lang.String,java.lang.String,long) -> getUserListMembers
    twitter4j.UserList createUserListMember(int,long) -> createUserListMember
    twitter4j.UserList addUserListMember(int,long) -> addUserListMember
    twitter4j.UserList createUserListMember(long,java.lang.String,long) -> createUserListMember
    twitter4j.UserList addUserListMember(long,java.lang.String,long) -> addUserListMember
    twitter4j.UserList createUserListMember(java.lang.String,java.lang.String,long) -> createUserListMember
    twitter4j.UserList destroyUserList(int) -> destroyUserList
    twitter4j.UserList destroyUserList(long,java.lang.String) -> destroyUserList
    twitter4j.UserList destroyUserList(java.lang.String,java.lang.String) -> destroyUserList
    twitter4j.UserList updateUserList(int,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList updateUserList(long,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList updateUserList(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> updateUserList
    twitter4j.UserList createUserList(java.lang.String,boolean,java.lang.String) -> createUserList
    twitter4j.UserList showUserList(int) -> showUserList
    twitter4j.UserList showUserList(long,java.lang.String) -> showUserList
    twitter4j.UserList showUserList(java.lang.String,java.lang.String) -> showUserList
    twitter4j.PagableResponseList getUserListSubscriptions(java.lang.String,long) -> getUserListSubscriptions
twitter4j.api.PlacesGeoResources -> twitter4j.api.PlacesGeoResources:
    twitter4j.Place getGeoDetails(java.lang.String) -> getGeoDetails
    twitter4j.ResponseList reverseGeoCode(twitter4j.GeoQuery) -> reverseGeoCode
    twitter4j.ResponseList searchPlaces(twitter4j.GeoQuery) -> searchPlaces
    twitter4j.SimilarPlaces getSimilarPlaces(twitter4j.GeoLocation,java.lang.String,java.lang.String,java.lang.String) -> getSimilarPlaces
    twitter4j.Place createPlace(java.lang.String,java.lang.String,java.lang.String,twitter4j.GeoLocation,java.lang.String) -> createPlace
twitter4j.api.SavedSearchesResources -> twitter4j.api.SavedSearchesResources:
    twitter4j.ResponseList getSavedSearches() -> getSavedSearches
    twitter4j.SavedSearch showSavedSearch(int) -> showSavedSearch
    twitter4j.SavedSearch createSavedSearch(java.lang.String) -> createSavedSearch
    twitter4j.SavedSearch destroySavedSearch(int) -> destroySavedSearch
twitter4j.api.SearchResource -> twitter4j.api.SearchResource:
    twitter4j.QueryResult search(twitter4j.Query) -> search
twitter4j.api.SpamReportingResource -> twitter4j.api.SpamReportingResource:
    twitter4j.User reportSpam(long) -> reportSpam
    twitter4j.User reportSpam(java.lang.String) -> reportSpam
twitter4j.api.SuggestedUsersResources -> twitter4j.api.SuggestedUsersResources:
    twitter4j.ResponseList getUserSuggestions(java.lang.String) -> getUserSuggestions
    twitter4j.ResponseList getSuggestedUserCategories() -> getSuggestedUserCategories
    twitter4j.ResponseList getMemberSuggestions(java.lang.String) -> getMemberSuggestions
twitter4j.api.TimelinesResources -> twitter4j.api.TimelinesResources:
    twitter4j.ResponseList getMentions() -> getMentions
    twitter4j.ResponseList getMentionsTimeline() -> getMentionsTimeline
    twitter4j.ResponseList getMentions(twitter4j.Paging) -> getMentions
    twitter4j.ResponseList getMentionsTimeline(twitter4j.Paging) -> getMentionsTimeline
    twitter4j.ResponseList getUserTimeline(java.lang.String,twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(long,twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(java.lang.String) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(long) -> getUserTimeline
    twitter4j.ResponseList getUserTimeline() -> getUserTimeline
    twitter4j.ResponseList getUserTimeline(twitter4j.Paging) -> getUserTimeline
    twitter4j.ResponseList getHomeTimeline() -> getHomeTimeline
    twitter4j.ResponseList getHomeTimeline(twitter4j.Paging) -> getHomeTimeline
    twitter4j.ResponseList getRetweetsOfMe() -> getRetweetsOfMe
    twitter4j.ResponseList getRetweetsOfMe(twitter4j.Paging) -> getRetweetsOfMe
twitter4j.api.TrendsResources -> twitter4j.api.TrendsResources:
    twitter4j.Trends getLocationTrends(int) -> getLocationTrends
    twitter4j.Trends getPlaceTrends(int) -> getPlaceTrends
    twitter4j.ResponseList getAvailableTrends() -> getAvailableTrends
    twitter4j.ResponseList getAvailableTrends(twitter4j.GeoLocation) -> getAvailableTrends
    twitter4j.ResponseList getClosestTrends(twitter4j.GeoLocation) -> getClosestTrends
twitter4j.api.TweetsResources -> twitter4j.api.TweetsResources:
    twitter4j.ResponseList getRetweets(long) -> getRetweets
    twitter4j.Status showStatus(long) -> showStatus
    twitter4j.Status destroyStatus(long) -> destroyStatus
    twitter4j.Status updateStatus(java.lang.String) -> updateStatus
    twitter4j.Status updateStatus(twitter4j.StatusUpdate) -> updateStatus
    twitter4j.Status retweetStatus(long) -> retweetStatus
    twitter4j.OEmbed getOEmbed(twitter4j.OEmbedRequest) -> getOEmbed
twitter4j.api.UndocumentedResources -> twitter4j.api.UndocumentedResources:
    twitter4j.RelatedResults getRelatedResults(long) -> getRelatedResults
twitter4j.api.UsersResources -> twitter4j.api.UsersResources:
    twitter4j.AccountSettings getAccountSettings() -> getAccountSettings
    twitter4j.User verifyCredentials() -> verifyCredentials
    twitter4j.AccountSettings updateAccountSettings(java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateAccountSettings
    twitter4j.User updateProfile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfile
    twitter4j.User updateProfileBackgroundImage(java.io.File,boolean) -> updateProfileBackgroundImage
    twitter4j.User updateProfileBackgroundImage(java.io.InputStream,boolean) -> updateProfileBackgroundImage
    twitter4j.User updateProfileColors(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateProfileColors
    twitter4j.User updateProfileImage(java.io.File) -> updateProfileImage
    twitter4j.User updateProfileImage(java.io.InputStream) -> updateProfileImage
    twitter4j.PagableResponseList getBlocksList() -> getBlocksList
    twitter4j.PagableResponseList getBlocksList(long) -> getBlocksList
    twitter4j.IDs getBlocksIDs() -> getBlocksIDs
    twitter4j.IDs getBlocksIDs(long) -> getBlocksIDs
    twitter4j.User createBlock(long) -> createBlock
    twitter4j.User createBlock(java.lang.String) -> createBlock
    twitter4j.User destroyBlock(long) -> destroyBlock
    twitter4j.User destroyBlock(java.lang.String) -> destroyBlock
    twitter4j.ResponseList lookupUsers(long[]) -> lookupUsers
    twitter4j.ResponseList lookupUsers(java.lang.String[]) -> lookupUsers
    twitter4j.User showUser(long) -> showUser
    twitter4j.User showUser(java.lang.String) -> showUser
    twitter4j.ResponseList searchUsers(java.lang.String,int) -> searchUsers
    twitter4j.ResponseList getContributees(long) -> getContributees
    twitter4j.ResponseList getContributees(java.lang.String) -> getContributees
    twitter4j.ResponseList getContributors(long) -> getContributors
    twitter4j.ResponseList getContributors(java.lang.String) -> getContributors
    void removeProfileBanner() -> removeProfileBanner
    void updateProfileBanner(java.io.File) -> updateProfileBanner
    void updateProfileBanner(java.io.InputStream) -> updateProfileBanner
twitter4j.auth.AccessToken -> twitter4j.auth.AccessToken:
    long serialVersionUID -> serialVersionUID
    java.lang.String screenName -> screenName
    long userId -> userId
    70:70:java.lang.String getScreenName() -> getScreenName
    79:79:long getUserId() -> getUserId
    84:94:boolean equals(java.lang.Object) -> equals
    99:102:int hashCode() -> hashCode
    107:107:java.lang.String toString() -> toString
    28:28:java.lang.String getParameter(java.lang.String) -> getParameter
    28:28:java.lang.String getTokenSecret() -> getTokenSecret
    28:28:java.lang.String getToken() -> getToken
twitter4j.auth.Authorization -> twitter4j.auth.Authorization:
    java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    boolean isEnabled() -> isEnabled
twitter4j.auth.AuthorizationConfiguration -> twitter4j.auth.AuthorizationConfiguration:
    java.lang.String getUser() -> getUser
    java.lang.String getPassword() -> getPassword
    java.lang.String getOAuthConsumerKey() -> getOAuthConsumerKey
    java.lang.String getOAuthConsumerSecret() -> getOAuthConsumerSecret
    java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
twitter4j.auth.AuthorizationFactory -> twitter4j.auth.AuthorizationFactory:
    34:57:twitter4j.auth.Authorization getInstance(twitter4j.conf.Configuration) -> getInstance
twitter4j.auth.BasicAuthorization -> twitter4j.auth.BasicAuthorization:
    java.lang.String userId -> userId
    java.lang.String password -> password
    java.lang.String basic -> basic
    long serialVersionUID -> serialVersionUID
    42:42:java.lang.String getUserId() -> getUserId
    46:46:java.lang.String getPassword() -> getPassword
    50:53:java.lang.String encodeBasicAuthenticationString() -> encodeBasicAuthenticationString
    57:57:java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    64:64:boolean isEnabled() -> isEnabled
    69:74:boolean equals(java.lang.Object) -> equals
    80:80:int hashCode() -> hashCode
    85:85:java.lang.String toString() -> toString
twitter4j.auth.NullAuthorization -> twitter4j.auth.NullAuthorization:
    twitter4j.auth.NullAuthorization SINGLETON -> SINGLETON
    long serialVersionUID -> serialVersionUID
    37:37:twitter4j.auth.NullAuthorization getInstance() -> getInstance
    41:41:java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    45:45:boolean isEnabled() -> isEnabled
    50:50:boolean equals(java.lang.Object) -> equals
    55:55:java.lang.String toString() -> toString
    59:59:java.lang.Object readResolve() -> readResolve
twitter4j.auth.OAuthAuthorization -> twitter4j.auth.OAuthAuthorization:
    twitter4j.conf.Configuration conf -> conf
    twitter4j.internal.http.HttpClientWrapper http -> http
    java.lang.String HMAC_SHA1 -> HMAC_SHA1
    twitter4j.internal.http.HttpParameter OAUTH_SIGNATURE_METHOD -> OAUTH_SIGNATURE_METHOD
    twitter4j.internal.logging.Logger logger -> logger
    long serialVersionUID -> serialVersionUID
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String realm -> realm
    twitter4j.auth.OAuthToken oauthToken -> oauthToken
    java.util.Random RAND -> RAND
    72:72:java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    76:79:void ensureTokenIsAvailable() -> ensureTokenIsAvailable
    86:86:boolean isEnabled() -> isEnabled
    96:96:twitter4j.auth.RequestToken getOAuthRequestToken() -> getOAuthRequestToken
    104:104:twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String) -> getOAuthRequestToken
    112:123:twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String) -> getOAuthRequestToken
    131:136:twitter4j.auth.AccessToken getOAuthAccessToken() -> getOAuthAccessToken
    144:147:twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String) -> getOAuthAccessToken
    155:156:twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken) -> getOAuthAccessToken
    164:165:twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String) -> getOAuthAccessToken
    174:187:twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String,java.lang.String) -> getOAuthAccessToken
    196:197:void setOAuthAccessToken(twitter4j.auth.AccessToken) -> setOAuthAccessToken
    206:207:void setOAuthRealm(java.lang.String) -> setOAuthRealm
    211:243:java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.internal.http.HttpParameter[],java.lang.String,java.lang.String,twitter4j.auth.OAuthToken) -> generateAuthorizationHeader
    247:269:void parseGetParameters(java.lang.String,java.util.List) -> parseGetParameters
    278:280:java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.OAuthToken) -> generateAuthorizationHeader
    284:310:java.util.List generateOAuthSignatureHttpParams(java.lang.String,java.lang.String) -> generateOAuthSignatureHttpParams
    322:346:java.lang.String generateSignature(java.lang.String,twitter4j.auth.OAuthToken) -> generateSignature
    352:352:java.lang.String generateSignature(java.lang.String) -> generateSignature
    376:376:java.lang.String normalizeRequestParameters(twitter4j.internal.http.HttpParameter[]) -> normalizeRequestParameters
    380:381:java.lang.String normalizeRequestParameters(java.util.List) -> normalizeRequestParameters
    385:386:java.lang.String normalizeAuthorizationHeaders(java.util.List) -> normalizeAuthorizationHeaders
    390:392:java.util.List toParamList(twitter4j.internal.http.HttpParameter[]) -> toParamList
    402:402:java.lang.String encodeParameters(java.util.List) -> encodeParameters
    406:427:java.lang.String encodeParameters(java.util.List,java.lang.String,boolean) -> encodeParameters
    445:464:java.lang.String constructRequestURL(java.lang.String) -> constructRequestURL
    469:471:void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    476:488:boolean equals(java.lang.Object) -> equals
    493:496:int hashCode() -> hashCode
    501:501:java.lang.String toString() -> toString
twitter4j.auth.OAuthSupport -> twitter4j.auth.OAuthSupport:
    void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    twitter4j.auth.RequestToken getOAuthRequestToken() -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String) -> getOAuthRequestToken
    twitter4j.auth.AccessToken getOAuthAccessToken() -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String) -> getOAuthAccessToken
    twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String,java.lang.String) -> getOAuthAccessToken
    void setOAuthAccessToken(twitter4j.auth.AccessToken) -> setOAuthAccessToken
twitter4j.auth.OAuthToken -> twitter4j.auth.OAuthToken:
    long serialVersionUID -> serialVersionUID
    java.lang.String token -> token
    java.lang.String tokenSecret -> tokenSecret
    javax.crypto.spec.SecretKeySpec secretKeySpec -> secretKeySpec
    java.lang.String[] responseStr -> responseStr
    50:50:java.lang.String getToken() -> getToken
    54:54:java.lang.String getTokenSecret() -> getTokenSecret
    58:59:void setSecretKeySpec(javax.crypto.spec.SecretKeySpec) -> setSecretKeySpec
    62:62:javax.crypto.spec.SecretKeySpec getSecretKeySpec() -> getSecretKeySpec
    66:73:java.lang.String getParameter(java.lang.String) -> getParameter
    78:86:boolean equals(java.lang.Object) -> equals
    91:93:int hashCode() -> hashCode
    98:98:java.lang.String toString() -> toString
twitter4j.auth.RequestToken -> twitter4j.auth.RequestToken:
    twitter4j.conf.Configuration conf -> conf
    twitter4j.auth.OAuthSupport oauth -> oauth
    long serialVersionUID -> serialVersionUID
    55:55:java.lang.String getAuthorizationURL() -> getAuthorizationURL
    63:63:java.lang.String getAuthenticationURL() -> getAuthenticationURL
    28:28:java.lang.String toString() -> toString
    28:28:int hashCode() -> hashCode
    28:28:boolean equals(java.lang.Object) -> equals
    28:28:java.lang.String getParameter(java.lang.String) -> getParameter
    28:28:java.lang.String getTokenSecret() -> getTokenSecret
    28:28:java.lang.String getToken() -> getToken
twitter4j.conf.Configuration -> twitter4j.conf.Configuration:
    boolean isDalvik() -> isDalvik
    boolean isGAE() -> isGAE
    boolean isDebugEnabled() -> isDebugEnabled
    java.lang.String getUserAgent() -> getUserAgent
    java.lang.String getUser() -> getUser
    java.lang.String getPassword() -> getPassword
    java.util.Map getRequestHeaders() -> getRequestHeaders
    java.lang.String getHttpProxyHost() -> getHttpProxyHost
    java.lang.String getHttpProxyUser() -> getHttpProxyUser
    java.lang.String getHttpProxyPassword() -> getHttpProxyPassword
    int getHttpProxyPort() -> getHttpProxyPort
    int getHttpConnectionTimeout() -> getHttpConnectionTimeout
    int getHttpReadTimeout() -> getHttpReadTimeout
    int getHttpStreamingReadTimeout() -> getHttpStreamingReadTimeout
    int getHttpRetryCount() -> getHttpRetryCount
    int getHttpRetryIntervalSeconds() -> getHttpRetryIntervalSeconds
    int getHttpMaxTotalConnections() -> getHttpMaxTotalConnections
    int getHttpDefaultMaxPerRoute() -> getHttpDefaultMaxPerRoute
    java.lang.String getOAuthConsumerKey() -> getOAuthConsumerKey
    java.lang.String getOAuthConsumerSecret() -> getOAuthConsumerSecret
    java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
    java.lang.String getClientVersion() -> getClientVersion
    java.lang.String getClientURL() -> getClientURL
    java.lang.String getRestBaseURL() -> getRestBaseURL
    java.lang.String getStreamBaseURL() -> getStreamBaseURL
    java.lang.String getOAuthRequestTokenURL() -> getOAuthRequestTokenURL
    java.lang.String getOAuthAuthorizationURL() -> getOAuthAuthorizationURL
    java.lang.String getOAuthAccessTokenURL() -> getOAuthAccessTokenURL
    java.lang.String getOAuthAuthenticationURL() -> getOAuthAuthenticationURL
    java.lang.String getUserStreamBaseURL() -> getUserStreamBaseURL
    java.lang.String getSiteStreamBaseURL() -> getSiteStreamBaseURL
    boolean isIncludeMyRetweetEnabled() -> isIncludeMyRetweetEnabled
    boolean isJSONStoreEnabled() -> isJSONStoreEnabled
    boolean isMBeanEnabled() -> isMBeanEnabled
    boolean isUserStreamRepliesAllEnabled() -> isUserStreamRepliesAllEnabled
    boolean isStallWarningsEnabled() -> isStallWarningsEnabled
    java.lang.String getMediaProvider() -> getMediaProvider
    java.lang.String getMediaProviderAPIKey() -> getMediaProviderAPIKey
    java.util.Properties getMediaProviderParameters() -> getMediaProviderParameters
    int getAsyncNumThreads() -> getAsyncNumThreads
    long getContributingTo() -> getContributingTo
    java.lang.String getDispatcherImpl() -> getDispatcherImpl
    java.lang.String getLoggerFactory() -> getLoggerFactory
    boolean isIncludeRTsEnabled() -> isIncludeRTsEnabled
    boolean isIncludeEntitiesEnabled() -> isIncludeEntitiesEnabled
twitter4j.conf.ConfigurationBase -> twitter4j.conf.ConfigurationBase:
    boolean debug -> debug
    java.lang.String userAgent -> userAgent
    java.lang.String user -> user
    java.lang.String password -> password
    boolean useSSL -> useSSL
    boolean prettyDebug -> prettyDebug
    boolean gzipEnabled -> gzipEnabled
    java.lang.String httpProxyHost -> httpProxyHost
    java.lang.String httpProxyUser -> httpProxyUser
    java.lang.String httpProxyPassword -> httpProxyPassword
    int httpProxyPort -> httpProxyPort
    int httpConnectionTimeout -> httpConnectionTimeout
    int httpReadTimeout -> httpReadTimeout
    int httpStreamingReadTimeout -> httpStreamingReadTimeout
    int httpRetryCount -> httpRetryCount
    int httpRetryIntervalSeconds -> httpRetryIntervalSeconds
    int maxTotalConnections -> maxTotalConnections
    int defaultMaxPerRoute -> defaultMaxPerRoute
    java.lang.String oAuthConsumerKey -> oAuthConsumerKey
    java.lang.String oAuthConsumerSecret -> oAuthConsumerSecret
    java.lang.String oAuthAccessToken -> oAuthAccessToken
    java.lang.String oAuthAccessTokenSecret -> oAuthAccessTokenSecret
    java.lang.String oAuthRequestTokenURL -> oAuthRequestTokenURL
    java.lang.String oAuthAuthorizationURL -> oAuthAuthorizationURL
    java.lang.String oAuthAccessTokenURL -> oAuthAccessTokenURL
    java.lang.String oAuthAuthenticationURL -> oAuthAuthenticationURL
    java.lang.String restBaseURL -> restBaseURL
    java.lang.String streamBaseURL -> streamBaseURL
    java.lang.String userStreamBaseURL -> userStreamBaseURL
    java.lang.String siteStreamBaseURL -> siteStreamBaseURL
    java.lang.String dispatcherImpl -> dispatcherImpl
    java.lang.String loggerFactory -> loggerFactory
    int asyncNumThreads -> asyncNumThreads
    long contributingTo -> contributingTo
    boolean includeRTsEnabled -> includeRTsEnabled
    boolean includeEntitiesEnabled -> includeEntitiesEnabled
    boolean includeMyRetweetEnabled -> includeMyRetweetEnabled
    boolean jsonStoreEnabled -> jsonStoreEnabled
    boolean mbeanEnabled -> mbeanEnabled
    boolean userStreamRepliesAllEnabled -> userStreamRepliesAllEnabled
    boolean stallWarningsEnabled -> stallWarningsEnabled
    java.lang.String mediaProvider -> mediaProvider
    java.lang.String mediaProviderAPIKey -> mediaProviderAPIKey
    java.util.Properties mediaProviderParameters -> mediaProviderParameters
    java.lang.String clientVersion -> clientVersion
    java.lang.String clientURL -> clientURL
    java.lang.String DALVIK -> DALVIK
    java.lang.String GAE -> GAE
    java.lang.String DEFAULT_OAUTH_REQUEST_TOKEN_URL -> DEFAULT_OAUTH_REQUEST_TOKEN_URL
    java.lang.String DEFAULT_OAUTH_AUTHORIZATION_URL -> DEFAULT_OAUTH_AUTHORIZATION_URL
    java.lang.String DEFAULT_OAUTH_ACCESS_TOKEN_URL -> DEFAULT_OAUTH_ACCESS_TOKEN_URL
    java.lang.String DEFAULT_OAUTH_AUTHENTICATION_URL -> DEFAULT_OAUTH_AUTHENTICATION_URL
    java.lang.String DEFAULT_REST_BASE_URL -> DEFAULT_REST_BASE_URL
    java.lang.String DEFAULT_STREAM_BASE_URL -> DEFAULT_STREAM_BASE_URL
    java.lang.String DEFAULT_USER_STREAM_BASE_URL -> DEFAULT_USER_STREAM_BASE_URL
    java.lang.String DEFAULT_SITE_STREAM_BASE_URL -> DEFAULT_SITE_STREAM_BASE_URL
    boolean IS_DALVIK -> IS_DALVIK
    boolean IS_GAE -> IS_GAE
    long serialVersionUID -> serialVersionUID
    java.lang.String dalvikDetected -> dalvikDetected
    java.lang.String gaeDetected -> gaeDetected
    java.util.Map requestHeaders -> requestHeaders
    java.util.List instances -> instances
    207:228:void dumpConfiguration() -> dumpConfiguration
    231:231:boolean isDalvik() -> isDalvik
    235:235:boolean isGAE() -> isGAE
    240:240:boolean isDebugEnabled() -> isDebugEnabled
    244:245:void setDebug(boolean) -> setDebug
    249:249:java.lang.String getUserAgent() -> getUserAgent
    253:255:void setUserAgent(java.lang.String) -> setUserAgent
    259:259:java.lang.String getUser() -> getUser
    263:264:void setUser(java.lang.String) -> setUser
    268:268:java.lang.String getPassword() -> getPassword
    272:273:void setPassword(java.lang.String) -> setPassword
    277:277:boolean isPrettyDebugEnabled() -> isPrettyDebugEnabled
    281:283:void setUseSSL(boolean) -> setUseSSL
    286:287:void setPrettyDebugEnabled(boolean) -> setPrettyDebugEnabled
    290:292:void setGZIPEnabled(boolean) -> setGZIPEnabled
    296:296:boolean isGZIPEnabled() -> isGZIPEnabled
    303:315:void initRequestHeaders() -> initRequestHeaders
    319:319:java.util.Map getRequestHeaders() -> getRequestHeaders
    326:326:java.lang.String getHttpProxyHost() -> getHttpProxyHost
    330:331:void setHttpProxyHost(java.lang.String) -> setHttpProxyHost
    335:335:java.lang.String getHttpProxyUser() -> getHttpProxyUser
    339:340:void setHttpProxyUser(java.lang.String) -> setHttpProxyUser
    344:344:java.lang.String getHttpProxyPassword() -> getHttpProxyPassword
    348:349:void setHttpProxyPassword(java.lang.String) -> setHttpProxyPassword
    353:353:int getHttpProxyPort() -> getHttpProxyPort
    357:358:void setHttpProxyPort(int) -> setHttpProxyPort
    362:362:int getHttpConnectionTimeout() -> getHttpConnectionTimeout
    366:367:void setHttpConnectionTimeout(int) -> setHttpConnectionTimeout
    371:371:int getHttpReadTimeout() -> getHttpReadTimeout
    375:376:void setHttpReadTimeout(int) -> setHttpReadTimeout
    380:380:int getHttpStreamingReadTimeout() -> getHttpStreamingReadTimeout
    384:385:void setHttpStreamingReadTimeout(int) -> setHttpStreamingReadTimeout
    390:390:int getHttpRetryCount() -> getHttpRetryCount
    394:395:void setHttpRetryCount(int) -> setHttpRetryCount
    399:399:int getHttpRetryIntervalSeconds() -> getHttpRetryIntervalSeconds
    403:404:void setHttpRetryIntervalSeconds(int) -> setHttpRetryIntervalSeconds
    408:408:int getHttpMaxTotalConnections() -> getHttpMaxTotalConnections
    412:413:void setHttpMaxTotalConnections(int) -> setHttpMaxTotalConnections
    417:417:int getHttpDefaultMaxPerRoute() -> getHttpDefaultMaxPerRoute
    421:422:void setHttpDefaultMaxPerRoute(int) -> setHttpDefaultMaxPerRoute
    428:428:java.lang.String getOAuthConsumerKey() -> getOAuthConsumerKey
    432:434:void setOAuthConsumerKey(java.lang.String) -> setOAuthConsumerKey
    438:438:java.lang.String getOAuthConsumerSecret() -> getOAuthConsumerSecret
    442:444:void setOAuthConsumerSecret(java.lang.String) -> setOAuthConsumerSecret
    448:448:java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    452:453:void setOAuthAccessToken(java.lang.String) -> setOAuthAccessToken
    457:457:java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
    461:462:void setOAuthAccessTokenSecret(java.lang.String) -> setOAuthAccessTokenSecret
    466:466:int getAsyncNumThreads() -> getAsyncNumThreads
    470:471:void setAsyncNumThreads(int) -> setAsyncNumThreads
    475:475:long getContributingTo() -> getContributingTo
    479:480:void setContributingTo(long) -> setContributingTo
    484:484:java.lang.String getClientVersion() -> getClientVersion
    488:490:void setClientVersion(java.lang.String) -> setClientVersion
    494:494:java.lang.String getClientURL() -> getClientURL
    498:500:void setClientURL(java.lang.String) -> setClientURL
    504:504:java.lang.String getRestBaseURL() -> getRestBaseURL
    508:510:void setRestBaseURL(java.lang.String) -> setRestBaseURL
    513:528:void fixRestBaseURL() -> fixRestBaseURL
    532:532:java.lang.String getStreamBaseURL() -> getStreamBaseURL
    536:537:void setStreamBaseURL(java.lang.String) -> setStreamBaseURL
    541:541:java.lang.String getUserStreamBaseURL() -> getUserStreamBaseURL
    545:546:void setUserStreamBaseURL(java.lang.String) -> setUserStreamBaseURL
    550:550:java.lang.String getSiteStreamBaseURL() -> getSiteStreamBaseURL
    554:555:void setSiteStreamBaseURL(java.lang.String) -> setSiteStreamBaseURL
    559:559:java.lang.String getOAuthRequestTokenURL() -> getOAuthRequestTokenURL
    563:565:void setOAuthRequestTokenURL(java.lang.String) -> setOAuthRequestTokenURL
    569:569:java.lang.String getOAuthAuthorizationURL() -> getOAuthAuthorizationURL
    573:575:void setOAuthAuthorizationURL(java.lang.String) -> setOAuthAuthorizationURL
    579:579:java.lang.String getOAuthAccessTokenURL() -> getOAuthAccessTokenURL
    583:585:void setOAuthAccessTokenURL(java.lang.String) -> setOAuthAccessTokenURL
    589:589:java.lang.String getOAuthAuthenticationURL() -> getOAuthAuthenticationURL
    593:595:void setOAuthAuthenticationURL(java.lang.String) -> setOAuthAuthenticationURL
    599:599:java.lang.String getDispatcherImpl() -> getDispatcherImpl
    603:604:void setDispatcherImpl(java.lang.String) -> setDispatcherImpl
    608:608:java.lang.String getLoggerFactory() -> getLoggerFactory
    613:613:boolean isIncludeRTsEnabled() -> isIncludeRTsEnabled
    618:618:boolean isIncludeEntitiesEnabled() -> isIncludeEntitiesEnabled
    622:623:void setLoggerFactory(java.lang.String) -> setLoggerFactory
    626:627:void setIncludeRTsEnbled(boolean) -> setIncludeRTsEnbled
    630:631:void setIncludeEntitiesEnbled(boolean) -> setIncludeEntitiesEnbled
    634:634:boolean isIncludeMyRetweetEnabled() -> isIncludeMyRetweetEnabled
    638:639:void setIncludeMyRetweetEnabled(boolean) -> setIncludeMyRetweetEnabled
    642:642:boolean isJSONStoreEnabled() -> isJSONStoreEnabled
    646:647:void setJSONStoreEnabled(boolean) -> setJSONStoreEnabled
    651:651:boolean isMBeanEnabled() -> isMBeanEnabled
    655:656:void setMBeanEnabled(boolean) -> setMBeanEnabled
    660:660:boolean isUserStreamRepliesAllEnabled() -> isUserStreamRepliesAllEnabled
    664:665:void setUserStreamRepliesAllEnabled(boolean) -> setUserStreamRepliesAllEnabled
    669:669:boolean isStallWarningsEnabled() -> isStallWarningsEnabled
    673:674:void setStallWarningsEnabled(boolean) -> setStallWarningsEnabled
    678:678:java.lang.String getMediaProvider() -> getMediaProvider
    682:683:void setMediaProvider(java.lang.String) -> setMediaProvider
    687:687:java.lang.String getMediaProviderAPIKey() -> getMediaProviderAPIKey
    691:692:void setMediaProviderAPIKey(java.lang.String) -> setMediaProviderAPIKey
    696:696:java.util.Properties getMediaProviderParameters() -> getMediaProviderParameters
    700:701:void setMediaProviderParameters(java.util.Properties) -> setMediaProviderParameters
    704:715:java.lang.String fixURL(boolean,java.lang.String) -> fixURL
    721:797:boolean equals(java.lang.Object) -> equals
    802:851:int hashCode() -> hashCode
    856:856:java.lang.String toString() -> toString
    912:915:void cacheInstance(twitter4j.conf.ConfigurationBase) -> cacheInstance
    918:919:void cacheInstance() -> cacheInstance
    923:927:twitter4j.conf.ConfigurationBase getInstance(twitter4j.conf.ConfigurationBase) -> getInstance
    933:933:java.lang.Object readResolve() -> readResolve
twitter4j.conf.ConfigurationBuilder -> twitter4j.conf.ConfigurationBuilder:
    twitter4j.conf.ConfigurationBase configurationBean -> configurationBean
    34:36:twitter4j.conf.ConfigurationBuilder setUseSSL(boolean) -> setUseSSL
    40:42:twitter4j.conf.ConfigurationBuilder setPrettyDebugEnabled(boolean) -> setPrettyDebugEnabled
    46:48:twitter4j.conf.ConfigurationBuilder setGZIPEnabled(boolean) -> setGZIPEnabled
    52:54:twitter4j.conf.ConfigurationBuilder setDebugEnabled(boolean) -> setDebugEnabled
    58:60:twitter4j.conf.ConfigurationBuilder setUser(java.lang.String) -> setUser
    64:66:twitter4j.conf.ConfigurationBuilder setPassword(java.lang.String) -> setPassword
    70:72:twitter4j.conf.ConfigurationBuilder setHttpProxyHost(java.lang.String) -> setHttpProxyHost
    76:78:twitter4j.conf.ConfigurationBuilder setHttpProxyUser(java.lang.String) -> setHttpProxyUser
    82:84:twitter4j.conf.ConfigurationBuilder setHttpProxyPassword(java.lang.String) -> setHttpProxyPassword
    88:90:twitter4j.conf.ConfigurationBuilder setHttpProxyPort(int) -> setHttpProxyPort
    94:96:twitter4j.conf.ConfigurationBuilder setHttpConnectionTimeout(int) -> setHttpConnectionTimeout
    100:102:twitter4j.conf.ConfigurationBuilder setHttpReadTimeout(int) -> setHttpReadTimeout
    106:108:twitter4j.conf.ConfigurationBuilder setHttpStreamingReadTimeout(int) -> setHttpStreamingReadTimeout
    112:114:twitter4j.conf.ConfigurationBuilder setHttpRetryCount(int) -> setHttpRetryCount
    119:121:twitter4j.conf.ConfigurationBuilder setHttpMaxTotalConnections(int) -> setHttpMaxTotalConnections
    125:127:twitter4j.conf.ConfigurationBuilder setHttpDefaultMaxPerRoute(int) -> setHttpDefaultMaxPerRoute
    131:133:twitter4j.conf.ConfigurationBuilder setHttpRetryIntervalSeconds(int) -> setHttpRetryIntervalSeconds
    137:139:twitter4j.conf.ConfigurationBuilder setOAuthConsumerKey(java.lang.String) -> setOAuthConsumerKey
    143:145:twitter4j.conf.ConfigurationBuilder setOAuthConsumerSecret(java.lang.String) -> setOAuthConsumerSecret
    149:151:twitter4j.conf.ConfigurationBuilder setOAuthAccessToken(java.lang.String) -> setOAuthAccessToken
    155:157:twitter4j.conf.ConfigurationBuilder setOAuthAccessTokenSecret(java.lang.String) -> setOAuthAccessTokenSecret
    161:163:twitter4j.conf.ConfigurationBuilder setOAuthRequestTokenURL(java.lang.String) -> setOAuthRequestTokenURL
    167:169:twitter4j.conf.ConfigurationBuilder setOAuthAuthorizationURL(java.lang.String) -> setOAuthAuthorizationURL
    173:175:twitter4j.conf.ConfigurationBuilder setOAuthAccessTokenURL(java.lang.String) -> setOAuthAccessTokenURL
    179:181:twitter4j.conf.ConfigurationBuilder setOAuthAuthenticationURL(java.lang.String) -> setOAuthAuthenticationURL
    185:187:twitter4j.conf.ConfigurationBuilder setRestBaseURL(java.lang.String) -> setRestBaseURL
    191:193:twitter4j.conf.ConfigurationBuilder setStreamBaseURL(java.lang.String) -> setStreamBaseURL
    197:199:twitter4j.conf.ConfigurationBuilder setUserStreamBaseURL(java.lang.String) -> setUserStreamBaseURL
    203:205:twitter4j.conf.ConfigurationBuilder setSiteStreamBaseURL(java.lang.String) -> setSiteStreamBaseURL
    209:211:twitter4j.conf.ConfigurationBuilder setAsyncNumThreads(int) -> setAsyncNumThreads
    215:217:twitter4j.conf.ConfigurationBuilder setContributingTo(long) -> setContributingTo
    221:223:twitter4j.conf.ConfigurationBuilder setClientVersion(java.lang.String) -> setClientVersion
    227:229:twitter4j.conf.ConfigurationBuilder setClientURL(java.lang.String) -> setClientURL
    233:235:twitter4j.conf.ConfigurationBuilder setDispatcherImpl(java.lang.String) -> setDispatcherImpl
    239:241:twitter4j.conf.ConfigurationBuilder setIncludeRTsEnabled(boolean) -> setIncludeRTsEnabled
    245:247:twitter4j.conf.ConfigurationBuilder setIncludeEntitiesEnabled(boolean) -> setIncludeEntitiesEnabled
    251:253:twitter4j.conf.ConfigurationBuilder setIncludeMyRetweetEnabled(boolean) -> setIncludeMyRetweetEnabled
    257:259:twitter4j.conf.ConfigurationBuilder setJSONStoreEnabled(boolean) -> setJSONStoreEnabled
    263:265:twitter4j.conf.ConfigurationBuilder setMBeanEnabled(boolean) -> setMBeanEnabled
    269:271:twitter4j.conf.ConfigurationBuilder setUserStreamRepliesAllEnabled(boolean) -> setUserStreamRepliesAllEnabled
    275:277:twitter4j.conf.ConfigurationBuilder setMediaProvider(java.lang.String) -> setMediaProvider
    281:283:twitter4j.conf.ConfigurationBuilder setMediaProviderAPIKey(java.lang.String) -> setMediaProviderAPIKey
    287:289:twitter4j.conf.ConfigurationBuilder setMediaProviderParameters(java.util.Properties) -> setMediaProviderParameters
    293:295:twitter4j.conf.ConfigurationBuilder setLoggerImpl(java.lang.String) -> setLoggerImpl
    299:304:twitter4j.conf.Configuration build() -> build
    309:312:void checkNotBuilt() -> checkNotBuilt
twitter4j.conf.ConfigurationContext -> twitter4j.conf.ConfigurationContext:
    java.lang.String DEFAULT_CONFIGURATION_FACTORY -> DEFAULT_CONFIGURATION_FACTORY
    java.lang.String CONFIGURATION_IMPL -> CONFIGURATION_IMPL
    twitter4j.conf.ConfigurationFactory factory -> factory
    53:53:twitter4j.conf.Configuration getInstance() -> getInstance
    57:57:twitter4j.conf.Configuration getInstance(java.lang.String) -> getInstance
twitter4j.conf.ConfigurationFactory -> twitter4j.conf.ConfigurationFactory:
    twitter4j.conf.Configuration getInstance() -> getInstance
    twitter4j.conf.Configuration getInstance(java.lang.String) -> getInstance
    void dispose() -> dispose
twitter4j.conf.PropertyConfiguration -> twitter4j.conf.PropertyConfiguration:
    java.lang.String DEBUG -> DEBUG
    java.lang.String HTTP_USER_AGENT -> HTTP_USER_AGENT
    java.lang.String USER -> USER
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String HTTP_USE_SSL -> HTTP_USE_SSL
    java.lang.String HTTP_PRETTY_DEBUG -> HTTP_PRETTY_DEBUG
    java.lang.String HTTP_GZIP -> HTTP_GZIP
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_PROXY_HOST_FALLBACK -> HTTP_PROXY_HOST_FALLBACK
    java.lang.String HTTP_PROXY_USER -> HTTP_PROXY_USER
    java.lang.String HTTP_PROXY_PASSWORD -> HTTP_PROXY_PASSWORD
    java.lang.String HTTP_PROXY_PORT -> HTTP_PROXY_PORT
    java.lang.String HTTP_PROXY_PORT_FALLBACK -> HTTP_PROXY_PORT_FALLBACK
    java.lang.String HTTP_CONNECTION_TIMEOUT -> HTTP_CONNECTION_TIMEOUT
    java.lang.String HTTP_READ_TIMEOUT -> HTTP_READ_TIMEOUT
    java.lang.String HTTP_STREAMING_READ_TIMEOUT -> HTTP_STREAMING_READ_TIMEOUT
    java.lang.String HTTP_RETRY_COUNT -> HTTP_RETRY_COUNT
    java.lang.String HTTP_RETRY_INTERVAL_SECS -> HTTP_RETRY_INTERVAL_SECS
    java.lang.String HTTP_MAX_TOTAL_CONNECTIONS -> HTTP_MAX_TOTAL_CONNECTIONS
    java.lang.String HTTP_DEFAULT_MAX_PER_ROUTE -> HTTP_DEFAULT_MAX_PER_ROUTE
    java.lang.String OAUTH_CONSUMER_KEY -> OAUTH_CONSUMER_KEY
    java.lang.String OAUTH_CONSUMER_SECRET -> OAUTH_CONSUMER_SECRET
    java.lang.String OAUTH_ACCESS_TOKEN -> OAUTH_ACCESS_TOKEN
    java.lang.String OAUTH_ACCESS_TOKEN_SECRET -> OAUTH_ACCESS_TOKEN_SECRET
    java.lang.String OAUTH_REQUEST_TOKEN_URL -> OAUTH_REQUEST_TOKEN_URL
    java.lang.String OAUTH_AUTHORIZATION_URL -> OAUTH_AUTHORIZATION_URL
    java.lang.String OAUTH_ACCESS_TOKEN_URL -> OAUTH_ACCESS_TOKEN_URL
    java.lang.String OAUTH_AUTHENTICATION_URL -> OAUTH_AUTHENTICATION_URL
    java.lang.String REST_BASE_URL -> REST_BASE_URL
    java.lang.String STREAM_BASE_URL -> STREAM_BASE_URL
    java.lang.String USER_STREAM_BASE_URL -> USER_STREAM_BASE_URL
    java.lang.String SITE_STREAM_BASE_URL -> SITE_STREAM_BASE_URL
    java.lang.String ASYNC_NUM_THREADS -> ASYNC_NUM_THREADS
    java.lang.String CONTRIBUTING_TO -> CONTRIBUTING_TO
    java.lang.String ASYNC_DISPATCHER_IMPL -> ASYNC_DISPATCHER_IMPL
    java.lang.String INCLUDE_RTS -> INCLUDE_RTS
    java.lang.String INCLUDE_ENTITIES -> INCLUDE_ENTITIES
    java.lang.String INCLUDE_MY_RETWEET -> INCLUDE_MY_RETWEET
    java.lang.String LOGGER_FACTORY -> LOGGER_FACTORY
    java.lang.String JSON_STORE_ENABLED -> JSON_STORE_ENABLED
    java.lang.String MBEAN_ENABLED -> MBEAN_ENABLED
    java.lang.String STREAM_USER_REPLIES_ALL -> STREAM_USER_REPLIES_ALL
    java.lang.String STREAM_STALL_WARNINGS_ENABLED -> STREAM_STALL_WARNINGS_ENABLED
    java.lang.String MEDIA_PROVIDER -> MEDIA_PROVIDER
    java.lang.String MEDIA_PROVIDER_API_KEY -> MEDIA_PROVIDER_API_KEY
    java.lang.String MEDIA_PROVIDER_PARAMETERS -> MEDIA_PROVIDER_PARAMETERS
    java.lang.String CLIENT_VERSION -> CLIENT_VERSION
    java.lang.String CLIENT_URL -> CLIENT_URL
    long serialVersionUID -> serialVersionUID
    152:152:boolean notNull(java.util.Properties,java.lang.String,java.lang.String) -> notNull
    156:175:boolean loadProperties(java.util.Properties,java.lang.String) -> loadProperties
    180:185:boolean loadProperties(java.util.Properties,java.io.InputStream) -> loadProperties
    189:203:void normalize(java.util.Properties) -> normalize
    215:228:void setFieldsWithTreePath(java.util.Properties,java.lang.String) -> setFieldsWithTreePath
    231:387:void setFieldsWithPrefix(java.util.Properties,java.lang.String) -> setFieldsWithPrefix
    390:391:boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String) -> getBoolean
    395:399:int getIntProperty(java.util.Properties,java.lang.String,java.lang.String) -> getIntProperty
    404:408:long getLongProperty(java.util.Properties,java.lang.String,java.lang.String) -> getLongProperty
    413:413:java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String) -> getString
    418:418:java.lang.Object readResolve() -> readResolve
    30:30:java.lang.String toString() -> toString
    30:30:int hashCode() -> hashCode
    30:30:boolean equals(java.lang.Object) -> equals
    30:30:java.util.Properties getMediaProviderParameters() -> getMediaProviderParameters
    30:30:java.lang.String getMediaProviderAPIKey() -> getMediaProviderAPIKey
    30:30:java.lang.String getMediaProvider() -> getMediaProvider
    30:30:boolean isStallWarningsEnabled() -> isStallWarningsEnabled
    30:30:boolean isUserStreamRepliesAllEnabled() -> isUserStreamRepliesAllEnabled
    30:30:boolean isMBeanEnabled() -> isMBeanEnabled
    30:30:boolean isJSONStoreEnabled() -> isJSONStoreEnabled
    30:30:void setIncludeMyRetweetEnabled(boolean) -> setIncludeMyRetweetEnabled
    30:30:boolean isIncludeMyRetweetEnabled() -> isIncludeMyRetweetEnabled
    30:30:boolean isIncludeEntitiesEnabled() -> isIncludeEntitiesEnabled
    30:30:boolean isIncludeRTsEnabled() -> isIncludeRTsEnabled
    30:30:java.lang.String getLoggerFactory() -> getLoggerFactory
    30:30:java.lang.String getDispatcherImpl() -> getDispatcherImpl
    30:30:java.lang.String getOAuthAuthenticationURL() -> getOAuthAuthenticationURL
    30:30:java.lang.String getOAuthAccessTokenURL() -> getOAuthAccessTokenURL
    30:30:java.lang.String getOAuthAuthorizationURL() -> getOAuthAuthorizationURL
    30:30:java.lang.String getOAuthRequestTokenURL() -> getOAuthRequestTokenURL
    30:30:java.lang.String getSiteStreamBaseURL() -> getSiteStreamBaseURL
    30:30:java.lang.String getUserStreamBaseURL() -> getUserStreamBaseURL
    30:30:java.lang.String getStreamBaseURL() -> getStreamBaseURL
    30:30:java.lang.String getRestBaseURL() -> getRestBaseURL
    30:30:java.lang.String getOAuthAccessTokenSecret() -> getOAuthAccessTokenSecret
    30:30:java.lang.String getOAuthAccessToken() -> getOAuthAccessToken
    30:30:int getHttpStreamingReadTimeout() -> getHttpStreamingReadTimeout
    30:30:java.util.Map getRequestHeaders() -> getRequestHeaders
    30:30:boolean isGZIPEnabled() -> isGZIPEnabled
    30:30:boolean isPrettyDebugEnabled() -> isPrettyDebugEnabled
    30:30:boolean isGAE() -> isGAE
    30:30:void dumpConfiguration() -> dumpConfiguration
twitter4j.conf.PropertyConfigurationFactory -> twitter4j.conf.PropertyConfigurationFactory:
    twitter4j.conf.PropertyConfiguration ROOT_CONFIGURATION -> ROOT_CONFIGURATION
    39:39:twitter4j.conf.Configuration getInstance() -> getInstance
    49:51:twitter4j.conf.Configuration getInstance(java.lang.String) -> getInstance
    60:60:void dispose() -> dispose
twitter4j.internal.async.Dispatcher -> twitter4j.internal.async.Dispatcher:
    void invokeLater(java.lang.Runnable) -> invokeLater
    void shutdown() -> shutdown
twitter4j.internal.async.DispatcherFactory -> twitter4j.internal.async.DispatcherFactory:
    java.lang.String dispatcherImpl -> dispatcherImpl
    twitter4j.conf.Configuration conf -> conf
    48:61:twitter4j.internal.async.Dispatcher getInstance() -> getInstance
twitter4j.internal.async.DispatcherImpl -> twitter4j.internal.async.DispatcherImpl:
    twitter4j.internal.async.ExecuteThread[] threads -> threads
    java.util.List q -> q
    java.lang.Object ticket -> ticket
    boolean active -> active
    50:55:void invokeLater(java.lang.Runnable) -> invokeLater
    61:77:java.lang.Runnable poll() -> poll
    84:93:void shutdown() -> shutdown
    28:28:boolean access$000(twitter4j.internal.async.DispatcherImpl) -> access$000
twitter4j.internal.async.DispatcherImpl$1 -> twitter4j.internal.async.DispatcherImpl$1:
    twitter4j.internal.async.DispatcherImpl this$0 -> this$0
    41:44:void run() -> run
twitter4j.internal.async.ExecuteThread -> twitter4j.internal.async.ExecuteThread:
    twitter4j.internal.logging.Logger logger -> logger
    twitter4j.internal.async.DispatcherImpl q -> q
    boolean alive -> alive
    106:107:void shutdown() -> shutdown
    112:122:void run() -> run
twitter4j.internal.http.BASE64Encoder -> twitter4j.internal.http.BASE64Encoder:
    char last2byte -> last2byte
    char last4byte -> last4byte
    char last6byte -> last6byte
    char lead6byte -> lead6byte
    char lead4byte -> lead4byte
    char lead2byte -> lead2byte
    char[] encodeTable -> encodeTable
    38:76:java.lang.String encode(byte[]) -> encode
twitter4j.internal.http.HttpClient -> twitter4j.internal.http.HttpClient:
    twitter4j.internal.http.HttpResponse request(twitter4j.internal.http.HttpRequest) -> request
    void shutdown() -> shutdown
twitter4j.internal.http.HttpClientBase -> twitter4j.internal.http.HttpClientBase:
    twitter4j.internal.logging.Logger logger -> logger
    long serialVersionUID -> serialVersionUID
    twitter4j.internal.http.HttpClientConfiguration CONF -> CONF
    20:20:void shutdown() -> shutdown
    23:23:boolean isProxyConfigured() -> isProxyConfigured
    27:29:void write(java.io.DataOutputStream,java.lang.String) -> write
    33:40:boolean equals(java.lang.Object) -> equals
    45:45:int hashCode() -> hashCode
    50:50:java.lang.String toString() -> toString
twitter4j.internal.http.HttpClientConfiguration -> twitter4j.internal.http.HttpClientConfiguration:
    java.lang.String getHttpProxyHost() -> getHttpProxyHost
    int getHttpProxyPort() -> getHttpProxyPort
    java.lang.String getHttpProxyUser() -> getHttpProxyUser
    java.lang.String getHttpProxyPassword() -> getHttpProxyPassword
    int getHttpConnectionTimeout() -> getHttpConnectionTimeout
    int getHttpReadTimeout() -> getHttpReadTimeout
    int getHttpRetryCount() -> getHttpRetryCount
    int getHttpRetryIntervalSeconds() -> getHttpRetryIntervalSeconds
    int getHttpMaxTotalConnections() -> getHttpMaxTotalConnections
    int getHttpDefaultMaxPerRoute() -> getHttpDefaultMaxPerRoute
    boolean isPrettyDebugEnabled() -> isPrettyDebugEnabled
    boolean isGZIPEnabled() -> isGZIPEnabled
twitter4j.internal.http.HttpClientFactory -> twitter4j.internal.http.HttpClientFactory:
    java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR -> HTTP_CLIENT_CONSTRUCTOR
    java.lang.String HTTP_CLIENT_IMPLEMENTATION -> HTTP_CLIENT_IMPLEMENTATION
    62:68:twitter4j.internal.http.HttpClient getInstance(twitter4j.internal.http.HttpClientConfiguration) -> getInstance
twitter4j.internal.http.HttpClientImpl -> twitter4j.internal.http.HttpClientImpl:
    twitter4j.internal.logging.Logger logger -> logger
    boolean isJDK14orEarlier -> isJDK14orEarlier
    long serialVersionUID -> serialVersionUID
    java.util.Map instanceMap -> instanceMap
    75:80:twitter4j.internal.http.HttpClient getInstance(twitter4j.internal.http.HttpClientConfiguration) -> getInstance
    84:84:twitter4j.internal.http.HttpResponse get(java.lang.String) -> get
    88:88:twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> post
    94:205:twitter4j.internal.http.HttpResponse request(twitter4j.internal.http.HttpRequest) -> request
    215:233:void setHeaders(twitter4j.internal.http.HttpRequest,java.net.HttpURLConnection) -> setHeaders
    237:273:java.net.HttpURLConnection getConnection(java.lang.String) -> getConnection
twitter4j.internal.http.HttpClientImpl$1 -> twitter4j.internal.http.HttpClientImpl$1:
    twitter4j.internal.http.HttpClientImpl this$0 -> this$0
    248:252:java.net.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
twitter4j.internal.http.HttpClientWrapper -> twitter4j.internal.http.HttpClientWrapper:
    twitter4j.internal.http.HttpClientWrapperConfiguration wrapperConf -> wrapperConf
    twitter4j.internal.http.HttpClient http -> http
    java.util.Map requestHeaders -> requestHeaders
    long serialVersionUID -> serialVersionUID
    twitter4j.internal.http.HttpResponseListener httpResponseListener -> httpResponseListener
    55:56:void shutdown() -> shutdown
    61:72:twitter4j.internal.http.HttpResponse request(twitter4j.internal.http.HttpRequest) -> request
    76:77:void setHttpResponseListener(twitter4j.internal.http.HttpResponseListener) -> setHttpResponseListener
    81:81:twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> get
    85:85:twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> get
    89:89:twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.auth.Authorization) -> get
    93:93:twitter4j.internal.http.HttpResponse get(java.lang.String) -> get
    98:98:twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> post
    102:102:twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> post
    106:110:twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],java.util.Map) -> post
    114:114:twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.auth.Authorization) -> post
    118:118:twitter4j.internal.http.HttpResponse post(java.lang.String) -> post
    123:123:twitter4j.internal.http.HttpResponse delete(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> delete
    127:127:twitter4j.internal.http.HttpResponse delete(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> delete
    132:132:twitter4j.internal.http.HttpResponse delete(java.lang.String,twitter4j.auth.Authorization) -> delete
    136:136:twitter4j.internal.http.HttpResponse delete(java.lang.String) -> delete
    141:141:twitter4j.internal.http.HttpResponse head(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> head
    145:145:twitter4j.internal.http.HttpResponse head(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> head
    150:150:twitter4j.internal.http.HttpResponse head(java.lang.String,twitter4j.auth.Authorization) -> head
    154:154:twitter4j.internal.http.HttpResponse head(java.lang.String) -> head
    159:159:twitter4j.internal.http.HttpResponse put(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization) -> put
    163:163:twitter4j.internal.http.HttpResponse put(java.lang.String,twitter4j.internal.http.HttpParameter[]) -> put
    167:167:twitter4j.internal.http.HttpResponse put(java.lang.String,twitter4j.auth.Authorization) -> put
    171:171:twitter4j.internal.http.HttpResponse put(java.lang.String) -> put
    176:185:boolean equals(java.lang.Object) -> equals
    190:193:int hashCode() -> hashCode
    198:198:java.lang.String toString() -> toString
twitter4j.internal.http.HttpClientWrapperConfiguration -> twitter4j.internal.http.HttpClientWrapperConfiguration:
    java.util.Map getRequestHeaders() -> getRequestHeaders
twitter4j.internal.http.HttpParameter -> twitter4j.internal.http.HttpParameter:
    java.lang.String name -> name
    java.lang.String value -> value
    java.io.File file -> file
    java.io.InputStream fileBody -> fileBody
    long serialVersionUID -> serialVersionUID
    java.lang.String JPEG -> JPEG
    java.lang.String GIF -> GIF
    java.lang.String PNG -> PNG
    java.lang.String OCTET -> OCTET
    74:74:java.lang.String getName() -> getName
    78:78:java.lang.String getValue() -> getValue
    82:82:java.io.File getFile() -> getFile
    86:86:java.io.InputStream getFileBody() -> getFileBody
    90:90:boolean isFile() -> isFile
    94:94:boolean hasFileBody() -> hasFileBody
    106:137:java.lang.String getContentType() -> getContentType
    142:155:boolean equals(java.lang.Object) -> equals
    159:169:boolean containsFile(twitter4j.internal.http.HttpParameter[]) -> containsFile
    174:181:boolean containsFile(java.util.List) -> containsFile
    185:185:twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,java.lang.String) -> getParameterArray
    189:189:twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,int) -> getParameterArray
    194:194:twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getParameterArray
    200:200:twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,int,java.lang.String,int) -> getParameterArray
    205:209:int hashCode() -> hashCode
    214:214:java.lang.String toString() -> toString
    225:230:int compareTo(java.lang.Object) -> compareTo
    234:248:java.lang.String encodeParameters(twitter4j.internal.http.HttpParameter[]) -> encodeParameters
    259:280:java.lang.String encode(java.lang.String) -> encode
twitter4j.internal.http.HttpRequest -> twitter4j.internal.http.HttpRequest:
    twitter4j.internal.http.RequestMethod method -> method
    java.lang.String url -> url
    twitter4j.internal.http.HttpParameter[] parameters -> parameters
    twitter4j.auth.Authorization authorization -> authorization
    java.util.Map requestHeaders -> requestHeaders
    long serialVersionUID -> serialVersionUID
    twitter4j.internal.http.HttpParameter[] NULL_PARAMETERS -> NULL_PARAMETERS
    68:68:twitter4j.internal.http.RequestMethod getMethod() -> getMethod
    72:72:twitter4j.internal.http.HttpParameter[] getParameters() -> getParameters
    76:76:java.lang.String getURL() -> getURL
    80:80:twitter4j.auth.Authorization getAuthorization() -> getAuthorization
    84:84:java.util.Map getRequestHeaders() -> getRequestHeaders
    89:104:boolean equals(java.lang.Object) -> equals
    109:114:int hashCode() -> hashCode
    119:119:java.lang.String toString() -> toString
twitter4j.internal.http.HttpResponse -> twitter4j.internal.http.HttpResponse:
    twitter4j.internal.logging.Logger logger -> logger
    twitter4j.internal.http.HttpClientConfiguration CONF -> CONF
    int statusCode -> statusCode
    java.lang.String responseAsString -> responseAsString
    java.io.InputStream is -> is
    boolean streamConsumed -> streamConsumed
    twitter4j.internal.org.json.JSONObject json -> json
    twitter4j.internal.org.json.JSONArray jsonArray -> jsonArray
    54:54:int getStatusCode() -> getStatusCode
    java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
    java.util.Map getResponseHeaderFields() -> getResponseHeaderFields
    73:76:java.io.InputStream asStream() -> asStream
    87:123:java.lang.String asString() -> asString
    136:167:twitter4j.internal.org.json.JSONObject asJSONObject() -> asJSONObject
    180:211:twitter4j.internal.org.json.JSONArray asJSONArray() -> asJSONArray
    216:218:java.io.Reader asReader() -> asReader
    224:227:void disconnectForcibly() -> disconnectForcibly
    void disconnect() -> disconnect
    233:233:java.lang.String toString() -> toString
twitter4j.internal.http.HttpResponseCode -> twitter4j.internal.http.HttpResponseCode:
    int OK -> OK
    int MULTIPLE_CHOICES -> MULTIPLE_CHOICES
    int FOUND -> FOUND
    int NOT_MODIFIED -> NOT_MODIFIED
    int BAD_REQUEST -> BAD_REQUEST
    int UNAUTHORIZED -> UNAUTHORIZED
    int FORBIDDEN -> FORBIDDEN
    int NOT_FOUND -> NOT_FOUND
    int NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    int ENHANCE_YOUR_CLAIM -> ENHANCE_YOUR_CLAIM
    int UNPROCESSABLE_ENTITY -> UNPROCESSABLE_ENTITY
    int TOO_MANY_REQUESTS -> TOO_MANY_REQUESTS
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int BAD_GATEWAY -> BAD_GATEWAY
    int SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    int GATEWAY_TIMEOUT -> GATEWAY_TIMEOUT
twitter4j.internal.http.HttpResponseEvent -> twitter4j.internal.http.HttpResponseEvent:
    twitter4j.internal.http.HttpRequest request -> request
    twitter4j.internal.http.HttpResponse response -> response
    twitter4j.TwitterException twitterException -> twitterException
    45:45:twitter4j.internal.http.HttpRequest getRequest() -> getRequest
    54:54:twitter4j.internal.http.HttpResponse getResponse() -> getResponse
    63:63:twitter4j.TwitterException getTwitterException() -> getTwitterException
    67:67:boolean isAuthenticated() -> isAuthenticated
    72:82:boolean equals(java.lang.Object) -> equals
    87:89:int hashCode() -> hashCode
    94:94:java.lang.String toString() -> toString
twitter4j.internal.http.HttpResponseImpl -> twitter4j.internal.http.HttpResponseImpl:
    java.net.HttpURLConnection con -> con
    52:52:java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
    57:57:java.util.Map getResponseHeaderFields() -> getResponseHeaderFields
    65:66:void disconnect() -> disconnect
twitter4j.internal.http.HttpResponseListener -> twitter4j.internal.http.HttpResponseListener:
    void httpResponseReceived(twitter4j.internal.http.HttpResponseEvent) -> httpResponseReceived
twitter4j.internal.http.RequestMethod -> twitter4j.internal.http.RequestMethod:
    twitter4j.internal.http.RequestMethod GET -> GET
    twitter4j.internal.http.RequestMethod POST -> POST
    twitter4j.internal.http.RequestMethod DELETE -> DELETE
    twitter4j.internal.http.RequestMethod HEAD -> HEAD
    twitter4j.internal.http.RequestMethod PUT -> PUT
    twitter4j.internal.http.RequestMethod[] $VALUES -> $VALUES
    22:22:twitter4j.internal.http.RequestMethod[] values() -> values
    22:22:twitter4j.internal.http.RequestMethod valueOf(java.lang.String) -> valueOf
twitter4j.internal.http.StreamingGZIPInputStream -> twitter4j.internal.http.StreamingGZIPInputStream:
    java.io.InputStream wrapped -> wrapped
    45:45:int available() -> available
twitter4j.internal.http.XAuthAuthorization -> twitter4j.internal.http.XAuthAuthorization:
    twitter4j.auth.BasicAuthorization basic -> basic
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    long serialVersionUID -> serialVersionUID
    39:39:java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest) -> getAuthorizationHeader
    43:43:java.lang.String getUserId() -> getUserId
    47:47:java.lang.String getPassword() -> getPassword
    51:51:java.lang.String getConsumerKey() -> getConsumerKey
    55:55:java.lang.String getConsumerSecret() -> getConsumerSecret
    59:61:void setOAuthConsumer(java.lang.String,java.lang.String) -> setOAuthConsumer
    65:65:boolean isEnabled() -> isEnabled
twitter4j.internal.json.AccountSettingsJSONImpl -> twitter4j.internal.json.AccountSettingsJSONImpl:
    long serialVersionUID -> serialVersionUID
    boolean SLEEP_TIME_ENABLED -> SLEEP_TIME_ENABLED
    java.lang.String SLEEP_START_TIME -> SLEEP_START_TIME
    java.lang.String SLEEP_END_TIME -> SLEEP_END_TIME
    twitter4j.Location[] TREND_LOCATION -> TREND_LOCATION
    boolean GEO_ENABLED -> GEO_ENABLED
    java.lang.String LANGUAGE -> LANGUAGE
    twitter4j.TimeZone TIMEZONE -> TIMEZONE
    boolean ALWAYS_USE_HTTPS -> ALWAYS_USE_HTTPS
    boolean DISCOVERABLE_BY_EMAIL -> DISCOVERABLE_BY_EMAIL
    87:87:boolean isSleepTimeEnabled() -> isSleepTimeEnabled
    92:92:java.lang.String getSleepStartTime() -> getSleepStartTime
    97:97:java.lang.String getSleepEndTime() -> getSleepEndTime
    102:102:twitter4j.Location[] getTrendLocations() -> getTrendLocations
    107:107:boolean isGeoEnabled() -> isGeoEnabled
    112:112:boolean isDiscoverableByEmail() -> isDiscoverableByEmail
    117:117:boolean isAlwaysUseHttps() -> isAlwaysUseHttps
    122:122:java.lang.String getLanguage() -> getLanguage
    127:127:twitter4j.TimeZone getTimeZone() -> getTimeZone
twitter4j.internal.json.AccountTotalsJSONImpl -> twitter4j.internal.json.AccountTotalsJSONImpl:
    long serialVersionUID -> serialVersionUID
    int updates -> updates
    int followers -> followers
    int favorites -> favorites
    int friends -> friends
    61:61:int getUpdates() -> getUpdates
    66:66:int getFollowers() -> getFollowers
    71:71:int getFavorites() -> getFavorites
    76:76:int getFriends() -> getFriends
    81:91:boolean equals(java.lang.Object) -> equals
    96:100:int hashCode() -> hashCode
    105:105:java.lang.String toString() -> toString
twitter4j.internal.json.CategoryJSONImpl -> twitter4j.internal.json.CategoryJSONImpl:
    java.lang.String name -> name
    java.lang.String slug -> slug
    int size -> size
    long serialVersionUID -> serialVersionUID
    44:47:void init(twitter4j.internal.org.json.JSONObject) -> init
    50:50:twitter4j.ResponseList createCategoriesList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createCategoriesList
    55:73:twitter4j.ResponseList createCategoriesList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createCategoriesList
    79:79:java.lang.String getName() -> getName
    84:84:java.lang.String getSlug() -> getSlug
    93:93:int getSize() -> getSize
    98:109:boolean equals(java.lang.Object) -> equals
    114:117:int hashCode() -> hashCode
    122:122:java.lang.String toString() -> toString
twitter4j.internal.json.DataObjectFactoryUtil -> twitter4j.internal.json.DataObjectFactoryUtil:
    java.lang.reflect.Method CLEAR_THREAD_LOCAL_MAP -> CLEAR_THREAD_LOCAL_MAP
    java.lang.reflect.Method REGISTER_JSON_OBJECT -> REGISTER_JSON_OBJECT
    64:68:void clearThreadLocalMap() -> clearThreadLocalMap
    77:81:java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object) -> registerJSONObject
twitter4j.internal.json.DirectMessageJSONImpl -> twitter4j.internal.json.DirectMessageJSONImpl:
    long serialVersionUID -> serialVersionUID
    long id -> id
    java.lang.String text -> text
    long senderId -> senderId
    long recipientId -> recipientId
    java.util.Date createdAt -> createdAt
    java.lang.String senderScreenName -> senderScreenName
    java.lang.String recipientScreenName -> recipientScreenName
    twitter4j.UserMentionEntity[] userMentionEntities -> userMentionEntities
    twitter4j.URLEntity[] urlEntities -> urlEntities
    twitter4j.HashtagEntity[] hashtagEntities -> hashtagEntities
    twitter4j.MediaEntity[] mediaEntities -> mediaEntities
    twitter4j.User sender -> sender
    twitter4j.User recipient -> recipient
    66:121:void init(twitter4j.internal.org.json.JSONObject) -> init
    130:130:long getId() -> getId
    138:138:java.lang.String getText() -> getText
    146:146:long getSenderId() -> getSenderId
    154:154:long getRecipientId() -> getRecipientId
    162:162:java.util.Date getCreatedAt() -> getCreatedAt
    170:170:java.lang.String getSenderScreenName() -> getSenderScreenName
    178:178:java.lang.String getRecipientScreenName() -> getRecipientScreenName
    188:188:twitter4j.User getSender() -> getSender
    198:198:twitter4j.User getRecipient() -> getRecipient
    206:206:twitter4j.UserMentionEntity[] getUserMentionEntities() -> getUserMentionEntities
    214:214:twitter4j.URLEntity[] getURLEntities() -> getURLEntities
    222:222:twitter4j.HashtagEntity[] getHashtagEntities() -> getHashtagEntities
    230:230:twitter4j.MediaEntity[] getMediaEntities() -> getMediaEntities
    236:257:twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createDirectMessageList
    263:263:int hashCode() -> hashCode
    268:274:boolean equals(java.lang.Object) -> equals
    279:279:java.lang.String toString() -> toString
twitter4j.internal.json.EntityIndex -> twitter4j.internal.json.EntityIndex:
    long serialVersionUID -> serialVersionUID
    int start -> start
    int end -> end
    29:35:int compareTo(twitter4j.internal.json.EntityIndex) -> compareTo
    39:40:void setStart(int) -> setStart
    43:44:void setEnd(int) -> setEnd
    47:47:int getStart() -> getStart
    51:51:int getEnd() -> getEnd
    22:22:int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.FriendshipJSONImpl -> twitter4j.internal.json.FriendshipJSONImpl:
    long serialVersionUID -> serialVersionUID
    long id -> id
    java.lang.String name -> name
    java.lang.String screenName -> screenName
    boolean following -> following
    boolean followedBy -> followedBy
    65:86:twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createFriendshipList
    92:92:long getId() -> getId
    97:97:java.lang.String getName() -> getName
    102:102:java.lang.String getScreenName() -> getScreenName
    107:107:boolean isFollowing() -> isFollowing
    112:112:boolean isFollowedBy() -> isFollowedBy
    117:128:boolean equals(java.lang.Object) -> equals
    133:138:int hashCode() -> hashCode
    143:143:java.lang.String toString() -> toString
twitter4j.internal.json.HTMLEntity -> twitter4j.internal.json.HTMLEntity:
    java.util.Map entityEscapeMap -> entityEscapeMap
    java.util.Map escapeEntityMap -> escapeEntityMap
    31:33:java.lang.String escape(java.lang.String) -> escape
    37:48:void escape(java.lang.StringBuilder) -> escape
    51:57:java.lang.String unescape(java.lang.String) -> unescape
    61:82:void unescape(java.lang.StringBuilder) -> unescape
    88:163:java.lang.String unescapeAndSlideEntityIncdices(java.lang.String,twitter4j.UserMentionEntity[],twitter4j.URLEntity[],twitter4j.HashtagEntity[],twitter4j.MediaEntity[]) -> unescapeAndSlideEntityIncdices
twitter4j.internal.json.HashtagEntityJSONImpl -> twitter4j.internal.json.HashtagEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String text -> text
    55:63:void init(twitter4j.internal.org.json.JSONObject) -> init
    72:72:java.lang.String getText() -> getText
    80:80:int getStart() -> getStart
    88:88:int getEnd() -> getEnd
    93:100:boolean equals(java.lang.Object) -> equals
    105:105:int hashCode() -> hashCode
    110:110:java.lang.String toString() -> toString
twitter4j.internal.json.IDsJSONImpl -> twitter4j.internal.json.IDsJSONImpl:
    long[] ids -> ids
    long previousCursor -> previousCursor
    long nextCursor -> nextCursor
    long serialVersionUID -> serialVersionUID
    58:85:void init(java.lang.String) -> init
    92:92:long[] getIDs() -> getIDs
    100:100:boolean hasPrevious() -> hasPrevious
    108:108:long getPreviousCursor() -> getPreviousCursor
    116:116:boolean hasNext() -> hasNext
    124:124:long getNextCursor() -> getNextCursor
    129:136:boolean equals(java.lang.Object) -> equals
    141:141:int hashCode() -> hashCode
    146:146:java.lang.String toString() -> toString
twitter4j.internal.json.LanguageJSONImpl -> twitter4j.internal.json.LanguageJSONImpl:
    java.lang.String name -> name
    java.lang.String code -> code
    java.lang.String status -> status
    43:48:void init(twitter4j.internal.org.json.JSONObject) -> init
    54:54:java.lang.String getName() -> getName
    59:59:java.lang.String getCode() -> getCode
    64:64:java.lang.String getStatus() -> getStatus
    68:68:twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createLanguageList
    74:96:twitter4j.ResponseList createLanguageList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createLanguageList
twitter4j.internal.json.LocationJSONImpl -> twitter4j.internal.json.LocationJSONImpl:
    int woeid -> woeid
    java.lang.String countryName -> countryName
    java.lang.String countryCode -> countryCode
    java.lang.String placeName -> placeName
    int placeCode -> placeCode
    java.lang.String name -> name
    java.lang.String url -> url
    long serialVersionUID -> serialVersionUID
    65:68:twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createLocationList
    74:92:twitter4j.ResponseList createLocationList(twitter4j.internal.org.json.JSONArray,boolean) -> createLocationList
    101:101:int getWoeid() -> getWoeid
    109:109:java.lang.String getCountryName() -> getCountryName
    117:117:java.lang.String getCountryCode() -> getCountryCode
    125:125:java.lang.String getPlaceName() -> getPlaceName
    133:133:int getPlaceCode() -> getPlaceCode
    141:141:java.lang.String getName() -> getName
    149:149:java.lang.String getURL() -> getURL
    154:161:boolean equals(java.lang.Object) -> equals
    166:166:int hashCode() -> hashCode
    171:171:java.lang.String toString() -> toString
twitter4j.internal.json.MediaEntityJSONImpl -> twitter4j.internal.json.MediaEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    long id -> id
    java.lang.String url -> url
    java.lang.String mediaURL -> mediaURL
    java.lang.String mediaURLHttps -> mediaURLHttps
    java.lang.String expandedURL -> expandedURL
    java.lang.String displayURL -> displayURL
    java.util.Map sizes -> sizes
    java.lang.String type -> type
    73:76:void addMediaEntitySizeIfNotNull(java.util.Map,twitter4j.internal.org.json.JSONObject,java.lang.Integer,java.lang.String) -> addMediaEntitySizeIfNotNull
    88:88:long getId() -> getId
    96:96:java.lang.String getMediaURL() -> getMediaURL
    104:104:java.lang.String getMediaURLHttps() -> getMediaURLHttps
    112:112:java.lang.String getURL() -> getURL
    120:120:java.lang.String getDisplayURL() -> getDisplayURL
    128:128:java.lang.String getExpandedURL() -> getExpandedURL
    133:133:java.util.Map getSizes() -> getSizes
    141:141:java.lang.String getType() -> getType
    149:149:int getStart() -> getStart
    157:157:int getEnd() -> getEnd
    221:228:boolean equals(java.lang.Object) -> equals
    233:233:int hashCode() -> hashCode
    238:238:java.lang.String toString() -> toString
    33:33:int compareTo(twitter4j.internal.json.EntityIndex) -> compareTo
twitter4j.internal.json.MediaEntityJSONImpl$Size -> twitter4j.internal.json.MediaEntityJSONImpl$Size:
    long serialVersionUID -> serialVersionUID
    int width -> width
    int height -> height
    int resize -> resize
    174:174:int getWidth() -> getWidth
    179:179:int getHeight() -> getHeight
    184:184:int getResize() -> getResize
    189:198:boolean equals(java.lang.Object) -> equals
    203:206:int hashCode() -> hashCode
    211:211:java.lang.String toString() -> toString
twitter4j.internal.json.OEmbedJSONImpl -> twitter4j.internal.json.OEmbedJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String html -> html
    java.lang.String authorName -> authorName
    java.lang.String url -> url
    java.lang.String version -> version
    long cacheAge -> cacheAge
    java.lang.String authorURL -> authorURL
    int width -> width
    56:69:void init(twitter4j.internal.org.json.JSONObject) -> init
    75:75:java.lang.String getHtml() -> getHtml
    80:80:java.lang.String getAuthorName() -> getAuthorName
    85:85:java.lang.String getURL() -> getURL
    90:90:java.lang.String getVersion() -> getVersion
    95:95:long getCacheAge() -> getCacheAge
    100:100:java.lang.String getAuthorURL() -> getAuthorURL
    105:105:int getWidth() -> getWidth
    110:123:boolean equals(java.lang.Object) -> equals
    128:135:int hashCode() -> hashCode
    140:140:java.lang.String toString() -> toString
    29:29:int getAccessLevel() -> getAccessLevel
    29:29:twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
twitter4j.internal.json.PagableResponseListImpl -> twitter4j.internal.json.PagableResponseListImpl:
    long previousCursor -> previousCursor
    long nextCursor -> nextCursor
    long serialVersionUID -> serialVersionUID
    50:50:boolean hasPrevious() -> hasPrevious
    58:58:long getPreviousCursor() -> getPreviousCursor
    66:66:boolean hasNext() -> hasNext
    74:74:long getNextCursor() -> getNextCursor
twitter4j.internal.json.PlaceJSONImpl -> twitter4j.internal.json.PlaceJSONImpl:
    java.lang.String name -> name
    java.lang.String streetAddress -> streetAddress
    java.lang.String countryCode -> countryCode
    java.lang.String id -> id
    java.lang.String country -> country
    java.lang.String placeType -> placeType
    java.lang.String url -> url
    java.lang.String fullName -> fullName
    java.lang.String boundingBoxType -> boundingBoxType
    twitter4j.GeoLocation[][] boundingBoxCoordinates -> boundingBoxCoordinates
    java.lang.String geometryType -> geometryType
    twitter4j.GeoLocation[][] geometryCoordinates -> geometryCoordinates
    twitter4j.Place[] containedWithIn -> containedWithIn
    long serialVersionUID -> serialVersionUID
    81:134:void init(twitter4j.internal.org.json.JSONObject) -> init
    138:138:int compareTo(twitter4j.Place) -> compareTo
    143:148:twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPlaceList
    155:177:twitter4j.ResponseList createPlaceList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPlaceList
    183:183:java.lang.String getName() -> getName
    188:188:java.lang.String getStreetAddress() -> getStreetAddress
    193:193:java.lang.String getCountryCode() -> getCountryCode
    198:198:java.lang.String getId() -> getId
    203:203:java.lang.String getCountry() -> getCountry
    208:208:java.lang.String getPlaceType() -> getPlaceType
    213:213:java.lang.String getURL() -> getURL
    218:218:java.lang.String getFullName() -> getFullName
    223:223:java.lang.String getBoundingBoxType() -> getBoundingBoxType
    228:228:twitter4j.GeoLocation[][] getBoundingBoxCoordinates() -> getBoundingBoxCoordinates
    233:233:java.lang.String getGeometryType() -> getGeometryType
    238:238:twitter4j.GeoLocation[][] getGeometryCoordinates() -> getGeometryCoordinates
    243:243:twitter4j.Place[] getContainedWithIn() -> getContainedWithIn
    249:255:boolean equals(java.lang.Object) -> equals
    260:260:int hashCode() -> hashCode
    265:265:java.lang.String toString() -> toString
    38:38:int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.QueryResultJSONImpl -> twitter4j.internal.json.QueryResultJSONImpl:
    long serialVersionUID -> serialVersionUID
    long sinceId -> sinceId
    long maxId -> maxId
    java.lang.String refreshUrl -> refreshUrl
    int count -> count
    double completedIn -> completedIn
    java.lang.String query -> query
    java.util.List tweets -> tweets
    java.lang.String nextResults -> nextResults
    java.lang.reflect.Method queryFactoryMethod -> queryFactoryMethod
    107:107:long getSinceId() -> getSinceId
    115:115:long getMaxId() -> getMaxId
    123:123:java.lang.String getRefreshUrl() -> getRefreshUrl
    128:128:java.lang.String getRefreshURL() -> getRefreshURL
    136:136:int getCount() -> getCount
    144:144:double getCompletedIn() -> getCompletedIn
    152:152:java.lang.String getQuery() -> getQuery
    160:160:java.util.List getTweets() -> getTweets
    168:176:twitter4j.Query nextQuery() -> nextQuery
    185:185:boolean hasNext() -> hasNext
    190:206:boolean equals(java.lang.Object) -> equals
    213:221:int hashCode() -> hashCode
    226:226:java.lang.String toString() -> toString
twitter4j.internal.json.RateLimitStatusJSONImpl -> twitter4j.internal.json.RateLimitStatusJSONImpl:
    long serialVersionUID -> serialVersionUID
    int remaining -> remaining
    int limit -> limit
    int resetTimeInSeconds -> resetTimeInSeconds
    int secondsUntilReset -> secondsUntilReset
    45:51:java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createRateLimitStatuses
    55:71:java.util.Map createRateLimitStatuses(twitter4j.internal.org.json.JSONObject) -> createRateLimitStatuses
    87:91:void init(twitter4j.internal.org.json.JSONObject) -> init
    94:120:twitter4j.RateLimitStatus createFromResponseHeader(twitter4j.internal.http.HttpResponse) -> createFromResponseHeader
    128:128:int getRemaining() -> getRemaining
    136:136:int getRemainingHits() -> getRemainingHits
    144:144:int getLimit() -> getLimit
    152:152:int getResetTimeInSeconds() -> getResetTimeInSeconds
    160:160:int getSecondsUntilReset() -> getSecondsUntilReset
    165:175:boolean equals(java.lang.Object) -> equals
    180:184:int hashCode() -> hashCode
    189:189:java.lang.String toString() -> toString
twitter4j.internal.json.RelatedResultsJSONImpl -> twitter4j.internal.json.RelatedResultsJSONImpl:
    java.lang.String TWEETS_WITH_CONVERSATION -> TWEETS_WITH_CONVERSATION
    java.lang.String TWEETS_WITH_REPLY -> TWEETS_WITH_REPLY
    java.lang.String TWEETS_FROM_USER -> TWEETS_FROM_USER
    long serialVersionUID -> serialVersionUID
    java.util.Map tweetsMap -> tweetsMap
    62:96:void init(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,boolean) -> init
    105:109:twitter4j.ResponseList getTweetsWithConversation() -> getTweetsWithConversation
    118:122:twitter4j.ResponseList getTweetsWithReply() -> getTweetsWithReply
    131:135:twitter4j.ResponseList getTweetsFromUser() -> getTweetsFromUser
    141:144:int hashCode() -> hashCode
    149:158:boolean equals(java.lang.Object) -> equals
    163:163:java.lang.String toString() -> toString
twitter4j.internal.json.RelationshipJSONImpl -> twitter4j.internal.json.RelationshipJSONImpl:
    long serialVersionUID -> serialVersionUID
    long targetUserId -> targetUserId
    java.lang.String targetUserScreenName -> targetUserScreenName
    boolean sourceBlockingTarget -> sourceBlockingTarget
    boolean sourceNotificationsEnabled -> sourceNotificationsEnabled
    boolean sourceFollowingTarget -> sourceFollowingTarget
    boolean sourceFollowedByTarget -> sourceFollowedByTarget
    long sourceUserId -> sourceUserId
    java.lang.String sourceUserScreenName -> sourceUserScreenName
    boolean wantRetweets -> wantRetweets
    85:106:twitter4j.ResponseList createRelationshipList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createRelationshipList
    116:116:long getSourceUserId() -> getSourceUserId
    124:124:long getTargetUserId() -> getTargetUserId
    132:132:boolean isSourceBlockingTarget() -> isSourceBlockingTarget
    140:140:java.lang.String getSourceUserScreenName() -> getSourceUserScreenName
    148:148:java.lang.String getTargetUserScreenName() -> getTargetUserScreenName
    156:156:boolean isSourceFollowingTarget() -> isSourceFollowingTarget
    164:164:boolean isTargetFollowingSource() -> isTargetFollowingSource
    172:172:boolean isSourceFollowedByTarget() -> isSourceFollowedByTarget
    180:180:boolean isTargetFollowedBySource() -> isTargetFollowedBySource
    188:188:boolean isSourceNotificationsEnabled() -> isSourceNotificationsEnabled
    196:196:boolean isSourceWantRetweets() -> isSourceWantRetweets
    201:213:boolean equals(java.lang.Object) -> equals
    218:226:int hashCode() -> hashCode
    231:231:java.lang.String toString() -> toString
twitter4j.internal.json.ResponseListImpl -> twitter4j.internal.json.ResponseListImpl:
    twitter4j.RateLimitStatus rateLimitStatus -> rateLimitStatus
    int accessLevel -> accessLevel
    long serialVersionUID -> serialVersionUID
    51:53:void init(twitter4j.internal.http.HttpResponse) -> init
    60:60:twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    68:68:int getAccessLevel() -> getAccessLevel
twitter4j.internal.json.SavedSearchJSONImpl -> twitter4j.internal.json.SavedSearchJSONImpl:
    java.util.Date createdAt -> createdAt
    java.lang.String query -> query
    int position -> position
    java.lang.String name -> name
    int id -> id
    long serialVersionUID -> serialVersionUID
    65:85:twitter4j.ResponseList createSavedSearchList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createSavedSearchList
    90:95:void init(twitter4j.internal.org.json.JSONObject) -> init
    99:99:int compareTo(twitter4j.SavedSearch) -> compareTo
    107:107:java.util.Date getCreatedAt() -> getCreatedAt
    115:115:java.lang.String getQuery() -> getQuery
    123:123:int getPosition() -> getPosition
    131:131:java.lang.String getName() -> getName
    139:139:int getId() -> getId
    144:151:boolean equals(java.lang.Object) -> equals
    156:161:int hashCode() -> hashCode
    166:166:java.lang.String toString() -> toString
    38:38:int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.SimilarPlacesImpl -> twitter4j.internal.json.SimilarPlacesImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String token -> token
    47:47:java.lang.String getToken() -> getToken
    52:59:twitter4j.SimilarPlaces createSimilarPlaces(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createSimilarPlaces
    32:32:int getAccessLevel() -> getAccessLevel
    32:32:twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
twitter4j.internal.json.StatusJSONImpl -> twitter4j.internal.json.StatusJSONImpl:
    twitter4j.internal.logging.Logger logger -> logger
    long serialVersionUID -> serialVersionUID
    java.util.Date createdAt -> createdAt
    long id -> id
    java.lang.String text -> text
    java.lang.String source -> source
    boolean isTruncated -> isTruncated
    long inReplyToStatusId -> inReplyToStatusId
    long inReplyToUserId -> inReplyToUserId
    boolean isFavorited -> isFavorited
    java.lang.String inReplyToScreenName -> inReplyToScreenName
    twitter4j.GeoLocation geoLocation -> geoLocation
    twitter4j.Place place -> place
    long retweetCount -> retweetCount
    boolean isPossiblySensitive -> isPossiblySensitive
    long[] contributorsIDs -> contributorsIDs
    twitter4j.Status retweetedStatus -> retweetedStatus
    twitter4j.UserMentionEntity[] userMentionEntities -> userMentionEntities
    twitter4j.URLEntity[] urlEntities -> urlEntities
    twitter4j.HashtagEntity[] hashtagEntities -> hashtagEntities
    twitter4j.MediaEntity[] mediaEntities -> mediaEntities
    long currentUserRetweetId -> currentUserRetweetId
    twitter4j.User user -> user
    93:172:void init(twitter4j.internal.org.json.JSONObject) -> init
    178:184:int compareTo(twitter4j.Status) -> compareTo
    192:192:java.util.Date getCreatedAt() -> getCreatedAt
    200:200:long getId() -> getId
    208:208:java.lang.String getText() -> getText
    216:216:java.lang.String getSource() -> getSource
    225:225:boolean isTruncated() -> isTruncated
    233:233:long getInReplyToStatusId() -> getInReplyToStatusId
    241:241:long getInReplyToUserId() -> getInReplyToUserId
    249:249:java.lang.String getInReplyToScreenName() -> getInReplyToScreenName
    257:257:twitter4j.GeoLocation getGeoLocation() -> getGeoLocation
    265:265:twitter4j.Place getPlace() -> getPlace
    273:273:long[] getContributors() -> getContributors
    281:281:boolean isFavorited() -> isFavorited
    292:292:twitter4j.User getUser() -> getUser
    300:300:boolean isRetweet() -> isRetweet
    308:308:twitter4j.Status getRetweetedStatus() -> getRetweetedStatus
    316:316:long getRetweetCount() -> getRetweetCount
    324:324:boolean isRetweetedByMe() -> isRetweetedByMe
    332:332:long getCurrentUserRetweetId() -> getCurrentUserRetweetId
    340:340:boolean isPossiblySensitive() -> isPossiblySensitive
    348:348:twitter4j.UserMentionEntity[] getUserMentionEntities() -> getUserMentionEntities
    356:356:twitter4j.URLEntity[] getURLEntities() -> getURLEntities
    364:364:twitter4j.HashtagEntity[] getHashtagEntities() -> getHashtagEntities
    372:372:twitter4j.MediaEntity[] getMediaEntities() -> getMediaEntities
    378:397:twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createStatusList
    403:403:int hashCode() -> hashCode
    408:414:boolean equals(java.lang.Object) -> equals
    419:419:java.lang.String toString() -> toString
    37:37:int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.TimeZoneJSONImpl -> twitter4j.internal.json.TimeZoneJSONImpl:
    java.lang.String NAME -> NAME
    java.lang.String TZINFO_NAME -> TZINFO_NAME
    int UTC_OFFSET -> UTC_OFFSET
    46:46:java.lang.String getName() -> getName
    51:51:java.lang.String tzinfoName() -> tzinfoName
    56:56:int utcOffset() -> utcOffset
twitter4j.internal.json.TrendJSONImpl -> twitter4j.internal.json.TrendJSONImpl:
    java.lang.String name -> name
    java.lang.String url -> url
    java.lang.String query -> query
    long serialVersionUID -> serialVersionUID
    54:54:java.lang.String getName() -> getName
    62:62:java.lang.String getUrl() -> getUrl
    70:70:java.lang.String getURL() -> getURL
    78:78:java.lang.String getQuery() -> getQuery
    83:94:boolean equals(java.lang.Object) -> equals
    99:102:int hashCode() -> hashCode
    107:107:java.lang.String toString() -> toString
twitter4j.internal.json.TrendsJSONImpl -> twitter4j.internal.json.TrendsJSONImpl:
    java.util.Date asOf -> asOf
    java.util.Date trendAt -> trendAt
    twitter4j.Trend[] trends -> trends
    twitter4j.Location location -> location
    long serialVersionUID -> serialVersionUID
    48:48:int compareTo(twitter4j.Trends) -> compareTo
    71:87:void init(java.lang.String,boolean) -> init
    102:131:twitter4j.ResponseList createTrendsList(twitter4j.internal.http.HttpResponse,boolean) -> createTrendsList
    136:151:twitter4j.Location extractLocation(twitter4j.internal.org.json.JSONObject,boolean) -> extractLocation
    155:160:twitter4j.Trend[] jsonArrayToTrendArray(twitter4j.internal.org.json.JSONArray,boolean) -> jsonArrayToTrendArray
    168:168:twitter4j.Trend[] getTrends() -> getTrends
    176:176:twitter4j.Location getLocation() -> getLocation
    184:184:java.util.Date getAsOf() -> getAsOf
    192:192:java.util.Date getTrendAt() -> getTrendAt
    197:208:boolean equals(java.lang.Object) -> equals
    213:216:int hashCode() -> hashCode
    221:221:java.lang.String toString() -> toString
    39:39:int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.TwitterAPIConfigurationJSONImpl -> twitter4j.internal.json.TwitterAPIConfigurationJSONImpl:
    long serialVersionUID -> serialVersionUID
    int photoSizeLimit -> photoSizeLimit
    int shortURLLength -> shortURLLength
    int shortURLLengthHttps -> shortURLLengthHttps
    int charactersReservedPerMedia -> charactersReservedPerMedia
    java.util.Map photoSizes -> photoSizes
    java.lang.String[] nonUsernamePaths -> nonUsernamePaths
    int maxMediaPerUpload -> maxMediaPerUpload
    91:91:int getPhotoSizeLimit() -> getPhotoSizeLimit
    99:99:int getShortURLLength() -> getShortURLLength
    107:107:int getShortURLLengthHttps() -> getShortURLLengthHttps
    115:115:int getCharactersReservedPerMedia() -> getCharactersReservedPerMedia
    123:123:java.util.Map getPhotoSizes() -> getPhotoSizes
    131:131:java.lang.String[] getNonUsernamePaths() -> getNonUsernamePaths
    139:139:int getMaxMediaPerUpload() -> getMaxMediaPerUpload
    144:160:boolean equals(java.lang.Object) -> equals
    165:172:int hashCode() -> hashCode
    177:177:java.lang.String toString() -> toString
twitter4j.internal.json.TwitterResponseImpl -> twitter4j.internal.json.TwitterResponseImpl:
    twitter4j.RateLimitStatus rateLimitStatus -> rateLimitStatus
    long serialVersionUID -> serialVersionUID
    int accessLevel -> accessLevel
    52:52:twitter4j.RateLimitStatus getRateLimitStatus() -> getRateLimitStatus
    60:60:int getAccessLevel() -> getAccessLevel
twitter4j.internal.json.URLEntityJSONImpl -> twitter4j.internal.json.URLEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String url -> url
    java.lang.String expandedURL -> expandedURL
    java.lang.String displayURL -> displayURL
    59:82:void init(twitter4j.internal.org.json.JSONObject) -> init
    89:89:java.lang.String getURL() -> getURL
    97:97:java.lang.String getExpandedURL() -> getExpandedURL
    105:105:java.lang.String getDisplayURL() -> getDisplayURL
    113:113:int getStart() -> getStart
    121:121:int getEnd() -> getEnd
    126:135:boolean equals(java.lang.Object) -> equals
    140:143:int hashCode() -> hashCode
    148:148:java.lang.String toString() -> toString
twitter4j.internal.json.UserJSONImpl -> twitter4j.internal.json.UserJSONImpl:
    long id -> id
    java.lang.String name -> name
    java.lang.String screenName -> screenName
    java.lang.String location -> location
    java.lang.String description -> description
    twitter4j.URLEntity[] descriptionURLEntities -> descriptionURLEntities
    twitter4j.URLEntity urlEntity -> urlEntity
    boolean isContributorsEnabled -> isContributorsEnabled
    java.lang.String profileImageUrl -> profileImageUrl
    java.lang.String profileImageUrlHttps -> profileImageUrlHttps
    java.lang.String url -> url
    boolean isProtected -> isProtected
    int followersCount -> followersCount
    twitter4j.Status status -> status
    java.lang.String profileBackgroundColor -> profileBackgroundColor
    java.lang.String profileTextColor -> profileTextColor
    java.lang.String profileLinkColor -> profileLinkColor
    java.lang.String profileSidebarFillColor -> profileSidebarFillColor
    java.lang.String profileSidebarBorderColor -> profileSidebarBorderColor
    boolean profileUseBackgroundImage -> profileUseBackgroundImage
    boolean showAllInlineMedia -> showAllInlineMedia
    int friendsCount -> friendsCount
    java.util.Date createdAt -> createdAt
    int favouritesCount -> favouritesCount
    int utcOffset -> utcOffset
    java.lang.String timeZone -> timeZone
    java.lang.String profileBackgroundImageUrl -> profileBackgroundImageUrl
    java.lang.String profileBackgroundImageUrlHttps -> profileBackgroundImageUrlHttps
    java.lang.String profileBannerImageUrl -> profileBannerImageUrl
    boolean profileBackgroundTiled -> profileBackgroundTiled
    java.lang.String lang -> lang
    int statusesCount -> statusesCount
    boolean isGeoEnabled -> isGeoEnabled
    boolean isVerified -> isVerified
    boolean translator -> translator
    int listedCount -> listedCount
    boolean isFollowRequestSent -> isFollowRequestSent
    long serialVersionUID -> serialVersionUID
    104:160:void init(twitter4j.internal.org.json.JSONObject) -> init
    175:190:twitter4j.URLEntity[] getURLEntitiesFromJSON(twitter4j.internal.org.json.JSONObject,java.lang.String) -> getURLEntitiesFromJSON
    195:195:int compareTo(twitter4j.User) -> compareTo
    203:203:long getId() -> getId
    211:211:java.lang.String getName() -> getName
    219:219:java.lang.String getScreenName() -> getScreenName
    227:227:java.lang.String getLocation() -> getLocation
    235:235:java.lang.String getDescription() -> getDescription
    243:243:boolean isContributorsEnabled() -> isContributorsEnabled
    251:251:java.lang.String getProfileImageURL() -> getProfileImageURL
    256:256:java.lang.String getBiggerProfileImageURL() -> getBiggerProfileImageURL
    261:261:java.lang.String getMiniProfileImageURL() -> getMiniProfileImageURL
    266:266:java.lang.String getOriginalProfileImageURL() -> getOriginalProfileImageURL
    270:280:java.lang.String toResizedURL(java.lang.String,java.lang.String) -> toResizedURL
    289:291:java.net.URL getProfileImageUrlHttps() -> getProfileImageUrlHttps
    296:296:java.lang.String getProfileImageURLHttps() -> getProfileImageURLHttps
    301:301:java.lang.String getBiggerProfileImageURLHttps() -> getBiggerProfileImageURLHttps
    306:306:java.lang.String getMiniProfileImageURLHttps() -> getMiniProfileImageURLHttps
    311:311:java.lang.String getOriginalProfileImageURLHttps() -> getOriginalProfileImageURLHttps
    319:319:java.lang.String getURL() -> getURL
    327:327:boolean isProtected() -> isProtected
    335:335:int getFollowersCount() -> getFollowersCount
    343:343:java.lang.String getProfileBackgroundColor() -> getProfileBackgroundColor
    348:348:java.lang.String getProfileTextColor() -> getProfileTextColor
    356:356:java.lang.String getProfileLinkColor() -> getProfileLinkColor
    364:364:java.lang.String getProfileSidebarFillColor() -> getProfileSidebarFillColor
    372:372:java.lang.String getProfileSidebarBorderColor() -> getProfileSidebarBorderColor
    380:380:boolean isProfileUseBackgroundImage() -> isProfileUseBackgroundImage
    388:388:boolean isShowAllInlineMedia() -> isShowAllInlineMedia
    396:396:int getFriendsCount() -> getFriendsCount
    404:404:twitter4j.Status getStatus() -> getStatus
    413:413:java.util.Date getCreatedAt() -> getCreatedAt
    421:421:int getFavouritesCount() -> getFavouritesCount
    429:429:int getUtcOffset() -> getUtcOffset
    437:437:java.lang.String getTimeZone() -> getTimeZone
    445:445:java.lang.String getProfileBackgroundImageUrl() -> getProfileBackgroundImageUrl
    453:453:java.lang.String getProfileBackgroundImageURL() -> getProfileBackgroundImageURL
    461:461:java.lang.String getProfileBackgroundImageUrlHttps() -> getProfileBackgroundImageUrlHttps
    469:469:java.lang.String getProfileBannerURL() -> getProfileBannerURL
    474:474:java.lang.String getProfileBannerRetinaURL() -> getProfileBannerRetinaURL
    479:479:java.lang.String getProfileBannerIPadURL() -> getProfileBannerIPadURL
    484:484:java.lang.String getProfileBannerIPadRetinaURL() -> getProfileBannerIPadRetinaURL
    489:489:java.lang.String getProfileBannerMobileURL() -> getProfileBannerMobileURL
    494:494:java.lang.String getProfileBannerMobileRetinaURL() -> getProfileBannerMobileRetinaURL
    502:502:boolean isProfileBackgroundTiled() -> isProfileBackgroundTiled
    510:510:java.lang.String getLang() -> getLang
    518:518:int getStatusesCount() -> getStatusesCount
    526:526:boolean isGeoEnabled() -> isGeoEnabled
    534:534:boolean isVerified() -> isVerified
    542:542:boolean isTranslator() -> isTranslator
    550:550:int getListedCount() -> getListedCount
    558:558:boolean isFollowRequestSent() -> isFollowRequestSent
    566:566:twitter4j.URLEntity[] getDescriptionURLEntities() -> getDescriptionURLEntities
    574:578:twitter4j.URLEntity getURLEntity() -> getURLEntity
    584:607:twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPagableUserList
    613:613:twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createUserList
    619:640:twitter4j.ResponseList createUserList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createUserList
    646:646:int hashCode() -> hashCode
    651:657:boolean equals(java.lang.Object) -> equals
    662:662:java.lang.String toString() -> toString
    37:37:int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.UserListJSONImpl -> twitter4j.internal.json.UserListJSONImpl:
    int id -> id
    java.lang.String name -> name
    java.lang.String fullName -> fullName
    java.lang.String slug -> slug
    java.lang.String description -> description
    int subscriberCount -> subscriberCount
    int memberCount -> memberCount
    java.lang.String uri -> uri
    boolean mode -> mode
    twitter4j.User user -> user
    boolean following -> following
    long serialVersionUID -> serialVersionUID
    69:85:void init(twitter4j.internal.org.json.JSONObject) -> init
    91:91:int compareTo(twitter4j.UserList) -> compareTo
    99:99:int getId() -> getId
    107:107:java.lang.String getName() -> getName
    115:115:java.lang.String getFullName() -> getFullName
    123:123:java.lang.String getSlug() -> getSlug
    131:131:java.lang.String getDescription() -> getDescription
    139:139:int getSubscriberCount() -> getSubscriberCount
    147:147:int getMemberCount() -> getMemberCount
    156:158:java.net.URI getURI() -> getURI
    167:167:boolean isPublic() -> isPublic
    175:175:boolean isFollowing() -> isFollowing
    183:183:twitter4j.User getUser() -> getUser
    189:212:twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createPagableUserListList
    219:241:twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration) -> createUserListList
    247:247:int hashCode() -> hashCode
    252:258:boolean equals(java.lang.Object) -> equals
    263:263:java.lang.String toString() -> toString
    36:36:int compareTo(java.lang.Object) -> compareTo
twitter4j.internal.json.UserMentionEntityJSONImpl -> twitter4j.internal.json.UserMentionEntityJSONImpl:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String screenName -> screenName
    long id -> id
    58:70:void init(twitter4j.internal.org.json.JSONObject) -> init
    79:79:java.lang.String getName() -> getName
    87:87:java.lang.String getScreenName() -> getScreenName
    95:95:long getId() -> getId
    103:103:int getStart() -> getStart
    111:111:int getEnd() -> getEnd
    116:125:boolean equals(java.lang.Object) -> equals
    130:133:int hashCode() -> hashCode
    138:138:java.lang.String toString() -> toString
twitter4j.internal.json.z_T4JInternalFactory -> twitter4j.internal.json.z_T4JInternalFactory:
    twitter4j.Status createStatus(twitter4j.internal.org.json.JSONObject) -> createStatus
    twitter4j.User createUser(twitter4j.internal.org.json.JSONObject) -> createUser
    twitter4j.UserList createAUserList(twitter4j.internal.org.json.JSONObject) -> createAUserList
    twitter4j.DirectMessage createDirectMessage(twitter4j.internal.org.json.JSONObject) -> createDirectMessage
    java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse) -> createRateLimitStatuses
    twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse) -> createStatus
    twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse) -> createStatusList
    twitter4j.Trends createTrends(twitter4j.internal.http.HttpResponse) -> createTrends
    twitter4j.User createUser(twitter4j.internal.http.HttpResponse) -> createUser
    twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse) -> createUserList
    twitter4j.ResponseList createUserListFromJSONArray(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray
    twitter4j.ResponseList createUserListFromJSONArray_Users(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray_Users
    twitter4j.QueryResult createQueryResult(twitter4j.internal.http.HttpResponse,twitter4j.Query) -> createQueryResult
    twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse) -> createIDs
    twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse) -> createPagableUserList
    twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse) -> createAUserList
    twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse) -> createPagableUserListList
    twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse) -> createUserListList
    twitter4j.ResponseList createCategoryList(twitter4j.internal.http.HttpResponse) -> createCategoryList
    twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse) -> createDirectMessage
    twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse) -> createDirectMessageList
    twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse) -> createRelationship
    twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse) -> createFriendshipList
    twitter4j.AccountTotals createAccountTotals(twitter4j.internal.http.HttpResponse) -> createAccountTotals
    twitter4j.AccountSettings createAccountSettings(twitter4j.internal.http.HttpResponse) -> createAccountSettings
    twitter4j.SavedSearch createSavedSearch(twitter4j.internal.http.HttpResponse) -> createSavedSearch
    twitter4j.ResponseList createSavedSearchList(twitter4j.internal.http.HttpResponse) -> createSavedSearchList
    twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse) -> createLocationList
    twitter4j.Place createPlace(twitter4j.internal.http.HttpResponse) -> createPlace
    twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse) -> createPlaceList
    twitter4j.SimilarPlaces createSimilarPlaces(twitter4j.internal.http.HttpResponse) -> createSimilarPlaces
    twitter4j.RelatedResults createRelatedResults(twitter4j.internal.http.HttpResponse) -> createRelatedResults
    twitter4j.TwitterAPIConfiguration createTwitterAPIConfiguration(twitter4j.internal.http.HttpResponse) -> createTwitterAPIConfiguration
    twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse) -> createLanguageList
    twitter4j.ResponseList createEmptyResponseList() -> createEmptyResponseList
    twitter4j.OEmbed createOEmbed(twitter4j.internal.http.HttpResponse) -> createOEmbed
twitter4j.internal.json.z_T4JInternalJSONImplFactory -> twitter4j.internal.json.z_T4JInternalJSONImplFactory:
    long serialVersionUID -> serialVersionUID
    twitter4j.conf.Configuration conf -> conf
    44:44:twitter4j.Status createStatus(twitter4j.internal.org.json.JSONObject) -> createStatus
    49:49:twitter4j.User createUser(twitter4j.internal.org.json.JSONObject) -> createUser
    54:54:twitter4j.UserList createAUserList(twitter4j.internal.org.json.JSONObject) -> createAUserList
    59:59:twitter4j.DirectMessage createDirectMessage(twitter4j.internal.org.json.JSONObject) -> createDirectMessage
    64:64:java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse) -> createRateLimitStatuses
    69:69:twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse) -> createStatus
    74:74:twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse) -> createStatusList
    87:98:twitter4j.GeoLocation createGeoLocation(twitter4j.internal.org.json.JSONObject) -> createGeoLocation
    104:115:twitter4j.GeoLocation[][] coordinatesAsGeoLocationArray(twitter4j.internal.org.json.JSONArray) -> coordinatesAsGeoLocationArray
    120:120:twitter4j.RateLimitStatus createRateLimitStatusFromResponseHeader(twitter4j.internal.http.HttpResponse) -> createRateLimitStatusFromResponseHeader
    125:125:twitter4j.Trends createTrends(twitter4j.internal.http.HttpResponse) -> createTrends
    130:130:twitter4j.User createUser(twitter4j.internal.http.HttpResponse) -> createUser
    135:135:twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse) -> createUserList
    140:140:twitter4j.ResponseList createUserListFromJSONArray(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray
    146:148:twitter4j.ResponseList createUserListFromJSONArray_Users(twitter4j.internal.http.HttpResponse) -> createUserListFromJSONArray_Users
    155:160:twitter4j.QueryResult createQueryResult(twitter4j.internal.http.HttpResponse,twitter4j.Query) -> createQueryResult
    167:167:twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse) -> createIDs
    172:172:twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse) -> createPagableUserList
    177:177:twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse) -> createAUserList
    182:182:twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse) -> createPagableUserListList
    187:187:twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse) -> createUserListList
    192:192:twitter4j.ResponseList createCategoryList(twitter4j.internal.http.HttpResponse) -> createCategoryList
    197:197:twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse) -> createDirectMessage
    202:202:twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse) -> createDirectMessageList
    207:207:twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse) -> createRelationship
    212:212:twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse) -> createFriendshipList
    217:217:twitter4j.AccountTotals createAccountTotals(twitter4j.internal.http.HttpResponse) -> createAccountTotals
    222:222:twitter4j.AccountSettings createAccountSettings(twitter4j.internal.http.HttpResponse) -> createAccountSettings
    227:227:twitter4j.SavedSearch createSavedSearch(twitter4j.internal.http.HttpResponse) -> createSavedSearch
    232:232:twitter4j.ResponseList createSavedSearchList(twitter4j.internal.http.HttpResponse) -> createSavedSearchList
    237:237:twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse) -> createLocationList
    242:242:twitter4j.Place createPlace(twitter4j.internal.http.HttpResponse) -> createPlace
    248:253:twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse) -> createPlaceList
    260:260:twitter4j.SimilarPlaces createSimilarPlaces(twitter4j.internal.http.HttpResponse) -> createSimilarPlaces
    265:265:twitter4j.RelatedResults createRelatedResults(twitter4j.internal.http.HttpResponse) -> createRelatedResults
    270:270:twitter4j.TwitterAPIConfiguration createTwitterAPIConfiguration(twitter4j.internal.http.HttpResponse) -> createTwitterAPIConfiguration
    275:275:twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse) -> createLanguageList
    280:280:twitter4j.ResponseList createEmptyResponseList() -> createEmptyResponseList
    285:285:twitter4j.OEmbed createOEmbed(twitter4j.internal.http.HttpResponse) -> createOEmbed
    295:295:twitter4j.HashtagEntity createHashtagEntity(int,int,java.lang.String) -> createHashtagEntity
    306:306:twitter4j.UserMentionEntity createUserMentionEntity(int,int,java.lang.String,java.lang.String,long) -> createUserMentionEntity
    316:316:twitter4j.URLEntity createUrlEntity(int,int,java.lang.String,java.lang.String,java.lang.String) -> createUrlEntity
    321:329:boolean equals(java.lang.Object) -> equals
    334:334:int hashCode() -> hashCode
    339:339:java.lang.String toString() -> toString
twitter4j.internal.json.z_T4JInternalParseUtil -> twitter4j.internal.json.z_T4JInternalParseUtil:
    java.util.Map formatMapQueue -> formatMapQueue
    44:44:java.lang.String getUnescapedString(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getUnescapedString
    49:55:java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getRawString
    60:67:java.lang.String getURLDecodedString(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getURLDecodedString
    72:82:java.util.Date parseTrendsDate(java.lang.String) -> parseTrendsDate
    87:87:java.util.Date getDate(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getDate
    91:95:java.util.Date getDate(java.lang.String,twitter4j.internal.org.json.JSONObject,java.lang.String) -> getDate
    103:123:java.util.Date getDate(java.lang.String,java.lang.String) -> getDate
    128:128:int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getInt
    132:139:int getInt(java.lang.String) -> getInt
    145:145:long getLong(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getLong
    149:157:long getLong(java.lang.String) -> getLong
    162:166:double getDouble(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getDouble
    171:175:boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject) -> getBoolean
    180:211:int toAccessLevel(twitter4j.internal.http.HttpResponse) -> toAccessLevel
twitter4j.internal.logging.CommonsLoggingLogger -> twitter4j.internal.logging.CommonsLoggingLogger:
    org.apache.commons.logging.Log LOGGER -> LOGGER
    36:36:boolean isDebugEnabled() -> isDebugEnabled
    44:44:boolean isInfoEnabled() -> isInfoEnabled
    52:52:boolean isWarnEnabled() -> isWarnEnabled
    60:60:boolean isErrorEnabled() -> isErrorEnabled
    68:69:void debug(java.lang.String) -> debug
    76:77:void debug(java.lang.String,java.lang.String) -> debug
    84:85:void info(java.lang.String) -> info
    92:93:void info(java.lang.String,java.lang.String) -> info
    100:101:void warn(java.lang.String) -> warn
    108:109:void warn(java.lang.String,java.lang.String) -> warn
    116:117:void error(java.lang.String) -> error
    124:125:void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.CommonsLoggingLoggerFactory -> twitter4j.internal.logging.CommonsLoggingLoggerFactory:
    30:30:twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.JULLogger -> twitter4j.internal.logging.JULLogger:
    java.util.logging.Logger LOGGER -> LOGGER
    36:36:boolean isDebugEnabled() -> isDebugEnabled
    44:44:boolean isInfoEnabled() -> isInfoEnabled
    52:52:boolean isWarnEnabled() -> isWarnEnabled
    60:60:boolean isErrorEnabled() -> isErrorEnabled
    68:69:void debug(java.lang.String) -> debug
    76:77:void debug(java.lang.String,java.lang.String) -> debug
    84:85:void info(java.lang.String) -> info
    92:93:void info(java.lang.String,java.lang.String) -> info
    100:101:void warn(java.lang.String) -> warn
    108:109:void warn(java.lang.String,java.lang.String) -> warn
    116:117:void error(java.lang.String) -> error
    124:125:void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.JULLoggerFactory -> twitter4j.internal.logging.JULLoggerFactory:
    25:25:twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.Log4JLogger -> twitter4j.internal.logging.Log4JLogger:
    org.apache.log4j.Logger LOGGER -> LOGGER
    35:35:boolean isDebugEnabled() -> isDebugEnabled
    43:43:boolean isInfoEnabled() -> isInfoEnabled
    51:51:boolean isWarnEnabled() -> isWarnEnabled
    59:59:boolean isErrorEnabled() -> isErrorEnabled
    67:68:void debug(java.lang.String) -> debug
    75:76:void debug(java.lang.String,java.lang.String) -> debug
    82:83:void info(java.lang.String) -> info
    90:91:void info(java.lang.String,java.lang.String) -> info
    98:99:void warn(java.lang.String) -> warn
    106:107:void warn(java.lang.String,java.lang.String) -> warn
    114:115:void error(java.lang.String) -> error
    122:123:void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.Log4JLoggerFactory -> twitter4j.internal.logging.Log4JLoggerFactory:
    30:30:twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.Logger -> twitter4j.internal.logging.Logger:
    twitter4j.internal.logging.LoggerFactory LOGGER_FACTORY -> LOGGER_FACTORY
    java.lang.String LOGGER_FACTORY_IMPLEMENTATION -> LOGGER_FACTORY_IMPLEMENTATION
    82:92:twitter4j.internal.logging.LoggerFactory getLoggerFactoryIfAvailable(java.lang.String,java.lang.String) -> getLoggerFactoryIfAvailable
    102:102:twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.LoggerFactory -> twitter4j.internal.logging.LoggerFactory:
    twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.NullLogger -> twitter4j.internal.logging.NullLogger:
    29:29:boolean isDebugEnabled() -> isDebugEnabled
    37:37:boolean isInfoEnabled() -> isInfoEnabled
    45:45:boolean isWarnEnabled() -> isWarnEnabled
    53:53:boolean isErrorEnabled() -> isErrorEnabled
    61:61:void debug(java.lang.String) -> debug
    68:68:void debug(java.lang.String,java.lang.String) -> debug
    75:75:void info(java.lang.String) -> info
    82:82:void info(java.lang.String,java.lang.String) -> info
    89:89:void warn(java.lang.String) -> warn
    96:96:void warn(java.lang.String,java.lang.String) -> warn
    103:103:void error(java.lang.String) -> error
    110:110:void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.NullLoggerFactory -> twitter4j.internal.logging.NullLoggerFactory:
    twitter4j.internal.logging.Logger SINGLETON -> SINGLETON
    31:31:twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.SLF4JLogger -> twitter4j.internal.logging.SLF4JLogger:
    org.slf4j.Logger LOGGER -> LOGGER
    35:35:boolean isDebugEnabled() -> isDebugEnabled
    43:43:boolean isInfoEnabled() -> isInfoEnabled
    51:51:boolean isWarnEnabled() -> isWarnEnabled
    59:59:boolean isErrorEnabled() -> isErrorEnabled
    67:68:void debug(java.lang.String) -> debug
    75:76:void debug(java.lang.String,java.lang.String) -> debug
    83:84:void info(java.lang.String) -> info
    91:92:void info(java.lang.String,java.lang.String) -> info
    99:100:void warn(java.lang.String) -> warn
    107:108:void warn(java.lang.String,java.lang.String) -> warn
    115:116:void error(java.lang.String) -> error
    123:124:void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.SLF4JLoggerFactory -> twitter4j.internal.logging.SLF4JLoggerFactory:
    30:30:twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.logging.StdOutLogger -> twitter4j.internal.logging.StdOutLogger:
    boolean DEBUG -> DEBUG
    17:17:boolean isDebugEnabled() -> isDebugEnabled
    25:25:boolean isInfoEnabled() -> isInfoEnabled
    33:33:boolean isWarnEnabled() -> isWarnEnabled
    41:41:boolean isErrorEnabled() -> isErrorEnabled
    49:52:void debug(java.lang.String) -> debug
    59:62:void debug(java.lang.String,java.lang.String) -> debug
    69:70:void info(java.lang.String) -> info
    77:78:void info(java.lang.String,java.lang.String) -> info
    85:86:void warn(java.lang.String) -> warn
    93:94:void warn(java.lang.String,java.lang.String) -> warn
    101:102:void error(java.lang.String) -> error
    109:111:void error(java.lang.String,java.lang.Throwable) -> error
twitter4j.internal.logging.StdOutLoggerFactory -> twitter4j.internal.logging.StdOutLoggerFactory:
    twitter4j.internal.logging.Logger SINGLETON -> SINGLETON
    31:31:twitter4j.internal.logging.Logger getLogger(java.lang.Class) -> getLogger
twitter4j.internal.org.json.JSONArray -> twitter4j.internal.org.json.JSONArray:
    java.util.ArrayList myArrayList -> myArrayList
    192:196:java.lang.Object get(int) -> get
    210:220:boolean getBoolean(int) -> getBoolean
    233:239:double getDouble(int) -> getDouble
    253:259:int getInt(int) -> getInt
    274:278:twitter4j.internal.org.json.JSONArray getJSONArray(int) -> getJSONArray
    292:296:twitter4j.internal.org.json.JSONObject getJSONObject(int) -> getJSONObject
    310:316:long getLong(int) -> getLong
    330:331:java.lang.String getString(int) -> getString
    342:342:boolean isNull(int) -> isNull
    356:365:java.lang.String join(java.lang.String) -> join
    375:375:int length() -> length
    387:387:java.lang.Object opt(int) -> opt
    398:399:twitter4j.internal.org.json.JSONArray put(boolean) -> put
    411:412:twitter4j.internal.org.json.JSONArray put(java.util.Collection) -> put
    422:423:twitter4j.internal.org.json.JSONArray put(int) -> put
    434:435:twitter4j.internal.org.json.JSONArray put(long) -> put
    447:448:twitter4j.internal.org.json.JSONArray put(java.util.Map) -> put
    461:462:twitter4j.internal.org.json.JSONArray put(java.lang.Object) -> put
    477:478:twitter4j.internal.org.json.JSONArray put(int,boolean) -> put
    493:494:twitter4j.internal.org.json.JSONArray put(int,java.util.Collection) -> put
    510:511:twitter4j.internal.org.json.JSONArray put(int,double) -> put
    526:527:twitter4j.internal.org.json.JSONArray put(int,int) -> put
    542:543:twitter4j.internal.org.json.JSONArray put(int,long) -> put
    558:559:twitter4j.internal.org.json.JSONArray put(int,java.util.Map) -> put
    577:589:twitter4j.internal.org.json.JSONArray put(int,java.lang.Object) -> put
    605:607:java.lang.String toString() -> toString
    625:625:java.lang.String toString(int) -> toString
    641:669:java.lang.String toString(int,int) -> toString
    684:706:java.io.Writer write(java.io.Writer) -> write
twitter4j.internal.org.json.JSONException -> twitter4j.internal.org.json.JSONException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> cause
    28:28:java.lang.Throwable getCause() -> getCause
twitter4j.internal.org.json.JSONObject -> twitter4j.internal.org.json.JSONObject:
    java.util.Map map -> map
    java.lang.Object NULL -> NULL
    369:379:twitter4j.internal.org.json.JSONObject append(java.lang.String,java.lang.Object) -> append
    390:398:java.lang.Object get(java.lang.String) -> get
    410:420:boolean getBoolean(java.lang.String) -> getBoolean
    433:439:int getInt(java.lang.String) -> getInt
    454:458:twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    472:476:twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    490:496:long getLong(java.lang.String) -> getLong
    509:510:java.lang.String getString(java.lang.String) -> getString
    521:521:boolean has(java.lang.String) -> has
    533:533:boolean isNull(java.lang.String) -> isNull
    543:543:java.util.Iterator keys() -> keys
    553:553:int length() -> length
    565:570:twitter4j.internal.org.json.JSONArray names() -> names
    582:599:java.lang.String numberToString(java.lang.Number) -> numberToString
    610:610:java.lang.Object opt(java.lang.String) -> opt
    615:658:void populateMap(java.lang.Object) -> populateMap
    670:671:twitter4j.internal.org.json.JSONObject put(java.lang.String,boolean) -> put
    685:686:twitter4j.internal.org.json.JSONObject put(java.lang.String,java.util.Collection) -> put
    699:700:twitter4j.internal.org.json.JSONObject put(java.lang.String,double) -> put
    713:714:twitter4j.internal.org.json.JSONObject put(java.lang.String,int) -> put
    727:728:twitter4j.internal.org.json.JSONObject put(java.lang.String,long) -> put
    742:743:twitter4j.internal.org.json.JSONObject put(java.lang.String,java.util.Map) -> put
    760:769:twitter4j.internal.org.json.JSONObject put(java.lang.String,java.lang.Object) -> put
    784:790:twitter4j.internal.org.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> putOnce
    806:809:twitter4j.internal.org.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> putOpt
    823:876:java.lang.String quote(java.lang.String) -> quote
    887:887:java.lang.Object remove(java.lang.String) -> remove
    897:897:java.util.Iterator sortedKeys() -> sortedKeys
    908:954:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    965:978:void testValidity(java.lang.Object) -> testValidity
    994:1009:java.lang.String toString() -> toString
    1028:1028:java.lang.String toString(int) -> toString
    1048:1086:java.lang.String toString(int,int) -> toString
    1113:1132:java.lang.String valueToString(java.lang.Object) -> valueToString
    1153:1177:java.lang.String valueToString(java.lang.Object,int,int) -> valueToString
    1195:1226:java.lang.Object wrap(java.lang.Object) -> wrap
    1242:1266:java.io.Writer write(java.io.Writer) -> write
twitter4j.internal.org.json.JSONObject$1 -> twitter4j.internal.org.json.JSONObject$1:
twitter4j.internal.org.json.JSONObject$Null -> twitter4j.internal.org.json.JSONObject$Null:
    101:101:java.lang.Object clone() -> clone
    112:112:boolean equals(java.lang.Object) -> equals
    121:121:java.lang.String toString() -> toString
twitter4j.internal.org.json.JSONTokener -> twitter4j.internal.org.json.JSONTokener:
    int character -> character
    boolean eof -> eof
    int index -> index
    int line -> line
    char previous -> previous
    java.io.Reader reader -> reader
    boolean usePrevious -> usePrevious
    89:96:void back() -> back
    100:100:boolean end() -> end
    111:116:boolean more() -> more
    127:153:char next() -> next
    166:171:char next(char) -> next
    184:198:java.lang.String next(int) -> next
    210:214:char nextClean() -> nextClean
    232:275:java.lang.String nextString(char) -> nextString
    288:323:java.lang.Object nextValue() -> nextValue
    335:335:twitter4j.internal.org.json.JSONException syntaxError(java.lang.String) -> syntaxError
    345:345:java.lang.String toString() -> toString
twitter4j.internal.util.z_T4JInternalStringUtil -> twitter4j.internal.util.z_T4JInternalStringUtil:
    32:36:java.lang.String maskString(java.lang.String) -> maskString
    43:61:java.lang.String[] split(java.lang.String,java.lang.String) -> split
    65:72:java.lang.String join(int[]) -> join
    76:83:java.lang.String join(long[]) -> join
    87:94:java.lang.String join(java.lang.String[]) -> join
    98:105:java.lang.String join(java.util.List) -> join
twitter4j.json.DataObjectFactory -> twitter4j.json.DataObjectFactory:
    java.lang.reflect.Constructor statusConstructor -> statusConstructor
    java.lang.reflect.Constructor userConstructor -> userConstructor
    java.lang.reflect.Constructor relationshipConstructor -> relationshipConstructor
    java.lang.reflect.Constructor placeConstructor -> placeConstructor
    java.lang.reflect.Constructor savedSearchConstructor -> savedSearchConstructor
    java.lang.reflect.Constructor trendConstructor -> trendConstructor
    java.lang.reflect.Constructor trendsConstructor -> trendsConstructor
    java.lang.reflect.Constructor IDsConstructor -> IDsConstructor
    java.lang.reflect.Method rateLimitStatusConstructor -> rateLimitStatusConstructor
    java.lang.reflect.Constructor categoryConstructor -> categoryConstructor
    java.lang.reflect.Constructor directMessageConstructor -> directMessageConstructor
    java.lang.reflect.Constructor locationConstructor -> locationConstructor
    java.lang.reflect.Constructor userListConstructor -> userListConstructor
    java.lang.reflect.Constructor relatedResultsConstructor -> relatedResultsConstructor
    java.lang.reflect.Constructor statusDeletionNoticeConstructor -> statusDeletionNoticeConstructor
    java.lang.reflect.Constructor accountTotalsConstructor -> accountTotalsConstructor
    java.lang.reflect.Constructor oembedConstructor -> oembedConstructor
    java.lang.ThreadLocal rawJsonMap -> rawJsonMap
    131:138:java.lang.String getRawJSON(java.lang.Object) -> getRawJSON
    152:161:twitter4j.Status createStatus(java.lang.String) -> createStatus
    175:184:twitter4j.User createUser(java.lang.String) -> createUser
    198:207:twitter4j.AccountTotals createAccountTotals(java.lang.String) -> createAccountTotals
    221:230:twitter4j.Relationship createRelationship(java.lang.String) -> createRelationship
    244:253:twitter4j.Place createPlace(java.lang.String) -> createPlace
    267:276:twitter4j.SavedSearch createSavedSearch(java.lang.String) -> createSavedSearch
    290:299:twitter4j.Trend createTrend(java.lang.String) -> createTrend
    313:319:twitter4j.Trends createTrends(java.lang.String) -> createTrends
    333:339:twitter4j.IDs createIDs(java.lang.String) -> createIDs
    353:362:java.util.Map createRateLimitStatus(java.lang.String) -> createRateLimitStatus
    376:385:twitter4j.Category createCategory(java.lang.String) -> createCategory
    399:408:twitter4j.DirectMessage createDirectMessage(java.lang.String) -> createDirectMessage
    422:431:twitter4j.Location createLocation(java.lang.String) -> createLocation
    445:454:twitter4j.UserList createUserList(java.lang.String) -> createUserList
    468:477:twitter4j.RelatedResults createRelatedResults(java.lang.String) -> createRelatedResults
    491:500:twitter4j.OEmbed createOEmbed(java.lang.String) -> createOEmbed
    525:553:java.lang.Object createObject(java.lang.String) -> createObject
    564:565:void clearThreadLocalMap() -> clearThreadLocalMap
    574:575:java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object) -> registerJSONObject
twitter4j.json.DataObjectFactory$1 -> twitter4j.json.DataObjectFactory$1:
    118:118:java.util.Map initialValue() -> initialValue
    115:115:java.lang.Object initialValue() -> initialValue
twitter4j.json.DataObjectFactory$2 -> twitter4j.json.DataObjectFactory$2:
    int[] $SwitchMap$twitter4j$json$JSONObjectType$Type -> $SwitchMap$twitter4j$json$JSONObjectType$Type
twitter4j.json.JSONObjectType -> twitter4j.json.JSONObjectType:
    twitter4j.internal.logging.Logger logger -> logger
    72:132:twitter4j.json.JSONObjectType$Type determine(twitter4j.internal.org.json.JSONObject) -> determine
twitter4j.json.JSONObjectType$Type -> twitter4j.json.JSONObjectType$Type:
    twitter4j.json.JSONObjectType$Type SENDER -> SENDER
    twitter4j.json.JSONObjectType$Type STATUS -> STATUS
    twitter4j.json.JSONObjectType$Type DIRECT_MESSAGE -> DIRECT_MESSAGE
    twitter4j.json.JSONObjectType$Type DELETE -> DELETE
    twitter4j.json.JSONObjectType$Type LIMIT -> LIMIT
    twitter4j.json.JSONObjectType$Type STALL_WARNING -> STALL_WARNING
    twitter4j.json.JSONObjectType$Type SCRUB_GEO -> SCRUB_GEO
    twitter4j.json.JSONObjectType$Type FRIENDS -> FRIENDS
    twitter4j.json.JSONObjectType$Type FAVORITE -> FAVORITE
    twitter4j.json.JSONObjectType$Type UNFAVORITE -> UNFAVORITE
    twitter4j.json.JSONObjectType$Type FOLLOW -> FOLLOW
    twitter4j.json.JSONObjectType$Type UNFOLLOW -> UNFOLLOW
    twitter4j.json.JSONObjectType$Type USER_LIST_MEMBER_ADDED -> USER_LIST_MEMBER_ADDED
    twitter4j.json.JSONObjectType$Type USER_LIST_MEMBER_DELETED -> USER_LIST_MEMBER_DELETED
    twitter4j.json.JSONObjectType$Type USER_LIST_SUBSCRIBED -> USER_LIST_SUBSCRIBED
    twitter4j.json.JSONObjectType$Type USER_LIST_UNSUBSCRIBED -> USER_LIST_UNSUBSCRIBED
    twitter4j.json.JSONObjectType$Type USER_LIST_CREATED -> USER_LIST_CREATED
    twitter4j.json.JSONObjectType$Type USER_LIST_UPDATED -> USER_LIST_UPDATED
    twitter4j.json.JSONObjectType$Type USER_LIST_DESTROYED -> USER_LIST_DESTROYED
    twitter4j.json.JSONObjectType$Type USER_UPDATE -> USER_UPDATE
    twitter4j.json.JSONObjectType$Type BLOCK -> BLOCK
    twitter4j.json.JSONObjectType$Type UNBLOCK -> UNBLOCK
    twitter4j.json.JSONObjectType$Type DISCONNECTION -> DISCONNECTION
    twitter4j.json.JSONObjectType$Type UNKNOWN -> UNKNOWN
    twitter4j.json.JSONObjectType$Type[] $VALUES -> $VALUES
    28:28:twitter4j.json.JSONObjectType$Type[] values() -> values
    28:28:twitter4j.json.JSONObjectType$Type valueOf(java.lang.String) -> valueOf
twitter4j.management.APIStatistics -> twitter4j.management.APIStatistics:
    twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR -> API_STATS_CALCULATOR
    java.util.Map METHOD_STATS_MAP -> METHOD_STATS_MAP
    int HISTORY_SIZE -> HISTORY_SIZE
    46:50:void methodCalled(java.lang.String,long,boolean) -> methodCalled
    53:59:twitter4j.management.InvocationStatisticsCalculator getMethodStatistics(java.lang.String) -> getMethodStatistics
    64:64:java.lang.Iterable getInvocationStatistics() -> getInvocationStatistics
    68:70:void reset() -> reset
    77:77:java.lang.String getName() -> getName
    81:81:long getCallCount() -> getCallCount
    85:85:long getErrorCount() -> getErrorCount
    89:89:long getTotalTime() -> getTotalTime
    93:93:long getAverageTime() -> getAverageTime
    98:105:java.util.Map getMethodLevelSummariesAsString() -> getMethodLevelSummariesAsString
    110:110:java.lang.String getMethodLevelSummary(java.lang.String) -> getMethodLevelSummary
twitter4j.management.APIStatisticsMBean -> twitter4j.management.APIStatisticsMBean:
    java.util.Map getMethodLevelSummariesAsString() -> getMethodLevelSummariesAsString
    java.lang.String getMethodLevelSummary(java.lang.String) -> getMethodLevelSummary
    java.lang.Iterable getInvocationStatistics() -> getInvocationStatistics
twitter4j.management.APIStatisticsOpenMBean -> twitter4j.management.APIStatisticsOpenMBean:
    java.lang.String[] ITEM_NAMES -> ITEM_NAMES
    javax.management.openmbean.OpenType[] ITEM_TYPES -> ITEM_TYPES
    java.lang.String[] ITEM_DESCRIPTIONS -> ITEM_DESCRIPTIONS
    javax.management.openmbean.CompositeType METHOD_STATS_TYPE -> METHOD_STATS_TYPE
    twitter4j.management.APIStatisticsMBean API_STATISTICS -> API_STATISTICS
    javax.management.openmbean.TabularType API_STATISTICS_TYPE -> API_STATISTICS_TYPE
    66:114:javax.management.MBeanInfo getMBeanInfo() -> getMBeanInfo
    118:138:javax.management.openmbean.TabularDataSupport getStatistics() -> getStatistics
    144:145:void reset() -> reset
    150:161:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    166:177:javax.management.AttributeList getAttributes(java.lang.String[]) -> getAttributes
    183:187:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[]) -> invoke
    196:196:void setAttribute(javax.management.Attribute) -> setAttribute
    202:202:javax.management.AttributeList setAttributes(javax.management.AttributeList) -> setAttributes
twitter4j.management.InvocationStatistics -> twitter4j.management.InvocationStatistics:
    java.lang.String getName() -> getName
    long getCallCount() -> getCallCount
    long getErrorCount() -> getErrorCount
    long getTotalTime() -> getTotalTime
    long getAverageTime() -> getAverageTime
    void reset() -> reset
twitter4j.management.InvocationStatisticsCalculator -> twitter4j.management.InvocationStatisticsCalculator:
    java.lang.String name -> name
    long[] times -> times
    int index -> index
    long callCount -> callCount
    long errorCount -> errorCount
    long totalTime -> totalTime
    43:51:void increment(long,boolean) -> increment
    55:55:java.lang.String getName() -> getName
    60:60:long getCallCount() -> getCallCount
    65:65:long getErrorCount() -> getErrorCount
    70:70:long getTotalTime() -> getTotalTime
    75:85:long getAverageTime() -> getAverageTime
    90:95:void reset() -> reset
    100:106:java.lang.String toString() -> toString
twitter4j.media.AbstractImageUploadImpl -> twitter4j.media.AbstractImageUploadImpl:
    java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1 -> TWITTER_VERIFY_CREDENTIALS_JSON_V1
    java.lang.String TWITTER_VERIFY_CREDENTIALS_XML_V1 -> TWITTER_VERIFY_CREDENTIALS_XML_V1
    java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1_1 -> TWITTER_VERIFY_CREDENTIALS_JSON_V1_1
    twitter4j.internal.http.HttpClientWrapper client -> client
    twitter4j.conf.Configuration conf -> conf
    java.lang.String apiKey -> apiKey
    twitter4j.auth.OAuthAuthorization oauth -> oauth
    java.lang.String uploadUrl -> uploadUrl
    twitter4j.internal.http.HttpParameter[] postParameter -> postParameter
    twitter4j.internal.http.HttpParameter[] appendParameter -> appendParameter
    twitter4j.internal.http.HttpParameter image -> image
    twitter4j.internal.http.HttpParameter message -> message
    java.util.Map headers -> headers
    twitter4j.internal.http.HttpResponse httpResponse -> httpResponse
    twitter4j.internal.logging.Logger logger -> logger
    72:73:java.lang.String upload(java.lang.String,java.io.InputStream) -> upload
    78:80:java.lang.String upload(java.lang.String,java.io.InputStream,java.lang.String) -> upload
    85:87:java.lang.String upload(java.io.File,java.lang.String) -> upload
    92:93:java.lang.String upload(java.io.File) -> upload
    97:124:java.lang.String upload() -> upload
    void preUpload() -> preUpload
    java.lang.String postUpload() -> postUpload
    132:137:twitter4j.internal.http.HttpParameter[] appendHttpParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[]) -> appendHttpParameters
    141:142:java.lang.String generateVerifyCredentialsAuthorizationHeader(java.lang.String) -> generateVerifyCredentialsAuthorizationHeader
    146:147:java.lang.String generateVerifyCredentialsAuthorizationURL(java.lang.String) -> generateVerifyCredentialsAuthorizationURL
    152:169:boolean equals(java.lang.Object) -> equals
    174:185:int hashCode() -> hashCode
    190:190:java.lang.String toString() -> toString
twitter4j.media.ImageUpload -> twitter4j.media.ImageUpload:
    java.lang.String upload(java.io.File,java.lang.String) -> upload
    java.lang.String upload(java.io.File) -> upload
    java.lang.String upload(java.lang.String,java.io.InputStream) -> upload
    java.lang.String upload(java.lang.String,java.io.InputStream,java.lang.String) -> upload
twitter4j.media.ImageUploadFactory -> twitter4j.media.ImageUploadFactory:
    twitter4j.conf.Configuration conf -> conf
    twitter4j.media.MediaProvider defaultMediaProvider -> defaultMediaProvider
    java.lang.String apiKey -> apiKey
    81:81:twitter4j.media.ImageUpload getInstance() -> getInstance
    92:92:twitter4j.media.ImageUpload getInstance(twitter4j.auth.Authorization) -> getInstance
    102:103:twitter4j.media.ImageUpload getInstance(twitter4j.media.MediaProvider) -> getInstance
    115:140:twitter4j.media.ImageUpload getInstance(twitter4j.media.MediaProvider,twitter4j.auth.Authorization) -> getInstance
twitter4j.media.ImgLyUpload -> twitter4j.media.ImgLyUpload:
    39:53:java.lang.String postUpload() -> postUpload
    58:70:void preUpload() -> preUpload
twitter4j.media.MediaProvider -> twitter4j.media.MediaProvider:
    twitter4j.media.MediaProvider TWITTER -> TWITTER
    twitter4j.media.MediaProvider IMG_LY -> IMG_LY
    twitter4j.media.MediaProvider PLIXI -> PLIXI
    twitter4j.media.MediaProvider LOCKERZ -> LOCKERZ
    twitter4j.media.MediaProvider TWIPPLE -> TWIPPLE
    twitter4j.media.MediaProvider TWITGOO -> TWITGOO
    twitter4j.media.MediaProvider TWITPIC -> TWITPIC
    twitter4j.media.MediaProvider YFROG -> YFROG
    twitter4j.media.MediaProvider MOBYPICTURE -> MOBYPICTURE
    twitter4j.media.MediaProvider POSTEROUS -> POSTEROUS
    twitter4j.media.MediaProvider[] $VALUES -> $VALUES
    23:23:twitter4j.media.MediaProvider[] values() -> values
    23:23:twitter4j.media.MediaProvider valueOf(java.lang.String) -> valueOf
twitter4j.media.MobypictureUpload -> twitter4j.media.MobypictureUpload:
    39:54:java.lang.String postUpload() -> postUpload
    59:77:void preUpload() -> preUpload
twitter4j.media.PlixiUpload -> twitter4j.media.PlixiUpload:
    40:54:java.lang.String postUpload() -> postUpload
    59:76:void preUpload() -> preUpload
twitter4j.media.PosterousUpload -> twitter4j.media.PosterousUpload:
    40:54:java.lang.String postUpload() -> postUpload
    59:72:void preUpload() -> preUpload
twitter4j.media.TwippleUpload -> twitter4j.media.TwippleUpload:
    36:50:java.lang.String postUpload() -> postUpload
    55:61:void preUpload() -> preUpload
twitter4j.media.TwitgooUpload -> twitter4j.media.TwitgooUpload:
    38:64:java.lang.String postUpload() -> postUpload
    69:85:void preUpload() -> preUpload
twitter4j.media.TwitpicUpload -> twitter4j.media.TwitpicUpload:
    41:55:java.lang.String postUpload() -> postUpload
    60:78:void preUpload() -> preUpload
twitter4j.media.TwitterUpload -> twitter4j.media.TwitterUpload:
    twitter4j.Twitter twitter -> twitter
    42:42:java.lang.String upload(java.io.File,java.lang.String) -> upload
    47:47:java.lang.String upload(java.io.File) -> upload
    52:52:java.lang.String upload(java.lang.String,java.io.InputStream) -> upload
    57:57:java.lang.String upload(java.lang.String,java.io.InputStream,java.lang.String) -> upload
    62:69:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    79:79:java.lang.String toString() -> toString
twitter4j.media.Version -> twitter4j.media.Version:
    java.lang.String VERSION -> VERSION
    java.lang.String TITLE -> TITLE
    31:31:java.lang.String getVersion() -> getVersion
    40:41:void main(java.lang.String[]) -> main
twitter4j.media.YFrogUpload -> twitter4j.media.YFrogUpload:
    40:54:java.lang.String postUpload() -> postUpload
    59:75:void preUpload() -> preUpload
twitter4j.util.CharacterUtil -> twitter4j.util.CharacterUtil:
    35:35:int count(java.lang.String) -> count
    45:45:boolean isExceedingLengthLimitation(java.lang.String) -> isExceedingLengthLimitation
twitter4j.util.TimeSpanConverter -> twitter4j.util.TimeSpanConverter:
    int ONE_HOUR_IN_SECONDS -> ONE_HOUR_IN_SECONDS
    int ONE_DAY_IN_SECONDS -> ONE_DAY_IN_SECONDS
    int ONE_MONTH_IN_SECONDS -> ONE_MONTH_IN_SECONDS
    long serialVersionUID -> serialVersionUID
    java.text.MessageFormat[] formats -> formats
    java.text.SimpleDateFormat dateMonth -> dateMonth
    java.text.SimpleDateFormat dateMonthYear -> dateMonthYear
    int NOW -> NOW
    int N_SECONDS_AGO -> N_SECONDS_AGO
    int A_MINUTE_AGO -> A_MINUTE_AGO
    int N_MINUTES_AGO -> N_MINUTES_AGO
    int AN_HOUR_AGO -> AN_HOUR_AGO
    int N_HOURS_AGO -> N_HOURS_AGO
    127:127:java.lang.String toTimeSpanString(java.util.Date) -> toTimeSpanString
    131:139:java.lang.String toTimeSpanString(long) -> toTimeSpanString
    143:161:java.lang.String toTimeSpanString(int) -> toTimeSpanString
